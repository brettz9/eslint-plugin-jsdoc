export default {
  "checkAccess": {
    "invalid": [
      "/**\n * @access foo\n */\nfunction quux (foo) {\n\n}\n// Message: Missing valid JSDoc @access level.",
      "/**\n * @access foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}\n// Message: Missing valid JSDoc @access level.",
      "/**\n * @accessLevel foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"access\":\"accessLevel\"}}}\n// Message: Missing valid JSDoc @accessLevel level.",
      "/**\n * @access\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"access\":false}}}\n// Message: Unexpected tag `@access`",
      "class MyClass {\n  /**\n   * @access\n   */\n  myClassField = 1\n}\n// Message: Missing valid JSDoc @access level.",
      "/**\n * @access public\n * @public\n */\nfunction quux (foo) {\n\n}\n// Message: The @access tag may not be used with specific access-control tags (@package, @private, @protected, or @public).",
      "/**\n * @access public\n * @access private\n */\nfunction quux (foo) {\n\n}\n// Message: At most one access-control tag may be present on a jsdoc block.",
      "/**\n * @access public\n * @access private\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}\n// Message: At most one access-control tag may be present on a jsdoc block.",
      "/**\n * @public\n * @private\n */\nfunction quux (foo) {\n\n}\n// Message: At most one access-control tag may be present on a jsdoc block.",
      "/**\n * @public\n * @private\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}\n// Message: At most one access-control tag may be present on a jsdoc block.",
      "/**\n * @public\n * @public\n */\nfunction quux (foo) {\n\n}\n// Message: At most one access-control tag may be present on a jsdoc block."
    ],
    "valid": [
      "/**\n *\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @access public\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @accessLevel package\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"access\":\"accessLevel\"}}}",
      "class MyClass {\n  /**\n   * @access private\n   */\n  myClassField = 1\n}",
      "/**\n * @public\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @private\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}"
    ]
  },
  "checkAlignment": {
    "invalid": [
      "/**\n  * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc block to be aligned.",
      "/**\n  * @param {Number} foo\n */\nfunction quux (foo) {\n\t// with tabs\n}\n// Message: Expected JSDoc block to be aligned.",
      "/**\n  * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc block to be aligned.",
      "/**\n* @param {Number} foo\n*/\nfunction quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc block to be aligned.",
      "/**\n * @param {Number} foo\n  */\nfunction quux (foo) {\n\n}\n// Message: Expected JSDoc block to be aligned.",
      " /**\n * @param {Number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Expected JSDoc block to be aligned.",
      " /**\n  * @param {Number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Expected JSDoc block to be aligned.",
      "/**\n  * @param {Number} foo\n  */\n function quux (foo) {\n\n }\n// Message: Expected JSDoc block to be aligned.",
      "/**\n   * A jsdoc not attached to any node.\n */\n// Message: Expected JSDoc block to be aligned.",
      "class Foo {\n  /**\n   *  Some method\n    * @param a\n   */\n  quux(a) {}\n}\n// Message: Expected JSDoc block to be aligned."
    ],
    "valid": [
      "/**\n * Desc\n *\n * @param {Number} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * Desc\n *\n * @param {{\n  foo: Bar,\n  bar: Baz\n * }} foo\n *\n */\nfunction quux (foo) {\n\n}",
      "/*  <- JSDoc must start with 2 stars.\n  *    So this is unchecked.\n */\nfunction quux (foo) {}",
      "/**\n  * @param {Number} foo\n  * @private\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}",
      "/**\n  * @param {Number} foo\n  * @access private\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}"
    ]
  },
  "checkExamples": {
    "invalid": [
      "/**\n * @example alert('hello')\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"no-alert\":2,\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false}]\n// Message: @example error (no-alert): Unexpected alert.",
      "/**\n * @example alert('hello')\n */\nclass quux {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"no-alert\":2,\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false}]\n// Message: @example error (no-alert): Unexpected alert.",
      "/**\n * @example ```js\n alert('hello');\n ```\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"never\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"```js([\\\\s\\\\S]*)```\"}]\n// Message: @example error (semi): Extra semicolon.",
      "/**\n * @example\n *\n * ```js alert('hello'); ```\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"never\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"```js ([\\\\s\\\\S]*)```\"}]\n// Message: @example error (semi): Extra semicolon.",
      "/**\n * @example\n * ```js alert('hello'); ```\n */\nvar quux = {\n\n};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"never\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"```js ([\\\\s\\\\S]*)```\"}]\n// Message: @example error (semi): Extra semicolon.",
      "/**\n * @example ```\n * js alert('hello'); ```\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"never\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"```\\njs ([\\\\s\\\\S]*)```\"}]\n// Message: @example error (semi): Extra semicolon.",
      "/**\n * @example <b>Not JavaScript</b>\n */\nfunction quux () {\n\n}\n/**\n * @example quux2();\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"never\"]}},\"checkEslintrc\":false,\"rejectExampleCodeRegex\":\"^\\\\s*<.*>\\\\s*$\"}]\n// Message: @example error (semi): Extra semicolon.",
      "/**\n * @example\n * quux(); // does something useful\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"no-undef\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":true}]\n// Message: @example error (no-undef): 'quux' is not defined.",
      "/**\n * @example <caption>Valid usage</caption>\n * quux(); // does something useful\n *\n * @example\n * quux('random unwanted arg'); // results in an error\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"captionRequired\":true,\"checkEslintrc\":false}]\n// Message: Caption is expected for examples.",
      "/**\n * @example  quux();\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"indent\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]\n// Message: @example error (indent): Expected indentation of 0 spaces but found 1.",
      "/**\n * @example test() // eslint-disable-line semi\n */\nfunction quux () {}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkEslintrc\":false,\"noDefaultExampleRules\":true,\"reportUnusedDisableDirectives\":true}]\n// Message: @example error: Unused eslint-disable directive (no problems were reported from 'semi').",
      "/**\n * @example\n test() // eslint-disable-line semi\n */\nfunction quux () {}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"allowInlineConfig\":false,\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":true}]\n// Message: @example error (semi): Missing semicolon.",
      "/**\n * @example const j = 5;\n * quux2();\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"matchingFileName\":\"../../jsdocUtils.js\"}]\n// Message: @example warning (id-length): Identifier name 'j' is too short (< 2).",
      "/**\n * @example const k = 5;\n * quux2();\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"configFile\":\".eslintrc.json\",\"matchingFileName\":\"../../jsdocUtils.js\"}]\n// Message: @example warning (id-length): Identifier name 'k' is too short (< 2).",
      "/**\n * @example const m = 5;\n * quux2();\n */\nfunction quux2 () {\n\n}\n// Message: @example warning (id-length): Identifier name 'm' is too short (< 2).",
      "/**\n * @example const i = 5;\n *   quux2()\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"paddedIndent\":2}]\n// Message: @example warning (id-length): Identifier name 'i' is too short (< 2).",
      "/**\n * @example\n * const i = 5;\n * quux2()\n */\nfunction quux2 () {\n\n}\n// Message: @example warning (id-length): Identifier name 'i' is too short (< 2).",
      "/**\n * @example const idx = 5;\n * quux2()\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"matchingFileName\":\"dummy.js\"}]\n// Message: @example error (semi): Missing semicolon.",
      "/**\n * @example const idx = 5;\n *\n * quux2()\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"matchingFileName\":\"dummy.js\"}]\n// Message: @example error (semi): Missing semicolon.",
      "/**\n * @example const idx = 5;\n *\n * quux2()\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkEslintrc\":false,\"matchingFileName\":\"dummy.js\"}]\n// Message: @example error: Parsing error: The keyword 'const' is reserved",
      "/**\n * @example // begin\n alert('hello')\n // end\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"warn\",\"always\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"// begin[\\\\s\\\\S]*// end\",\"noDefaultExampleRules\":true}]\n// Message: @example warning (semi): Missing semicolon.",
      "/**\n * @typedef {string} Foo\n * @example <caption></caption>\n * 'foo'\n */\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"captionRequired\":true,\"checkEslintrc\":false}]\n// Message: Caption is expected for examples.",
      "/**\n * @example\n * const list: number[] = [1, 2, 3]\n * quux(list);\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"parser\":\"@typescript-eslint/parser\",\"parserOptions\":{\"ecmaVersion\":6},\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false}]\n// Message: @example error (semi): Missing semicolon.",
      "/**\n * @example\n * const test = something.find((_) => {\n *   return _\n * });\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"parserOptions\":{\"ecmaVersion\":6},\"rules\":{\"semi\":[\"error\",\"always\"]}}}]\n// Message: @example error (semi): Missing semicolon.",
      "/**\n * @example <caption>Say `Hello!` to the user.</caption>\n * First, import the function:\n *\n * ```js\n * import popup from './popup'\n * const aConstInSameScope = 5;\n * ```\n *\n * Then use it like this:\n *\n * ```js\n * const aConstInSameScope = 7;\n * popup('Hello!')\n * ```\n *\n * Here is the result on macOS:\n *\n * ![Screenshot](path/to/screenshot.jpg)\n */\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"parserOptions\":{\"ecmaVersion\":2015,\"sourceType\":\"module\"},\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"/^```(?:js|javascript)\\\\n([\\\\s\\\\S]*?)```$/gm\"}]\n// Message: @example error (semi): Missing semicolon.",
      "/**\n * @example // begin\n alert('hello')\n // end\n * And here is another example:\n // begin\n alert('there')\n // end\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"warn\",\"always\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"/\\\\/\\\\/ begin[\\\\s\\\\S]*?// end/g\",\"noDefaultExampleRules\":true}]\n// Message: @example warning (semi): Missing semicolon.",
      "/**\n * @example\n *   quux();\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"indent\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]\n// Message: @example error (indent): Expected indentation of 0 spaces but found 2.",
      "/**\n * @default 'abc'\n */\nconst str = 'abc';\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkDefaults\":true}]\n// Message: @default error (quotes): Strings must use doublequote.",
      "/**\n * @param {myType} [name='abc']\n */\nfunction quux () {\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkParams\":true}]\n// Message: @param error (quotes): Strings must use doublequote.",
      "/**\n * @property {myType} [name='abc']\n */\nconst obj = {};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkProperties\":true}]\n// Message: @property error (quotes): Strings must use doublequote.",
      "/**\n * Test function.\n *\n * @example <caption>functionName (paramOne: string, paramTwo?: any,\n * paramThree?: any): boolean</caption> test()\n *\n * @param {string} paramOne Parameter description.\n * @param {any} [paramTwo] Parameter description.\n * @param {any} [paramThree] Parameter description.\n * @returns {boolean} Return description.\n */\nconst functionName = function (paramOne, paramTwo,\n  paramThree) {\n  return false;\n};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"parserOptions\":{\"ecmaVersion\":2015,\"sourceType\":\"module\"},\"rules\":{\"semi\":[\"error\",\"always\"]}},\"captionRequired\":true,\"checkEslintrc\":false}]\n// Message: @example error (semi): Missing semicolon."
    ],
    "valid": [
      "/**\n * @example ```js\n alert('hello');\n ```\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"```js([\\\\s\\\\S]*)```\"}]",
      "/**\n * @example ```js\n alert('hello');\n ```\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"/```js([\\\\s\\\\S]*)```/\"}]",
      "/**\n * @example\n * // arbitrary example content\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkEslintrc\":false}]",
      "/**\n * @example\n * quux(); // does something useful\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"no-undef\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]",
      "/**\n * @example quux();\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"indent\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]",
      "/**\n * @example <caption>Valid usage</caption>\n * quux(); // does something useful\n *\n * @example <caption>Invalid usage</caption>\n * quux('random unwanted arg'); // results in an error\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"captionRequired\":true,\"checkEslintrc\":false}]",
      "/**\n * @example test() // eslint-disable-line semi\n */\nfunction quux () {}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkEslintrc\":false,\"noDefaultExampleRules\":true,\"reportUnusedDisableDirectives\":false}]",
      "/**\n * @example\n test() // eslint-disable-line semi\n */\nfunction quux () {}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"allowInlineConfig\":true,\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":true}]",
      "/**\n * @example ```js\n alert('hello')\n ```\n */\nvar quux = {\n\n};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"semi\":[\"error\",\"never\"]}},\"checkEslintrc\":false,\"exampleCodeRegex\":\"```js([\\\\s\\\\S]*)```\"}]",
      "/**\n * @example\n * foo(function (err) {\n *     throw err;\n * });\n */\nfunction quux () {}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"indent\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]",
      "/**\n * @example\n * const list: number[] = [1, 2, 3];\n * quux(list);\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"parser\":\"@typescript-eslint/parser\",\"parserOptions\":{\"ecmaVersion\":6},\"rules\":{\"semi\":[\"error\",\"always\"]}},\"checkEslintrc\":false}]",
      "/**\n * @example const ident = 5;\n *   quux2();\n *   bar();\n */\nfunction quux2 () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"paddedIndent\":2}]",
      "/**\n * @example\n * function quux() {\n *     bar();\n * }\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"rules\":{\"indent\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]",
      "// Comment\na();\n\nexport default {};",
      "/**\n *\n */\nfunction f () {\n\n}",
      "/**\n * Does quux\n * @example\n * // Do it!\n * quux();\n */\nfunction quux () {\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"plugins\":[\"jsdoc\"],\"rules\":{\"jsdoc/require-file-overview\":[\"error\"]}},\"checkEslintrc\":false,\"noDefaultExampleRules\":false}]",
      "/**\n * @default \"abc\"\n */\nconst str = 'abc';\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkDefaults\":true}]",
      "/**\n * @default\n */\nconst str = 'abc';\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkDefaults\":true}]",
      "/**\n * @param {myType} [name=\"abc\"]\n */\nfunction quux () {\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkParams\":true}]",
      "/**\n * @param {myType} name\n */\nfunction quux () {\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkParams\":true}]",
      "/**\n * @property {myType} [name=\"abc\"]\n */\nconst obj = {};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkProperties\":true}]",
      "/**\n * @property {myType} [name]\n */\nconst obj = {};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkProperties\":true}]",
      "/**\n * @default 'abc'\n */\nconst str = 'abc';\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkDefaults\":false,\"matchingFileNameDefaults\":\"dummy.js\"}]",
      "/**\n * @param {myType} [name='abc']\n */\nfunction quux () {\n}\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkParams\":false,\"matchingFileNameParams\":\"dummy.js\"}]",
      "/**\n * @property {myType} [name='abc']\n */\nconst obj = {};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"checkProperties\":false,\"matchingFileNameProperties\":\"dummy.js\"}]",
      "/**\n * Test function.\n *\n * @example <caption>functionName (paramOne: string, paramTwo?: any,\n * paramThree?: any): boolean</caption> test();\n *\n * @param {string} paramOne Parameter description.\n * @param {any} [paramTwo] Parameter description.\n * @param {any} [paramThree] Parameter description.\n * @returns {boolean} Return description.\n */\nconst functionName = function (paramOne, paramTwo,\n  paramThree) {\n  return false;\n};\n// \"jsdoc/check-examples\": [\"error\"|\"warn\", {\"baseConfig\":{\"parserOptions\":{\"ecmaVersion\":2015,\"sourceType\":\"module\"},\"rules\":{\"semi\":[\"error\",\"always\"]}},\"captionRequired\":true,\"checkEslintrc\":false}]"
    ]
  },
  "checkIndentation": {
    "invalid": [
      "/**  foo */\nfunction quux () {\n\n}\n// Message: There must be no indentation.",
      "/**\n * foo\n *\n * @param bar\n *  baz\n */\nfunction quux () {\n\n}\n// Message: There must be no indentation.",
      "/**\n * Foo\n *   bar\n */\nclass Moo {}\n// Message: There must be no indentation.",
      "/**\n * foo\n *\n * @example\n * anArray.filter((a) => {\n *   return a.b;\n * });\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-indentation\": [\"error\"|\"warn\", {\"excludeTags\":[]}]\n// Message: There must be no indentation.",
      "/**\n * foo\n *\n * @example\n *   aaaa\n * @returns\n *   eeee\n */\nfunction quux () {\n\n}\n// Message: There must be no indentation.",
      "/**\n * foo\n * ```html\n * <section>\n *   <title>test</title>\n * </section>\n * ```\n * @returns\n *   eeee\n */\nfunction quux () {\n\n}\n// Message: There must be no indentation.",
      "/**\n * foo\n * ```   aaaa```\n * @returns\n *   eeee\n */\nfunction quux () {\n\n}\n// Message: There must be no indentation.",
      "/**\n* @example <caption>\n* Here is a long\n*   indented summary of this\n* example\n* </caption>\n* ```js\n* function hi () {\n*   alert('Hello');\n* }\n* ```\n*/\n// \"jsdoc/check-indentation\": [\"error\"|\"warn\", {\"excludeTags\":[]}]\n// Message: There must be no indentation.",
      "/**\n* @example <caption>\n* Here is a long\n* summary of this\n* example\n* </caption>\n* // Code is not wrapped into fenced code block\n* function hi () {\n*   alert('Hello');\n* }\n*/\n// \"jsdoc/check-indentation\": [\"error\"|\"warn\", {\"excludeTags\":[]}]\n// Message: There must be no indentation."
    ],
    "valid": [
      "/**\n * foo\n *\n * @param bar\n * baz\n */\nfunction quux () {\n\n}",
      "/*** foo */\nfunction quux () {\n\n}",
      "/**\n * foo\n *\n * @example\n * anArray.filter((a) => {\n *   return a.b;\n * });\n */\nfunction quux () {\n\n}",
      "/**\n * foo\n *\n * @example\n * anArray.filter((a) => {\n *   return a.b;\n * });\n * @returns\n *   eeee\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-indentation\": [\"error\"|\"warn\", {\"excludeTags\":[\"example\",\"returns\"]}]",
      "/**\n * foo\n * ```html\n * <section>\n *   <title>test</title>\n * </section>\n * ```\n * @returns eeee\n */\nfunction quux () {\n\n}",
      "/**\n * foo\n * ```   aaaa```\n * @returns eeee\n */\nfunction quux () {\n\n}",
      "/**\n* @example <caption>\n* Here is a long\n* summary of this\n* example\n* </caption>\n* ```js\n* function hi () {\n*   alert('Hello');\n* }\n* ```\n*/\n// \"jsdoc/check-indentation\": [\"error\"|\"warn\", {\"excludeTags\":[]}]",
      "/**\n * @example\n * ```\n * @MyDecorator({\n *   myOptions: 42\n * })\n * export class MyClass {}\n * ```\n */\nfunction MyDecorator(options: { myOptions: number }) {\n  return (Base: Function) => {};\n}\n// \"jsdoc/check-indentation\": [\"error\"|\"warn\", {\"excludeTags\":[\"example\",\"MyDecorator\"]}]",
      "/**\n * @example ```\n * @MyDecorator({\n *   myOptions: 42\n * })\n * export class MyClass {}\n * ```\n */\nfunction MyDecorator(options: { myOptions: number }) {\n  return (Base: Function) => {};\n}"
    ]
  },
  "checkLineAlignment": {
    "invalid": [
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * With tabs.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi words.\n */\n    const fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param {string} lorem - Description.\n * @param {int} sit - Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param  {string} lorem Description.\n *  @param {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param  {string} lorem Description.\n  * @param {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param  {string} lorem Description.\n * @param  {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi words.\n */\nfunction fn( lorem, sit ) {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "const object = {\n  /**\n   * Function description.\n   *\n   * @param {string} lorem Description.\n   * @param {int} sit Description multi words.\n   */\n  fn( lorem, sit ) {}\n}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "class ClassName {\n  /**\n   * Function description.\n   *\n   * @param {string} lorem Description.\n   * @param {int} sit Description multi words.\n   */\n  fn( lorem, sit ) {}\n}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @arg {string} lorem Description.\n * @arg {int} sit Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * @namespace\n * @property {object} defaults Description.\n * @property {int} defaults.lorem Description multi words.\n */\nconst config = {\n    defaults: {\n        lorem: 1\n    }\n}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * My object.\n *\n * @typedef {Object} MyObject\n *\n * @property {string} lorem Description.\n * @property {int} sit Description multi words.\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * My object.\n *\n * @typedef {Object} MyObject\n *\n * @property {{a: number, b: string, c}} lorem Description.\n * @property {Object.<string, Class>} sit Description multi words.\n * @property {Object.<string, Class>} amet Description} weird {multi} {{words}}.\n * @property {Object.<string, Class>} dolor\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * My object.\n *\n * @typedef {Object} MyObject\n *\n * @property {{a: number, b: string, c}} lorem Description.\n * @property {Object.<string, Class>} sit Description multi words.\n * @property {Object.<string, Class>} amet Description} weird {multi} {{words}}.\n * @property {Object.<string, Class>} dolor\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"tags\":[\"typedef\",\"property\"]}]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * My function.\n *\n * @param {string} lorem  Description.\n * @param {int}    sit    Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * My function.\n *\n * @param {string} lorem Description.\n * @param   {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * My function.\n *\n * @param {string} lorem Description.\n * @param   {int}    sit\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * My function.\n *\n * @param {string} lorem Description.\n * @param   {int}    sit\n */\nconst fn = ( lorem, sit ) => {}\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi\n   line without *.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * My function.\n *\n * @param {string} lorem Description.\n * @param   {int}    sit\n *\n * @return  {string}  Return description\n *    with multi line, but don't touch.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"tags\":[\"param\"]}]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Only return doc.\n *\n * @return {boolean}  Return description.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param  {object}  options  Options object for each OS.\n * @return {boolean}          True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param {object} options Options object for each OS.\n * @return {boolean}          True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param {object} options Options object for each OS.\n * @return  True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param  options Options object for each OS.\n * @return True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param {object} options Options object for each OS.\n * @param {object} other Other.\n * @return  True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\",{\"tags\":[\"param\",\"return\"]}]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Returns the value stored in the process.env for a given\n * environment variable.\n *\n * @param  {string} withPercents    '%USERNAME%'\n * @param  {string} withoutPercents 'USERNAME'\n * @return {string}                 'bob' || '%USERNAME%'\n */\nfunction quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Function description\n *           description with post delimiter.\n *\n * @param {string} lorem Description.\n * @param {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param  {string} lorem Description.\n * @param  {int}    sit   Description multi words.\n *\n * @return {string}       Return description.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"customSpacings\":{\"postDelimiter\":2,\"postTag\":3,\"postType\":2}}]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param  {string} lorem Description.\n * @param  {int}    sit   Description multi words.\n *\n * @return {string}       Return description.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"customSpacings\":{\"postName\":3}}]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n *  @param   {string}  lorem Description.\n * @param {int} sit Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\",{\"customSpacings\":{\"postDelimiter\":2,\"postTag\":3,\"postType\":2}}]\n// Message: Expected JSDoc block lines to not be aligned.",
      "/**\n * Function description.\n *\n * @param {string} lorem   Description.\n * @param {int} sit Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\",{\"customSpacings\":{\"postName\":3}}]\n// Message: Expected JSDoc block lines to not be aligned.",
      "\n       /**\\r\n        * Function description.\\r\n        *\\r\n        * @param {string} lorem Description.\\r\n        * @param {int} sit Description multi words.\\r\n        * @param {string} sth   Multi\\r\n        *                       line description.\\r\n        */\\r\n       const fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned.",
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi\n *   line with asterisks.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected JSDoc block lines to be aligned."
    ],
    "valid": [
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * With tabs.\n *\n * @param {string} lorem Description.\n * @param {int}    sit   Description multi words.\n */\n    const fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @param {string} lorem - Description.\n * @param {int}    sit   - Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * @param {string} lorem Description.\n * @param {int}    sit\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * @param {int}    sit\n * @param {string} lorem Description.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * No params.\n */\nconst fn = () => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "const fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @param {string} lorem Description.\n * @param {int}    sit   Description multi words.\n */\nfunction fn( lorem, sit ) {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "const object = {\n  /**\n   * Function description.\n   *\n   * @param {string} lorem Description.\n   * @param {int}    sit   Description multi words.\n   */\n  fn( lorem, sit ) {},\n}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "class ClassName {\n  /**\n   * Function description.\n   *\n   * @param {string} lorem Description.\n   * @param {int}    sit   Description multi words.\n   */\n  fn( lorem, sit ) {}\n}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @arg {string} lorem Description.\n * @arg {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * @namespace\n * @property {object} defaults       Description.\n * @property {int}    defaults.lorem Description multi words.\n */\nconst config = {\n    defaults: {\n        lorem: 1\n    }\n}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * My object.\n *\n * @typedef {Object} MyObject\n *\n * @property {string} lorem Description.\n * @property {int}    sit   Description multi words.\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * My object.\n *\n * @typedef {Object} MyObject\n *\n * @property {{a: number, b: string, c}} lorem Description.\n * @property {Object.<string, Class>}    sit   Description multi words.\n * @property {Object.<string, Class>}    amet  Description} weird {multi} {{words}}.\n * @property {Object.<string, Class>}    dolor\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * My object.\n *\n * @typedef  {Object}                    MyObject\n *\n * @property {{a: number, b: string, c}} lorem    Description.\n * @property {Object.<string, Class>}    sit      Description multi words.\n * @property {Object.<string, Class>}    amet     Description} weird {multi} {{words}}.\n * @property {Object.<string, Class>}    dolor\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"tags\":[\"typedef\",\"property\"]}]",
      "/**\n * My object.\n *\n * @template                             T\n * @template                             W,X,Y,Z\n * @template {string}                    K               - K must be a string or string literal\n * @template {{ serious(): string }}     Seriousalizable - must have a serious method\n *\n * @param    {{a: number, b: string, c}} lorem           Description.\n */\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"tags\":[\"template\",\"param\"]}]",
      "/** @param {number} lorem */\nconst fn = ( lorem ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param  {object}  options Options object for each OS.\n * @return {boolean}         True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param  {object}  options Options object for each OS.\n * @return {boolean}\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Only return doc.\n *\n * @return {boolean} Return description.\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Not validating without option.\n *\n * @param {string} lorem Description.\n * @param {int} sit Description multi words.\n */\nconst fn = ( lorem, sit ) => {}",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param {object} options Options object for each OS.\n * @return {boolean} True = success, false = failed to create the icon\n */\nfunction quux (options) {}",
      "/**\n * Creates OS based shortcuts for files, folders, and applications.\n *\n * @param {object} options Options object for each OS.\n * @param {object} other Other.\n * @return  True = success, false = failed to create the icon\n */\n function quux () {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\",{\"tags\":[\"param\"]}]",
      "/**\n * @param parameter Description.\n */\nfunction func(parameter){\n\n}",
      "/**\n * Function description\n *           description with post delimiter.\n *\n * @param {string} lorem Description.\n * @param {int}    sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"preserveMainDescriptionPostDelimiter\":true}]",
      "/**\n * Function description.\n *\n *  @param    {string}  lorem Description.\n *  @param    {int}     sit   Description multi words.\n *\n *  @return   {string}        Return description.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\",{\"customSpacings\":{\"postDelimiter\":2,\"postTag\":3,\"postType\":2}}]",
      "/**\n * Function description.\n *\n *  @param   {string}  lorem Description.\n *  @param   {int}  sit Description multi words.\n *\n *  @return   {string}  Return description.\n */\nconst fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"never\",{\"customSpacings\":{\"postDelimiter\":2,\"postTag\":3,\"postType\":2}}]",
      "/**\n * @param {{\n *        ids: number[]\n *        }}            params\n */\nconst fn = ({ids}) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "\n       /**\\r\n        * Function description.\\r\n        *\\r\n        * @param {string} lorem Description.\\r\n        * @param {int}    sit   Description multi words.\\r\n        * @param {string} sth   Multi\\r\n        *                       line description.\\r\n        */\\r\n       const fn = ( lorem, sit ) => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @param lorem Description.\n * @param sit   Description multi words.\n */\nconst fn = ( lorem, sit ) => {};\n\n/**\n * Function description.\n *\n * @return Return description.\n */\nconst fn2 = () => {}\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @param lorem Description.\n * @param sit   Description multi words.\n * @return      Return description.\n */\nconst fn = ( lorem, sit ) => {};\n\n/**\n * Function description.\n *\n * @param lorem Description.\n * @param sit   Description multi words.\n * @returns     Return description.\n */\nconst fn2 = ( lorem, sit ) => {};\n\n/**\n * Function description.\n *\n * @param a Description.\n * @param b Description multi words.\n * @returns Return description.\n */\nconst fn3 = ( a, b ) => {};\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @argument lorem Description.\n * @return         Return description.\n */\nconst fn = ( lorem ) => {};\n\n/**\n * Function description.\n *\n * @argument lorem Description.\n * @returns        Return description.\n */\nconst fn2 = ( lorem ) => {};\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @arg a   Description.\n * @returns Return description.\n */\nconst fn = ( a ) => {};\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @arg   lorem Description.\n * @param sit   Return description.\n */\nconst fn = ( lorem, sit ) => {};\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Function description.\n *\n * @arg      a Description.\n * @argument b Second description.\n * @returns    Return description.\n */\nconst fn = ( a, b ) => {};\n// \"jsdoc/check-line-alignment\": [\"error\"|\"warn\", \"always\"]"
    ]
  },
  "checkParamNames": {
    "invalid": [
      "/**\n * @param Foo\n */\nfunction quux (foo = 'FOO') {\n\n}\n// Message: Expected @param names to be \"foo\". Got \"Foo\".",
      "/**\n * @arg Foo\n */\nfunction quux (foo = 'FOO') {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}\n// Message: Expected @arg names to be \"foo\". Got \"Foo\".",
      "/**\n * @param Foo\n */\nfunction quux (foo) {\n\n}\n// Message: Expected @param names to be \"foo\". Got \"Foo\".",
      "/**\n * @param Foo.Bar\n */\nfunction quux (foo) {\n\n}\n// Message: @param path declaration (\"Foo.Bar\") appears before any real parameter.",
      "/**\n * @param foo\n * @param Foo.Bar\n */\nfunction quux (foo) {\n\n}\n// Message: @param path declaration (\"Foo.Bar\") root node name (\"Foo\") does not match previous real parameter name (\"foo\").",
      "/**\n * Assign the project to a list of employees.\n * @param {string} employees[].name - The name of an employee.\n * @param {string} employees[].department - The employee's department.\n */\nfunction assign (employees) {\n\n};\n// Message: @param path declaration (\"employees[].name\") appears before any real parameter.",
      "/**\n * Assign the project to a list of employees.\n * @param {string} employees[].name - The name of an employee.\n * @param {string} employees[].name - The employee's department.\n */\nfunction assign (employees) {\n\n};\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"employees[].name\"",
      "/**\n * @param foo\n * @param foo.bar\n * @param bar\n */\nfunction quux (bar, foo) {\n\n}\n// Message: Expected @param names to be \"bar, foo\". Got \"foo, bar\".",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo) {\n\n}\n// Message: @param \"bar\" does not match an existing function parameter.",
      "/**\n * @param foo\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"foo\"",
      "class bar {\n    /**\n     * @param foo\n     * @param foo\n     */\n    quux (foo) {\n\n    }\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"foo\"",
      "/**\n * @param foo\n * @param foo\n */\nfunction quux (foo, bar) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"foo\"",
      "/**\n * @param foo\n * @param foo\n */\nfunction quux (foo, foo) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"foo\"",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param cfg.foo\n */\nfunction quux ({foo}) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"cfg.foo\"",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param cfg.foo\n */\nfunction quux ({foo}) {\n\n}\n// Message: Duplicate @param \"cfg.foo\"",
      "/**\n * @param cfg\n * @param cfg.foo\n */\nfunction quux ({foo, bar}) {\n\n}\n// Message: Missing @param \"cfg.bar\"",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param [cfg.foo]\n * @param baz\n */\nfunction quux ({foo}, baz) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"cfg.foo\"",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param [cfg.foo=\"with a default\"]\n * @param baz\n */\nfunction quux ({foo, bar}, baz) {\n\n}\n// Message: Missing @param \"cfg.bar\"",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param [cfg.foo=\"with a default\"]\n * @param baz\n */\nfunction quux ({foo}, baz) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"cfg.foo\"",
      "/**\n * @param cfg\n * @param [cfg.foo=\"with a default\"]\n * @param baz\n */\nfunction quux ({foo, bar}, baz) {\n\n}\n// Message: Missing @param \"cfg.bar\"",
      "/**\n * @param args\n */\nfunction quux ({a, b}) {\n\n}\n// Message: Missing @param \"args.a\"",
      "/**\n * @param args\n */\nfunction quux ({a, b} = {}) {\n\n}\n// Message: Missing @param \"args.a\"",
      "export class SomeClass {\n  /**\n   * @param prop\n   */\n  constructor(private property: string) {}\n}\n// Message: Expected @param names to be \"property\". Got \"prop\".",
      "export class SomeClass {\n  /**\n   * @param prop\n   * @param prop.foo\n   */\n  constructor(prop: { foo: string, bar: string }) {}\n}\n// Message: Missing @param \"prop.bar\"",
      "export class SomeClass {\n  /**\n   * @param prop\n   * @param prop.foo\n   * @param prop.bar\n   */\n  constructor(options: { foo: string, bar: string }) {}\n}\n// Message: @param \"prop\" does not match parameter name \"options\"",
      "export class SomeClass {\n  /**\n   * @param options\n   * @param options.foo\n   * @param options.bar\n   */\n  constructor(options: { foo: string }) {}\n}\n// Message: @param \"options.bar\" does not exist on options",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":false}}}\n// Message: Unexpected tag `@param`",
      "/**\n * @param {Error} error Exit code\n * @param {number} [code = 1] Exit code\n */\nfunction quux (error, cde = 1) {\n};\n// Message: Expected @param names to be \"error, cde\". Got \"error, code\".",
      "/**\n * @param foo\n */\nfunction quux ([a, b] = []) {\n\n}\n// Message: Missing @param \"foo.\"0\"\"",
      "/**\n * @param options\n * @param options.foo\n */\nfunction quux ({foo, ...extra}) {\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkRestProperty\":true}]\n// Message: Missing @param \"options.extra\"",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param cfg.bar\n * @param cfg.extra\n */\nfunction quux ({foo, ...extra}) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkRestProperty\":true}]\n// Message: @param \"cfg.bar\" does not exist on cfg",
      "/**\n * Converts an SVGRect into an object.\n * @param {SVGRect} bbox - a SVGRect\n */\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"SVGRect\"}]\n// Message: Missing @param \"bbox.x\"",
      "/**\n * Converts an SVGRect into an object.\n * @param {object} bbox - a SVGRect\n */\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};\n// Message: Missing @param \"bbox.x\"",
      "module.exports = class GraphQL {\n  /**\n   * @param fetchOptions\n   * @param cacheKey\n   */\n  fetch = ({ url, ...options }, cacheKey) => {\n  }\n};\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkRestProperty\":true}]\n// Message: Missing @param \"fetchOptions.url\"",
      "/**\n * Testing\n *\n * @param options\n * @param options.one One\n * @param options.two Two\n * @param options.four Four\n */\nfunction testingEslint(options: {\n  one: string;\n  two: string;\n  three: string;\n}): string {\n  return one + two + three;\n}\n// Message: Missing @param \"options.three\"",
      "/**\n *\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":false,\"required\":[\"name\"]}}}}\n// Message: Cannot add \"name\" to `require` with the tag's `name` set to `false`",
      "/**\n * @param root\n * @param foo\n */\nfunction quux ({foo, bar}, baz) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkDestructured\":false}]\n// Message: Expected @param names to be \"root, baz\". Got \"root, foo\".",
      "/**\n * Description.\n * @param {Object} options\n * @param {FooBar} foo\n */\nfunction quux ({ foo: { bar } }) {}\n// Message: Missing @param \"options.foo\"",
      "/**\n * Description.\n * @param {Object} options\n * @param options.foo\n */\nfunction quux ({ foo: { bar } }) {}\n// Message: Missing @param \"options.foo.bar\"",
      "/**\n * Description.\n * @param {object} options Options.\n * @param {object} options.foo A description.\n * @param {object} options.foo.bar\n */\nfunction foo({ foo: { bar: { baz } }}) {}\n// Message: Missing @param \"options.foo.bar.baz\"",
      "/**\n* Returns a number.\n* @param {Object} props Props.\n* @param {Object} props.prop Prop.\n* @param {string} props.prop.a String.\n* @param {string} props.prop.b String.\n* @return {number} A number.\n*/\nexport function testFn1 ({ prop = { a: 1, b: 2 } }) {\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"useDefaultObjectProperties\":false}]\n// Message: @param \"props.prop.a\" does not exist on props",
      "/**\n * @param {object} cfg\n * @param {string} cfg.foo\n * @param {string} cfg.bar\n * @param {object} cfg.extra\n */\nfunction quux ({foo}) {\n\n}\n// Message: @param \"cfg.bar\" does not exist on cfg",
      "/**\n * @param {object} cfg\n * @param {string} cfg.foo\n * @param {string} cfg.bar\n * @param {object} cfg.extra\n */\nfunction quux ({foo}) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"disableExtraPropertyReporting\":true}]\n// Message: @param \"cfg.bar\" does not exist on cfg",
      "/**\n * @param {object} root\n * @param {object} root.cfg\n * @param {object} root.cfg.a\n * @param {string} root.cfg.a.foo\n * @param {string} root.cfg.a.bar\n * @param {object} root.cfg.a.extra\n */\nfunction quux ({cfg: {a: {foo}}}) {\n\n}\n// Message: @param \"root.cfg.a.bar\" does not exist on root",
      "/**\n * @param {object} root\n * @param {object} root.cfg\n * @param {object} root.cfg.a\n * @param {string} root.cfg.a.foo\n * @param {string} root.cfg.a.bar\n * @param {object} root.cfg.a.extra\n */\nfunction quux ({cfg: {a: {foo}}}) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"disableExtraPropertyReporting\":true}]\n// Message: @param \"root.cfg.a.bar\" does not exist on root",
      "/**\n * @param {object} root\n * @param {object} root.cfg\n * @param {string} root.cfg.foo\n * @param {string} root.cfg.bar\n * @param {object} root.cfg.extra\n */\nfunction quux ({cfg}) {\n\n}\n// Message: @param \"root.cfg.foo\" does not exist on root",
      "/**\n * @param foo\n * @param foo\n *   on another line\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @param \"foo\"",
      "/**\n * @param barr This is the description of bar. Oops, we misspelled \"bar\" as \"barr\".\n */\ndeclare function foo(bar: number) {}\n// Message: Expected @param names to be \"bar\". Got \"barr\"."
    ],
    "valid": [
      "/**\n *\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo, bar) {\n\n}",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo, bar, baz) {\n\n}",
      "/**\n * @param foo\n * @param foo.foo\n * @param bar\n */\nfunction quux (foo, bar) {\n\n}",
      "/**\n * @param args\n */\nfunction quux (...args) {\n\n}",
      "/**\n * @param foo\n * @param foo.a\n * @param foo.b\n */\nfunction quux ({a, b}) {\n\n}",
      "/**\n * @param foo\n * @param foo.a\n * @param foo.b\n */\nfunction quux ({\"a\": A, b}) {\n\n}",
      "/**\n * @param foo\n * @param foo.\"a\"\n * @param foo.b\n */\nfunction quux ({a: A, b}) {\n\n}",
      "/**\n * @param foo\n * @param foo.\"a-b\"\n * @param foo.b\n */\nfunction quux ({\"a-b\": A, b}) {\n\n}",
      "/**\n * @param foo\n * @param foo.bar\n * @param foo.baz\n * @param bar\n */\nfunction quux (foo, bar) {\n\n}",
      "/**\n * Assign the project to a list of employees.\n * @param {object[]} employees - The employees who are responsible for the project.\n * @param {string} employees[].name - The name of an employee.\n * @param {string} employees[].department - The employee's department.\n */\nfunction assign (employees) {\n\n};",
      "export class SomeClass {\n  /**\n   * @param property\n   */\n  constructor(private property: string) {}\n}",
      "export class SomeClass {\n  /**\n   * @param options\n   * @param options.foo\n   * @param options.bar\n   */\n  constructor(options: { foo: string, bar: string }) {}\n}",
      "export class SomeClass {\n  /**\n   * @param options\n   * @param options.foo\n   * @param options.bar\n   */\n  constructor({ foo, bar }: { foo: string, bar: string }) {}\n}",
      "export class SomeClass {\n  /**\n   * @param options\n   * @param options.foo\n   * @param options.bar\n   */\n  constructor({ foo, bar }: { foo: string, bar: string }) {}\n}",
      "/**\n * @param {Error} error Exit code\n * @param {number} [code = 1] Exit code\n */\nfunction quux (error, code = 1) {\n};",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"allowExtraTrailingParamDocs\":true}]",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param baz\n */\nfunction quux ({foo}, baz) {\n\n}",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param cfg2\n */\nfunction quux ({foo}, cfg2) {\n\n}",
      "/**\n * @param cfg\n * @param cfg.foo\n * @param baz\n * @param baz.cfg\n */\nfunction quux ({foo}, {cfg}) {\n\n}",
      "/**\n * @param options\n * @param options.foo\n */\nfunction quux ({foo, ...extra}) {\n}",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo, bar, ...extra) {\n\n}",
      "/**\n* Converts an SVGRect into an object.\n* @param {SVGRect} bbox - a SVGRect\n*/\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};",
      "/**\n* Converts an SVGRect into an object.\n* @param {SVGRect} bbox - a SVGRect\n*/\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};",
      "/**\n* Converts an SVGRect into an object.\n* @param {object} bbox - a SVGRect\n*/\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"SVGRect\"}]",
      "class CSS {\n  /**\n   * Set one or more CSS properties for the set of matched elements.\n   *\n   * @param {Object} propertyObject - An object of property-value pairs to set.\n   */\n  setCssObject(propertyObject: {[key: string]: string | number}): void {\n  }\n}",
      "/**\n * Logs a string.\n *\n * @param input - String to output.\n */\nexport default function (input: {\n  [foo: string]: { a: string; b: string };\n}): void {\n  input;\n}",
      "export class Thing {\n  foo: any;\n\n  /**\n   * @param {} C\n   */\n  constructor(C: { new (): any }) {\n    this.foo = new C();\n  }\n}",
      "/**\n * @param foo\n * @param root\n */\nfunction quux (foo, {bar}) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkDestructured\":false}]",
      "class A {\n  /**\n   * Show a prompt.\n   * @param hideButton true if button should be hidden, false otherwise\n   * @param onHidden delegate to call when the prompt is hidden\n   */\n  public async showPrompt(hideButton: boolean, onHidden: {(): void}): Promise<void>\n  {\n  }\n}",
      "/**\n * Description.\n * @param {Object} options Options.\n * @param {FooBar} options.foo foo description.\n */\nfunction quux ({ foo: { bar }}) {}",
      "/**\n * Description.\n * @param {FooBar} options\n * @param {Object} options.foo\n */\nfunction quux ({ foo: { bar } }) {}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"FooBar\"}]",
      "/**\n * Description.\n * @param {Object} options\n * @param {FooBar} options.foo\n * @param {FooBar} options.baz\n */\nfunction quux ({ foo: { bar }, baz: { cfg } }) {}",
      "/**\n * Item\n *\n * @param {object} props\n * @param {object} props.data - case data\n * @param {string} props.data.className - additional css class\n * @param props.val\n */\nexport default function Item({\n  data: {\n    className,\n  } = {},\n  val = 4\n}) {\n}",
      "/**\n * @param obj\n * @param obj.data\n * @param obj.data.\"0\"\n * @param obj.data.\"1\"\n * @param obj.data.\"2\"\n * @param obj.defaulting\n * @param obj.defaulting.\"0\"\n * @param obj.defaulting.\"1\"\n */\nfunction Item({\n  data: [foo, bar, ...baz],\n  defaulting: [quux, xyz] = []\n}) {\n}",
      "/**\n* Returns a number.\n* @param {Object} props Props.\n* @param {Object} props.prop Prop.\n* @param {string} props.prop.a String.\n* @param {string} props.prop.b String.\n* @return {number} A number.\n*/\nexport function testFn1 ({ prop = { a: 1, b: 2 } }) {\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"useDefaultObjectProperties\":true}]",
      "/**\n * @param {object} root\n * @param {object} root.cfg\n * @param {string} root.cfg.foo\n * @param {string} root.cfg.bar\n * @param {object} root.cfg.extra\n */\nfunction quux ({cfg}) {\n\n}\n// \"jsdoc/check-param-names\": [\"error\"|\"warn\", {\"disableExtraPropertyReporting\":true}]",
      "class A {\n    /**\n     * @param cfg\n     * @param cfg.abc\n     */\n    constructor({\n        [new.target.prop]: cX,\n        abc\n    }) {\n    }\n}",
      "/**\n * @param root\n * @param root.\"0\" Ignored\n * @param root.\"1\" Our \"b\"\n */\nconst foo = ([, b]) => b;",
      "/**\n * @param arg1 This is the description for arg1.\n */\nfunction foo(this: void, arg1: number): void;",
      "declare global {\n  /**\n   * @param arg1 This is the number for foo.\n   */\n  function foo(this: void, arg1: number): void;\n}",
      "declare global {\n  /**\n   * @param r Range is 0-1.\n   * @param g Range is 0-1.\n   * @param b Range is 0-1.\n   */\n  function Color(\n    this: void,\n    r: float,\n    g: float,\n    b: float,\n  ): Color;\n}",
      "/**\n * @param this desc\n * @param bar number to return\n * @returns number returned back to caller\n */\nfunction foo(this: T, bar: number): number {\n  console.log(this.name);\n  return bar;\n}"
    ]
  },
  "checkPropertyNames": {
    "invalid": [
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property Foo.Bar\n */\n// Message: @property path declaration (\"Foo.Bar\") appears before any real property.",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n * @property Foo.Bar\n */\n// Message: @property path declaration (\"Foo.Bar\") root node name (\"Foo\") does not match previous real property name (\"foo\").",
      "/**\n * Assign the project to a list of employees.\n * @typedef (SomeType) SomeTypedef\n * @property {string} employees[].name - The name of an employee.\n * @property {string} employees[].department - The employee's department.\n */\n// Message: @property path declaration (\"employees[].name\") appears before any real property.",
      "/**\n * Assign the project to a list of employees.\n * @typedef (SomeType) SomeTypedef\n * @property {string} employees[].name - The name of an employee.\n * @property {string} employees[].name - The employee's department.\n */\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @property \"employees[].name\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n * @property foo\n */\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @property \"foo\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n * @property foo\n */\n// Message: Duplicate @property \"foo\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property cfg\n * @property cfg.foo\n * @property cfg.foo\n */\nfunction quux ({foo, bar}) {\n\n}\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @property \"cfg.foo\"",
      "class Test {\n    /**\n     * @typedef (SomeType) SomeTypedef\n     * @property cfg\n     * @property cfg.foo\n     * @property cfg.foo\n     */\n    quux ({foo, bar}) {\n\n    }\n}\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @property \"cfg.foo\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property cfg\n * @property cfg.foo\n * @property [cfg.foo]\n * @property baz\n */\nfunction quux ({foo, bar}, baz) {\n\n}\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @property \"cfg.foo\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property cfg\n * @property cfg.foo\n * @property [cfg.foo=\"with a default\"]\n * @property baz\n */\nfunction quux ({foo, bar}, baz) {\n\n}\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @property \"cfg.foo\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @prop foo\n * @prop foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":\"prop\"}}}\n// \"jsdoc/check-property-names\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Duplicate @prop \"foo\"",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":false}}}\n// Message: Unexpected tag `@property`"
    ],
    "valid": [
      "/**\n *\n */",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n */",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @prop foo\n */",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n * @property bar\n */",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n * @property foo.foo\n * @property bar\n */",
      "/**\n * Assign the project to a list of employees.\n * @typedef (SomeType) SomeTypedef\n * @property {object[]} employees - The employees who are responsible for the project.\n * @property {string} employees[].name - The name of an employee.\n * @property {string} employees[].department - The employee's department.\n */",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property {Error} error Exit code\n * @property {number} [code = 1] Exit code\n */",
      "/**\n * @namespace (SomeType) SomeNamespace\n * @property {Error} error Exit code\n * @property {number} [code = 1] Exit code\n */",
      "/**\n * @class\n * @property {Error} error Exit code\n * @property {number} [code = 1] Exit code\n */\nfunction quux (code = 1) {\n  this.error = new Error('oops');\n  this.code = code;\n}",
      "/**\n * @typedef (SomeType) SomeTypedef\n * @property foo\n * @property foo.bar\n * @property foo.baz\n * @property bar\n */"
    ]
  },
  "checkSyntax": {
    "invalid": [
      "/**\n * @param {string=} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Syntax should not be Google Closure Compiler style."
    ],
    "valid": [
      "/**\n * @param {string=} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @param {string} [foo]\n */\nfunction quux (foo) {\n\n}",
      "/**\n *\n */\nfunction quux (foo) {\n\n}"
    ]
  },
  "checkTagNames": {
    "invalid": [
      "/** @typoo {string} */\nlet a;\n// Message: Invalid JSDoc tag name \"typoo\".",
      "/** @typoo {string} */\nlet a;\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"parameter\":{\"name\":\"namepath-referencing\",\"required\":[\"type\",\"name\"],\"type\":true}}}}\n// Message: Invalid JSDoc tag name \"typoo\".",
      "/**\n * @Param\n */\nfunction quux () {\n\n}\n// Message: Invalid JSDoc tag name \"Param\".",
      "/**\n * @foo\n */\nfunction quux () {\n\n}\n// Message: Invalid JSDoc tag name \"foo\".",
      "/**\n * @arg foo\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc tag (preference). Replace \"arg\" JSDoc tag with \"param\".",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}\n// Message: Invalid JSDoc tag (preference). Replace \"param\" JSDoc tag with \"arg\".",
      "/**\n * @constructor foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"tag constructor\":\"cons\"}}}\n// Message: Invalid JSDoc tag (preference). Replace \"constructor\" JSDoc tag with \"cons\".",
      "/**\n * @arg foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"arg\":\"somethingDifferent\"}}}\n// Message: Invalid JSDoc tag (preference). Replace \"arg\" JSDoc tag with \"somethingDifferent\".",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"parameter\"}}}\n// Message: Invalid JSDoc tag (preference). Replace \"param\" JSDoc tag with \"parameter\".",
      "/**\n * @bar foo\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc tag name \"bar\".",
      "/**\n * @baz @bar foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-tag-names\": [\"error\"|\"warn\", {\"definedTags\":[\"bar\"]}]\n// Message: Invalid JSDoc tag name \"baz\".",
      "/**\n * @bar\n * @baz\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-tag-names\": [\"error\"|\"warn\", {\"definedTags\":[\"bar\"]}]\n// Message: Invalid JSDoc tag name \"baz\".",
      "/**\n * @todo\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"todo\":false}}}\n// Message: Blacklisted tag found (`@todo`)",
      "/**\n * @todo\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"todo\":{\"message\":\"Please resolve to-dos or add to the tracker\"}}}}\n// Message: Please resolve to-dos or add to the tracker",
      "/**\n * @todo\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"todo\":{\"message\":\"Please use x-todo instead of todo\",\"replacement\":\"x-todo\"}}}}\n// Message: Please use x-todo instead of todo",
      "/**\n * @todo\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"todo\":{\"message\":\"Please use x-todo instead of todo\",\"replacement\":\"x-todo\"}}}}\n// Message: Please use x-todo instead of todo",
      "/**\n * @todo\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"todo\":55}}}\n// Message: Invalid `settings.jsdoc.tagNamePreference`. Values must be falsy, a string, or an object.",
      "/**\n * @property {object} a\n * @prop {boolean} b\n */\nfunction quux () {\n\n}\n// Message: Invalid JSDoc tag (preference). Replace \"prop\" JSDoc tag with \"property\".",
      "/**\n * @abc foo\n * @abcd bar\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"abc\":\"abcd\"}}}\n// \"jsdoc/check-tag-names\": [\"error\"|\"warn\", {\"definedTags\":[\"abcd\"]}]\n// Message: Invalid JSDoc tag (preference). Replace \"abc\" JSDoc tag with \"abcd\".",
      "/**\n * @abc\n * @abcd\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"abc\":\"abcd\"}}}\n// Message: Invalid JSDoc tag (preference). Replace \"abc\" JSDoc tag with \"abcd\".",
      "/**\n * @returns\n */\nfunction quux (foo) {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Invalid JSDoc tag (preference). Replace \"returns\" JSDoc tag with \"return\".",
      "/** \n * @modifies\n * @abstract\n * @access\n * @alias\n * @async\n * @augments\n * @author\n * @borrows\n * @callback\n * @class\n * @classdesc\n * @constant\n * @constructs\n * @copyright\n * @default\n * @deprecated\n * @description\n * @enum\n * @event\n * @example\n * @exports\n * @external\n * @file\n * @fires\n * @function\n * @generator\n * @global\n * @hideconstructor\n * @ignore\n * @implements\n * @inheritdoc\n * @inheritDoc\n * @inner\n * @instance\n * @interface\n * @kind\n * @lends\n * @license\n * @listens\n * @member\n * @memberof\n * @memberof!\n * @mixes\n * @mixin\n * @module\n * @name\n * @namespace\n * @override\n * @package\n * @param\n * @private\n * @property\n * @protected\n * @public\n * @readonly\n * @requires\n * @returns\n * @see\n * @since\n * @static\n * @summary\n * @this\n * @throws\n * @todo\n * @tutorial\n * @type\n * @typedef\n * @variation\n * @version\n * @yields\n */\nfunction quux (foo) {}\n// Settings: {\"jsdoc\":{\"mode\":\"badMode\"}}\n// Message: Unrecognized value `badMode` for `settings.jsdoc.mode`.",
      "/** \n * @modifies\n * @abstract\n * @access\n * @alias\n * @async\n * @augments\n * @author\n * @borrows\n * @callback\n * @class\n * @classdesc\n * @constant\n * @constructs\n * @copyright\n * @default\n * @deprecated\n * @description\n * @enum\n * @event\n * @example\n * @exports\n * @external\n * @file\n * @fires\n * @function\n * @generator\n * @global\n * @hideconstructor\n * @ignore\n * @implements\n * @inheritdoc\n * @inheritDoc\n * @inner\n * @instance\n * @interface\n * @kind\n * @lends\n * @license\n * @listens\n * @member\n * @memberof\n * @memberof!\n * @mixes\n * @mixin\n * @module\n * @name\n * @namespace\n * @override\n * @package\n * @param\n * @private\n * @property\n * @protected\n * @public\n * @readonly\n * @requires\n * @returns\n * @see\n * @since\n * @static\n * @summary\n * @this\n * @throws\n * @todo\n * @tutorial\n * @type\n * @typedef\n * @variation\n * @version\n * @yields\n * @internal\n * @template\n */\nfunction quux (foo) {}\n// Message: Invalid JSDoc tag name \"internal\".",
      "/** \n * @externs\n */\nfunction quux (foo) {}\n// Message: Invalid JSDoc tag name \"externs\".",
      "/** @jsx h */\n/** @jsxFrag Fragment */\n/** @jsxImportSource preact */\n/** @jsxRuntime automatic */\n// Message: Invalid JSDoc tag name \"jsx\".",
      "/**\n * @constructor\n */\nfunction Test() {\n  this.works = false;\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":\"return\"}}}\n// Message: Invalid JSDoc tag (preference). Replace \"constructor\" JSDoc tag with \"class\"."
    ],
    "valid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @memberof! foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @arg foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}",
      "/**\n * @parameter foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"parameter\":{\"name\":\"namepath-referencing\",\"required\":[\"type\",\"name\"],\"type\":true}}}}",
      "/**\n * @bar foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-tag-names\": [\"error\"|\"warn\", {\"definedTags\":[\"bar\"]}]",
      "/**\n * @baz @bar foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-tag-names\": [\"error\"|\"warn\", {\"definedTags\":[\"baz\",\"bar\"]}]",
      "/**\n * @baz @bar foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"baz\",\"returns\":{\"message\":\"Prefer `bar`\",\"replacement\":\"bar\"},\"todo\":false}}}",
      "/**\n * @returns\n */\nfunction quux (foo) {}",
      "/**\n * @return\n */\nfunction quux (foo) {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/** \n * @modifies\n * @abstract\n * @access\n * @alias\n * @async\n * @augments\n * @author\n * @borrows\n * @callback\n * @class\n * @classdesc\n * @constant\n * @constructs\n * @copyright\n * @default\n * @deprecated\n * @description\n * @enum\n * @event\n * @example\n * @exports\n * @external\n * @file\n * @fires\n * @function\n * @generator\n * @global\n * @hideconstructor\n * @ignore\n * @implements\n * @inheritdoc\n * @inheritDoc\n * @inner\n * @instance\n * @interface\n * @kind\n * @lends\n * @license\n * @listens\n * @member\n * @memberof\n * @memberof!\n * @mixes\n * @mixin\n * @module\n * @name\n * @namespace\n * @override\n * @package\n * @param\n * @private\n * @property\n * @protected\n * @public\n * @readonly\n * @requires\n * @returns\n * @see\n * @since\n * @static\n * @summary\n * @this\n * @throws\n * @todo\n * @tutorial\n * @type\n * @typedef\n * @variation\n * @version\n * @yields\n */\nfunction quux (foo) {}",
      "/** \n * @modifies\n * @abstract\n * @access\n * @alias\n * @async\n * @augments\n * @author\n * @borrows\n * @callback\n * @class\n * @classdesc\n * @constant\n * @constructs\n * @copyright\n * @default\n * @deprecated\n * @description\n * @enum\n * @event\n * @example\n * @exports\n * @external\n * @file\n * @fires\n * @function\n * @generator\n * @global\n * @hideconstructor\n * @ignore\n * @implements\n * @inheritdoc\n * @inheritDoc\n * @inner\n * @instance\n * @interface\n * @kind\n * @lends\n * @license\n * @listens\n * @member\n * @memberof\n * @memberof!\n * @mixes\n * @mixin\n * @module\n * @name\n * @namespace\n * @override\n * @package\n * @param\n * @private\n * @property\n * @protected\n * @public\n * @readonly\n * @requires\n * @returns\n * @see\n * @since\n * @static\n * @summary\n * @this\n * @throws\n * @todo\n * @tutorial\n * @type\n * @typedef\n * @variation\n * @version\n * @yields\n * @internal\n * @template\n */\nfunction quux (foo) {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/** \n * @externs\n */\nfunction quux (foo) {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n *\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @todo\n */\nfunction quux () {\n\n}",
      "/**\n * @extends Foo\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"augments\":{\"message\":\"@extends is to be used over @augments.\",\"replacement\":\"extends\"}}}}",
      "/**\n * (Set tag name preference to itself to get aliases to\n *   work along with main tag name.)\n * @augments Bar\n * @extends Foo\n */\nfunction quux () {\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"extends\":\"extends\"}}}",
      "/**\n * Registers the `target` class as a transient dependency; each time the dependency is resolved a new instance will be created.\n *\n * @param target - The class / constructor function to register as transient.\n *\n * @example ```ts\n@transient()\nclass Foo { }\n```\n * @param Time for a new tag\n */\nexport function transient<T>(target?: T): T {\n  // ...\n}",
      "/** @jsx h */\n/** @jsxFrag Fragment */\n/** @jsxImportSource preact */\n/** @jsxRuntime automatic */\n// \"jsdoc/check-tag-names\": [\"error\"|\"warn\", {\"jsxTags\":true}]",
      "/**\n * @internal\n */\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}"
    ]
  },
  "checkTypes": {
    "invalid": [
      "/**\n * @param {abc} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":100}}}\n// Message: Invalid `settings.jsdoc.preferredTypes`. Values must be falsy, a string, or an object.",
      "/**\n * @param {Number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @param \"foo\" type \"Number\"; prefer: \"number\".",
      "/**\n * @arg {Number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @arg \"foo\" type \"Number\"; prefer: \"number\".",
      "/**\n * @returns {Number} foo\n * @throws {Number} foo\n */\nfunction quux () {\n\n}\n// Message: Invalid JSDoc @returns type \"Number\"; prefer: \"number\".",
      "/**\n * @param {(Number | string | Boolean)=} foo\n */\nfunction quux (foo, bar, baz) {\n\n}\n// Message: Invalid JSDoc @param \"foo\" type \"Number\"; prefer: \"number\".",
      "/**\n * @param {Array.<Number | String>} foo\n */\nfunction quux (foo, bar, baz) {\n\n}\n// Message: Invalid JSDoc @param \"foo\" type \"Number\"; prefer: \"number\".",
      "/**\n * @param {(Number | String)[]} foo\n */\nfunction quux (foo, bar, baz) {\n\n}\n// Message: Invalid JSDoc @param \"foo\" type \"Number\"; prefer: \"number\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":\"Abc\",\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":{\"replacement\":\"Abc\"},\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":{\"message\":\"Messed up JSDoc @{{tagName}}{{tagValue}} type \\\"abc\\\"; prefer: \\\"Abc\\\".\",\"replacement\":\"Abc\"},\"string\":\"Str\"}}}\n// Message: Messed up JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {abc} foo\n * @param {cde} bar\n * @param {object} baz\n */\nfunction qux(foo, bar, baz) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":{\"message\":\"Messed up JSDoc @{{tagName}}{{tagValue}} type \\\"abc\\\"; prefer: \\\"Abc\\\".\",\"replacement\":\"Abc\"},\"cde\":{\"message\":\"More messed up JSDoc @{{tagName}}{{tagValue}} type \\\"cde\\\"; prefer: \\\"Cde\\\".\",\"replacement\":\"Cde\"},\"object\":\"Object\"}}}\n// Message: Messed up JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":{\"message\":\"Messed up JSDoc @{{tagName}}{{tagValue}} type \\\"abc\\\".\",\"replacement\":false},\"string\":\"Str\"}}}\n// Message: Messed up JSDoc @param \"foo\" type \"abc\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":{\"message\":\"Messed up JSDoc @{{tagName}}{{tagValue}} type \\\"abc\\\".\"},\"string\":\"Str\"}}}\n// Message: Messed up JSDoc @param \"foo\" type \"abc\".",
      "/**\n * @param {abc} foo\n * @param {Number} bar\n */\nfunction qux(foo, bar) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":\"Abc\",\"string\":\"Str\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"noDefaults\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {abc} foo\n * @param {Number} bar\n */\nfunction qux(foo, bar) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":\"Abc\",\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":false,\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"abc\".",
      "/**\n * @param {abc} foo\n */\nfunction qux(foo) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":false}}}\n// Message: Invalid JSDoc @param \"foo\" type \"abc\".",
      "/**\n * @param {*} baz\n */\nfunction qux(baz) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"*\":false,\"abc\":\"Abc\",\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"baz\" type \"*\".",
      "/**\n * @param {*} baz\n */\nfunction qux(baz) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"*\":\"aaa\",\"abc\":\"Abc\",\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"baz\" type \"*\"; prefer: \"aaa\".",
      "/**\n * @param {abc} foo\n * @param {Number} bar\n */\nfunction qux(foo, bar) {\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"abc\":\"Abc\",\"string\":\"Str\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"abc\"; prefer: \"Abc\".",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"GenericArray\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"GenericArray\".",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"GenericArray\",\"Array.<>\":\"GenericArray\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"GenericArray\".",
      "/**\n * @param {Array.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.<>\":\"GenericArray\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"GenericArray\".",
      "/**\n * @param {Array<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array<>\":\"GenericArray\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"GenericArray\".",
      "/**\n * @param {string[]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"SpecialTypeArray\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"[]\"; prefer: \"SpecialTypeArray\".",
      "/**\n * @param {string[]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"SpecialTypeArray\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"[]\"; prefer: \"SpecialTypeArray\".",
      "/**\n * @param {string[]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"SpecialTypeArray\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"SpecialTypeArray\".",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\",\"object.<>\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\",\"object<>\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object.<>\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object<>\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object.<string, number>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object.<>\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object<string, number>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object<>\":\"GenericObject\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":false}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"object\".",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":false}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\".",
      "/**\n * @param {object.<string, number>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n * @param {object<string, number>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"GenericObject\".",
      "/**\n *\n * @param {string[][]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"Array.\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"[]\"; prefer: \"Array.\".",
      "/**\n *\n * @param {string[][]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"Array.<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"[]\"; prefer: \"Array.<>\".",
      "/**\n *\n * @param {string[][]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"Array<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"[]\"; prefer: \"Array<>\".",
      "/**\n *\n * @param {object.<string, object.<string, string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object.\":\"Object\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object\".",
      "/**\n *\n * @param {object.<string, object.<string, string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object.\":\"Object<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object<>\".",
      "/**\n *\n * @param {object<string, object<string, string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object<>\":\"Object.\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object.\".",
      "/**\n *\n * @param {Array.<Array.<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.\":\"[]\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"[]\".",
      "/**\n *\n * @param {Array.<Array.<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.\":\"Array<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"Array<>\".",
      "/**\n *\n * @param {Array.<Array.<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.\":\"<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"<>\".",
      "/**\n *\n * @param {Array.<MyArray.<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.\":\"<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"<>\".",
      "/**\n *\n * @param {Array.<MyArray.<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"MyArray.\":\"<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"MyArray\"; prefer: \"<>\".",
      "/**\n *\n * @param {Array<Array<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"<>\":\"Array.\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"Array.\".",
      "/**\n *\n * @param {Array<Array<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"Array.\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"Array.\".",
      "/**\n *\n * @param {Array<Array<string>>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"<>\":\"[]\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"[]\".",
      "/** @typedef {String} foo */\n// Message: Invalid JSDoc @typedef \"foo\" type \"String\"; prefer: \"string\".",
      "/**\n * @this {array}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Invalid JSDoc @this type \"array\"; prefer: \"Array\".",
      "/**\n * @export {array}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Invalid JSDoc @export type \"array\"; prefer: \"Array\".",
      "/**\n * @typedef {object} foo\n * @property {object} bar\n */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"exemptTagContexts\":[{\"tag\":\"typedef\",\"types\":true}]}]\n// Message: Invalid JSDoc @property \"bar\" type \"object\"; prefer: \"Object\".",
      "/** @typedef {object} foo */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"exemptTagContexts\":[{\"tag\":\"typedef\",\"types\":[\"array\"]}]}]\n// Message: Invalid JSDoc @typedef \"foo\" type \"object\"; prefer: \"Object\".",
      "/**\n * @typedef {object} foo\n * @property {object} bar\n */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"exemptTagContexts\":[{\"tag\":\"typedef\",\"types\":[\"object\"]}]}]\n// Message: Invalid JSDoc @property \"bar\" type \"object\"; prefer: \"Object\".",
      "/** @typedef {object<string, string>} foo */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object<>\":\"Object<>\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"exemptTagContexts\":[{\"tag\":\"typedef\",\"types\":[\"object\"]}]}]\n// Message: Invalid JSDoc @typedef \"foo\" type \"object\"; prefer: \"Object<>\".",
      "/**\n * @param {Array<number | undefined>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.<>\":\"[]\",\"Array<>\":\"[]\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Array\"; prefer: \"[]\".",
      "/**\n * @typedef {object} foo\n */\nfunction a () {}\n\n/**\n * @typedef {Object<string>} foo\n */\nfunction b () {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"object\":\"Object\"}}}\n// Message: Invalid JSDoc @typedef \"foo\" type \"object\"; prefer: \"Object\".",
      "/**\n * @aCustomTag {Number} foo\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":true}}}}\n// Message: Invalid JSDoc @aCustomTag \"foo\" type \"Number\"; prefer: \"number\".",
      "/**\n * @aCustomTag {Number} foo\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":[\"otherType\",\"anotherType\"]}}}}\n// Message: Invalid JSDoc @aCustomTag \"foo\" type \"Number\"; prefer: [\"otherType\",\"anotherType\"].",
      "/**\n * @param {Object[]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Object\"; prefer: \"object\".",
      "/**\n * @param {object.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"object.<>\":\"Object\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object\".",
      "/**\n * @param {object.<string, number>} foo\n */\nfunction quux (foo) {\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\",\"object.<>\":\"Object<>\",\"Object.<>\":\"Object<>\",\"object<>\":\"Object<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object<>\".",
      "/**\n * @param {Object.<string, number>} foo\n */\nfunction quux (foo) {\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\",\"object.<>\":\"Object<>\",\"Object.<>\":\"Object<>\",\"object<>\":\"Object<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"Object\"; prefer: \"Object<>\".",
      "/**\n * @param {object<string, number>} foo\n */\nfunction quux (foo) {\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\",\"object.<>\":\"Object<>\",\"Object.<>\":\"Object<>\",\"object<>\":\"Object<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object<>\".",
      "/**\n * @param {object.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\",\"object.<>\":\"Object<>\",\"Object.<>\":\"Object<>\",\"object<>\":\"Object<>\"}}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object<>\".",
      "/**\n * @param {object.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}\n// Message: Invalid JSDoc @param \"foo\" type \"object\"; prefer: \"Object<>\".",
      "/**\n *\n * @param {Object} param\n * @return {Object | String}\n */\nfunction abc(param) {\n  if (param.a)\n    return {};\n  return 'abc';\n}\n// Message: Invalid JSDoc @param \"param\" type \"Object\"; prefer: \"object\".",
      "/**\n * @param {object} root\n * @param {number} root.a\n * @param {object} b\n */\nfunction a () {}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":{\"skipRootChecking\":true}}}}\n// Message: Invalid JSDoc @param \"b\" type \"object\"."
    ],
    "valid": [
      "/**\n * @param {number} foo\n * @param {Bar} bar\n * @param {*} baz\n */\nfunction quux (foo, bar, baz) {\n\n}",
      "/**\n * @arg {number} foo\n * @arg {Bar} bar\n * @arg {*} baz\n */\nfunction quux (foo, bar, baz) {\n\n}",
      "/**\n * @param {(number | string | boolean)=} foo\n */\nfunction quux (foo, bar, baz) {\n\n}",
      "/**\n * @param {typeof bar} foo\n */\nfunction qux(foo) {\n}",
      "/**\n * @param {import('./foo').bar.baz} foo\n */\nfunction qux(foo) {\n}",
      "/**\n * @param {(x: number, y: string) => string} foo\n */\nfunction qux(foo) {\n}",
      "/**\n * @param {() => string} foo\n */\nfunction qux(foo) {\n}",
      "/**\n * @returns {Number} foo\n * @throws {Number} foo\n */\nfunction quux () {\n\n}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"noDefaults\":true}]",
      "/**\n * @param {Object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\"}}}",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param {Array.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"GenericArray\"}}}",
      "/**\n * @param {Array<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"GenericArray\"}}}",
      "/**\n * @param {string[]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array\":\"SpecialTypeArray\",\"Array.<>\":\"SpecialTypeArray\",\"Array<>\":\"SpecialTypeArray\"}}}",
      "/**\n * @param {string[]} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.<>\":\"SpecialTypeArray\",\"Array<>\":\"SpecialTypeArray\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"SpecialTypeArray\"}}}",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":\"SpecialTypeArray\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array.<>\":\"GenericArray\"}}}",
      "/**\n * @param {Array} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"Array<>\":\"GenericArray\"}}}",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param {object.<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}",
      "/**\n * @param {object<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}",
      "/**\n * @param {object.<string, number>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}",
      "/**\n * @param {object<string, number>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"GenericObject\"}}}",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object.<>\":\"GenericObject\"}}}",
      "/**\n * @param {object} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object<>\":\"GenericObject\"}}}",
      "/**\n * @param {Number<} Ignore the error as not a validating rule\n */\nfunction quux (foo) {\n\n}",
      "/** @param {function(...)} callback The function to invoke. */\nvar subscribe = function(callback) {};",
      "/**\n * @this {Array}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @export {Array}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/** @type {new() => EntityBase} */",
      "/** @typedef {object} foo */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"exemptTagContexts\":[{\"tag\":\"typedef\",\"types\":true}]}]",
      "/** @typedef {object<string, string>} foo */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\"}}}",
      "/** @typedef {object<string, string>} foo */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object<>\":\"Object<>\"}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"exemptTagContexts\":[{\"tag\":\"typedef\",\"types\":[\"object<string, string>\"]}]}]",
      "/**\n * @typedef {object} foo\n */\n\n /**\n  * @typedef {Object} foo\n  */\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\",\"Object\":\"object\"}}}",
      "/**\n * @typedef {object} foo\n */\nfunction a () {}\n\n/**\n * @typedef {Object} foo\n */\nfunction b () {}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":\"Object\",\"Object\":\"object\"}}}",
      "/**\n * @typedef {object} foo\n */\nfunction a () {}\n\n/**\n * @typedef {Object<string>} foo\n */\nfunction b () {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @aCustomTag {Number} foo\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":false}}}}",
      "/**\n * @aCustomTag {otherType} foo\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":[\"otherType\",\"anotherType\"]}}}}",
      "/**\n * @aCustomTag {anotherType|otherType} foo\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":[\"otherType\",\"anotherType\"]}}}}",
      "/**\n * Bad types handled by `valid-types` instead.\n * @param {str(} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param {Object<string>} foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @typedef {object} foo\n */\nfunction a () {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\",\"object.<>\":\"Object<>\",\"object<>\":\"Object<>\"}}}",
      "/**\n * @typedef {Object<string, number>} foo\n */\nfunction a () {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\",\"preferredTypes\":{\"Object\":\"object\",\"object.<>\":\"Object<>\",\"object<>\":\"Object<>\"}}}",
      "/**\n * Does something.\n *\n * @param {Object<string,string>} spec - Foo.\n */\nfunction foo(spec) {\n    return spec;\n}\n\nfoo()",
      "/**\n * @param {object} root\n * @param {number} root.a\n */\nfunction a () {}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"object\":{\"message\":\"Won't see this message\",\"skipRootChecking\":true}}}}",
      "/**\n * @returns {string | undefined} a string or undefined\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"[]\":{\"message\":\"Do not use *[], use Array<*> instead\",\"replacement\":\"Array\"}}}}\n// \"jsdoc/check-types\": [\"error\"|\"warn\", {\"unifyParentAndChildTypeChecks\":true}]"
    ]
  },
  "checkValues": {
    "invalid": [
      "/**\n * @version\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @version value.",
      "/**\n * @version 3.1\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @version: \"3.1\".",
      "/**\n * @kind\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @kind value.",
      "/**\n * @kind -3\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @kind: \"-3\"; must be one of: class, constant, event, external, file, function, member, mixin, module, namespace, typedef.",
      "/**\n * @variation -3\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"numericOnlyVariation\":true}]\n// Message: Invalid JSDoc @variation: \"-3\".",
      "/**\n * @since\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @since value.",
      "/**\n * @since 3.1\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @since: \"3.1\".",
      "/**\n * @license\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @license value.",
      "/**\n * @license FOO\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @license: \"FOO\"; expected SPDX expression: https://spdx.org/licenses/.",
      "/**\n * @license FOO\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"allowedLicenses\":[\"BAR\",\"BAX\"]}]\n// Message: Invalid JSDoc @license: \"FOO\"; expected one of BAR, BAX.",
      "/**\n * @license MIT-7\n * Some extra text...\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @license: \"MIT-7\"; expected SPDX expression: https://spdx.org/licenses/.",
      "/**\n * @license (MIT OR GPL-2.5)\n */\nfunction quux (foo) {\n\n}\n// Message: Invalid JSDoc @license: \"(MIT OR GPL-2.5)\"; expected SPDX expression: https://spdx.org/licenses/.",
      "/**\n * @license MIT\n * Some extra text\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"[\\\\s\\\\S]*\"}]\n// Message: Invalid JSDoc @license: \"MIT\nSome extra text\"; expected SPDX expression: https://spdx.org/licenses/.",
      "/**\n * @author\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @author value.",
      "/**\n * @author Brett Zamir\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"allowedAuthors\":[\"Gajus Kuizinas\",\"golopot\"]}]\n// Message: Invalid JSDoc @author: \"Brett Zamir\"; expected one of Gajus Kuizinas, golopot.",
      "/**\n * @variation\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"numericOnlyVariation\":true}]\n// Message: Missing JSDoc @variation value.",
      "/**\n * @variation 5.2\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"numericOnlyVariation\":true}]\n// Message: Invalid JSDoc @variation: \"5.2\".",
      "/**\n * @license license-prefix Oops\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"(?<=license-prefix ).*\"}]\n// Message: Invalid JSDoc @license: \"Oops\"; expected SPDX expression: https://spdx.org/licenses/.",
      "/**\n * @license Oops\n * Copyright 2022\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"^([^\\n]+)\\nCopyright\"}]\n// Message: Invalid JSDoc @license: \"Oops\"; expected SPDX expression: https://spdx.org/licenses/."
    ],
    "valid": [
      "/**\n * @version 3.4.1\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @version      3.4.1\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @since 3.4.1\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @since      3.4.1\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @license MIT\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @license MIT\n * Some extra text...\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @license (MIT OR GPL-2.0)\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @license FOO\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"allowedLicenses\":[\"FOO\",\"BAR\",\"BAX\"]}]",
      "/**\n * @license FOO\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"allowedLicenses\":true}]",
      "/**\n * @license MIT\n * Some extra text\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"[^\\n]*\"}]",
      "/**\n * @author Gajus Kuizinas\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @author Brett Zamir\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"allowedAuthors\":[\"Gajus Kuizinas\",\"golopot\",\"Brett Zamir\"]}]",
      "/**\n * @variation 3\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"numericOnlyVariation\":true}]",
      "/**\n * @variation abc\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @module test\n * @license MIT\\r\n */\n'use strict';",
      "/**\n * @kind function\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @license license-prefix MIT\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"(?<=license-prefix )MIT|GPL3.0\"}]",
      "/**\n * @license\n * Copyright 2022\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"^([^\\n]+)(?!\\nCopyright)\"}]",
      "/**\n * @license MIT\n * Copyright 2022\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/check-values\": [\"error\"|\"warn\", {\"licensePattern\":\"^([^\\n]+)\\nCopyright\"}]"
    ]
  },
  "emptyTags": {
    "invalid": [
      "/**\n * @abstract extra text\n */\nfunction quux () {\n\n}\n// Message: @abstract should be empty.",
      "/**\n * @interface extra text\n */\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: @interface should be empty.",
      "class Test {\n    /**\n     * @abstract extra text\n     */\n    quux () {\n\n    }\n}\n// Message: @abstract should be empty.",
      "/**\n * @abstract extra text\n * @inheritdoc\n * @async out of place\n */\nfunction quux () {\n\n}\n// Message: @abstract should be empty.",
      "/**\n * @event anEvent\n */\nfunction quux () {\n\n}\n// \"jsdoc/empty-tags\": [\"error\"|\"warn\", {\"tags\":[\"event\"]}]\n// Message: @event should be empty.",
      "/**\n * @private {someType}\n */\nfunction quux () {\n\n}\n// Message: @private should be empty.",
      "/**\n * @internal {someType}\n */\nfunction quux () {\n\n}\n// Message: @internal should be empty.",
      "/**\n * @private {someType}\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}\n// Message: @private should be empty."
    ],
    "valid": [
      "/**\n * @abstract\n */\nfunction quux () {\n\n}",
      "/**\n *\n */\nfunction quux () {\n\n}",
      "/**\n * @param aName\n */\nfunction quux () {\n\n}",
      "/**\n * @abstract\n * @inheritdoc\n * @async\n */\nfunction quux () {\n\n}",
      "/**\n * @private {someType}\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @private\n */\nfunction quux () {\n\n}",
      "/**\n * @internal\n */\nfunction quux () {\n\n}",
      "/**\n * Create an array.\n *\n * @private\n *\n * @param {string[]} [elem] - Elements to make an array of.\n * @param {boolean} [clone] - Optionally clone nodes.\n * @returns {string[]} The array of nodes.\n */\nfunction quux () {}"
    ]
  },
  "implementsOnClasses": {
    "invalid": [
      "/**\n * @implements {SomeClass}\n */\nfunction quux () {\n\n}\n// Message: @implements used on a non-constructor function",
      "/**\n * @implements {SomeClass}\n */\nfunction quux () {\n\n}\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: @implements used on a non-constructor function",
      "/**\n * @function\n * @implements {SomeClass}\n */\nfunction quux () {\n\n}\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: @implements used on a non-constructor function",
      "/**\n * @callback\n * @implements {SomeClass}\n */\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: @implements used on a non-constructor function",
      "/**\n * @implements {SomeClass}\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"implements\":false}}}\n// Message: Unexpected tag `@implements`",
      "class Foo {\n    /**\n     * @implements {SomeClass}\n     */\n    constructor() {}\n\n    /**\n     * @implements {SomeClass}\n     */\n    bar() {}\n}\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"MethodDefinition\"]}]\n// Message: @implements used on a non-constructor function",
      "class Foo {\n    /**\n     * @implements {SomeClass}\n     */\n    constructor() {}\n\n    /**\n     * @implements {SomeClass}\n     */\n    bar() {}\n}\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: @implements used on a non-constructor function"
    ],
    "valid": [
      "/**\n * @implements {SomeClass}\n * @class\n */\nfunction quux () {\n\n}",
      "/**\n * @implements {SomeClass}\n * @class\n */\nfunction quux () {\n\n}\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @implements {SomeClass}\n */\n// \"jsdoc/implements-on-classes\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @implements {SomeClass}\n * @constructor\n */\nfunction quux () {\n\n}",
      "/**\n *\n */\nclass quux {\n  /**\n   * @implements {SomeClass}\n   */\n  constructor () {\n\n  }\n}",
      "/**\n *\n */\nconst quux = class {\n  /**\n   * @implements {SomeClass}\n   */\n  constructor () {\n\n  }\n}",
      "/**\n *\n */\nfunction quux () {\n\n}",
      "/**\n *\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"implements\":false}}}",
      "/**\n * @function\n * @implements {SomeClass}\n */",
      "/**\n * @callback\n * @implements {SomeClass}\n */"
    ]
  },
  "matchDescription": {
    "invalid": [
      "/**\n * foo.\n */\nconst q = class {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassExpression\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * foo.\n */\nconst q = class {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassExpression\"],\"message\":\"Needs to begin with a capital letter and end with an end mark.\"}]\n// Message: Needs to begin with a capital letter and end with an end mark.",
      "/**\n * foo.\n */\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * foo.\n */\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * foo.\n */\nconst q = {\n\n};\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"ObjectExpression\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * foo.\n */\nfunction quux () {\n\n}\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo)\n */\nfunction quux () {\n\n}\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"matchDescription\":\"[А-Я][А-я]+\\\\.\"}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"matchDescription\":\"[А-Я][А-я]+\\\\.\",\"message\":\"Needs to begin with a capital letter and end with an end mark.\"}]\n// Message: Needs to begin with a capital letter and end with an end mark.",
      "/**\n * Abc.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":\"[А-Я][А-я]+\\\\.\",\"tags\":{\"param\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Abc.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":{\"match\":\"[А-Я][А-я]+\\\\.\",\"message\":\"Needs to begin with a Cyrillic capital letter and end with a period.\"},\"tags\":{\"param\":true}}]\n// Message: Needs to begin with a Cyrillic capital letter and end with a period.",
      "/**\n * Foo\n */\nfunction quux () {\n\n}\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @param foo foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"param\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @template Abc, Def foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"template\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @prop foo foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"prop\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @summary foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"summary\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @author\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"author\":\".+\"}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @x-tag\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"x-tag\":\".+\"}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @description foo foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo\n *\n * @param foo foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":\"^[a-zA-Z]*\\\\s*$\",\"tags\":{\"param\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo\n *\n * @param foo foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":{\"match\":\"^[a-zA-Z]*\\\\s*$\",\"message\":\"Letters only\"},\"tags\":{\"param\":{\"match\":true,\"message\":\"Needs to begin with a capital letter and end with a period.\"}}}]\n// Message: Needs to begin with a capital letter and end with a period.",
      "/**\n * Foo\n *\n * @param foo foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":false,\"tags\":{\"param\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @param foo bar\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"param\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * {@see Foo.bar} buz\n */\nfunction quux (foo) {\n\n}\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @returns {number} foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"returns\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo.\n *\n * @returns foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"returns\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * lorem ipsum dolor sit amet, consectetur adipiscing elit. pellentesque elit diam,\n * iaculis eu dignissim sed, ultrices sed nisi. nulla at ligula auctor, consectetur neque sed,\n * tincidunt nibh. vivamus sit amet vulputate ligula. vivamus interdum elementum nisl,\n * vitae rutrum tortor semper ut. morbi porta ante vitae dictum fermentum.\n * proin ut nulla at quam convallis gravida in id elit. sed dolor mauris, blandit quis ante at,\n * consequat auctor magna. duis pharetra purus in porttitor mollis.\n */\nfunction longDescription (foo) {\n\n}\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * @arg {number} foo - Foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"arg\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * @argument {number} foo - Foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"argument\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * @return {number} foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"return\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Returns bar.\n *\n * @return {number} bar\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"return\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * @param notRet\n * @returns Тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"param\":\"[А-Я][А-я]+\\\\.\"}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * @description notRet\n * @returns Тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":\"[А-Я][А-я]+\\\\.\"}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * foo.\n */\nclass quux {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "class MyClass {\n  /**\n   * Abc\n   */\n  myClassField = 1\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"PropertyDefinition\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * foo.\n */\ninterface quux {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "const myObject = {\n  /**\n   * Bad description\n   */\n  myProp: true\n};\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"Property\"]}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * @param foo Foo bar\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"param\":true}}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Foo bar\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n * Description with extra new line\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"matchDescription\":\"[\\\\s\\\\S]*\\\\S$\"}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n *\n * This function does lots of things.\n */\n function quux () {\n\n }\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"matchDescription\":\"^\\\\S[\\\\s\\\\S]*\\\\S$\"}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/**\n *\n * @param\n */\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"matchDescription\":\"^\\\\S[\\\\s\\\\S]*\\\\S$\"}]\n// Message: JSDoc description does not satisfy the regex pattern.",
      "/** Does something very important. */\nfunction foo(): string;\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[endLine=0]\"}],\"matchDescription\":\"^\\\\S[\\\\s\\\\S]*\\\\S$\"}]\n// Message: JSDoc description does not satisfy the regex pattern."
    ],
    "valid": [
      "/**\n *\n */",
      "/**\n *\n */\n function quux () {\n\n }",
      "/**\n * @param foo - Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"param\":true}}]",
      "/**\n * Foo.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n * Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n *\n * Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n *\n * Bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"message\":\"This won't be shown\"}]",
      "/**\n * Тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"matchDescription\":\"[А-Я][А-я]+\\\\.\"}]",
      "/**\n * @param notRet\n * @returns Тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"returns\":\"[А-Я][А-я]+\\\\.\"}}]",
      "/**\n * @param notRet\n * @description Тест.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":\"[А-Я][А-я]+\\\\.\"}}]",
      "/**\n * Foo\n * bar.\n */\nfunction quux () {\n\n}",
      "/**\n * @returns Foo bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"returns\":true}}]",
      "/**\n * @returns {type1} Foo bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"returns\":true}}]",
      "/**\n * @description Foo bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":true}}]",
      "/**\n * @description Foo\n * bar.\n * @param\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":true}}]",
      "/** @description Foo bar. */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":true}}]",
      "/**\n * @description Foo\n * bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"description\":true}}]",
      "/**\n * Foo. {@see Math.sin}.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo {@see Math.sin} bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo?\n *\n * Bar!\n *\n * Baz:\n *   1. Foo.\n *   2. Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Hello:\n * World.\n */\nfunction quux () {\n\n}",
      "/**\n * Hello: world.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo\n * Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n *\n * foo.\n */\nfunction quux () {\n\n}",
      "/**\n * foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":false}]",
      "/**\n * foo.\n */\nclass quux {\n\n}",
      "/**\n * foo.\n */\nclass quux {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":true}]",
      "class MyClass {\n  /**\n   * Abc.\n   */\n  myClassField = 1\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"PropertyDefinition\"]}]",
      "/**\n * Foo.\n */\ninterface quux {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\"]}]",
      "const myObject = {\n  /**\n   * Bad description\n   */\n  myProp: true\n};\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[]}]",
      "/**\n * foo.\n */\nconst q = class {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[]}]",
      "/**\n * foo.\n */\nconst q = {\n\n};\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[]}]",
      "/**\n * @description foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"param\":true}}]",
      "/**\n * Foo.\n *\n * @summary Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"summary\":true}}]",
      "/**\n * Foo.\n *\n * @author Somebody\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"author\":\".+\"}}]",
      "/**\n * Foo.\n *\n * @x-tag something\n */\nfunction quux () {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"x-tag\":\".+\"}}]",
      "/**\n * Foo.\n *\n * @prop foo Foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"prop\":true}}]",
      "/**\n * @param foo Foo bar.\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}",
      "/**\n *\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}",
      "/**\n * Foo.\n *\n * @template Abc, Def Foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"tags\":{\"template\":true}}]",
      "/**\n * Enable or disable plugin.\n *\n * When enabling with this function, the script will be attached to the `document` if:.\n * - the script runs in browser context.\n * - the `document` doesn't have the script already attached.\n * - the `loadScript` option is set to `true`.\n * @param enabled `true` to enable, `false` to disable. Default: `true`.\n */\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"mainDescription\":\"/^[A-Z`-].*\\\\.$/us\",\"matchDescription\":\"^([A-Z`-].*(\\\\.|:)|-\\\\s.*)$\",\"tags\":{\"param\":true,\"returns\":true}}]",
      "/**\n * @constructor\n * @todo Ok.\n */\nfunction quux () {\n}\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"mainDescription\":false,\"tags\":{\"todo\":true}}]",
      "/** Does something very important. */\nfunction foo(): string;\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[endLine!=0]\"}],\"matchDescription\":\"^\\\\S[\\\\s\\\\S]*\\\\S$\"}]",
      "/**\n * This is my favorite function, foo.\n *\n * @returns Nothing.\n */\nfunction foo(): void;\n// \"jsdoc/match-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[endLine!=0]:not(:has(JsdocTag))\"}],\"matchDescription\":\"^\\\\S[\\\\s\\\\S]*\\\\S$\"}]"
    ]
  },
  "matchName": {
    "invalid": [
      "/**\n * @param opt_a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\"}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_a\".",
      "/**\n * @param opt_a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\",\"replacement\":\"\"}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_a\".",
      "/**\n * @param a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"allowName\":\"/^[a-z]+$/i\"}]}]\n// Message: Only allowing names matching `/^[a-z]+$/i` but found \"opt_b\".",
      "/**\n * @param arg\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"allowName\":\"/^[a-z]+$/i\",\"disallowName\":\"/^arg/i\"}]}]\n// Message: Only allowing names not matching `/^arg/i` but found \"arg\".",
      "/**\n * @param opt_a\n * @param arg\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^arg$/i\"},{\"disallowName\":\"/^opt_/i\"}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_a\".",
      "/**\n * @property opt_a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\",\"tags\":[\"param\"]}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_b\".",
      "/**\n * @someTag opt_a\n * @param opt_b\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"someTag\":{\"name\":\"namepath-defining\"}}}}\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\",\"tags\":[\"param\"]}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_b\".",
      "/**\n * @property opt_a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\",\"tags\":[\"*\"]}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_a\".",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction quux () {\n}\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"context\":\"FunctionDeclaration\",\"disallowName\":\"/^opt_/i\"}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_a\".",
      "/**\n * @property opt_a\n * @param {Bar|Foo} opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"comment\":\"JsdocBlock:has(JsdocTag[tag=\\\"param\\\"][name=/opt_/] > JsdocTypeUnion:has(JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1)))\"}]}]\n// Message: Prohibited context for \"opt_a\".",
      "/**\n * @property opt_a\n * @param {Bar|Foo} opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"comment\":\"JsdocBlock:has(JsdocTag[tag=\\\"param\\\"][name=/opt_/] > JsdocTypeUnion:has(JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1)))\",\"message\":\"Don't use `opt_` prefixes with Bar|...\"}]}]\n// Message: Don't use `opt_` prefixes with Bar|...",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction quux () {}\n// \"jsdoc/match-name\": [\"error\"|\"warn\", ]\n// Message: Rule `no-restricted-syntax` is missing a `match` option.",
      "/**\n * @param {\n *   someType\n * } opt_a\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\",\"replacement\":\"\"}]}]\n// Message: Only allowing names not matching `/^opt_/i` but found \"opt_a\"."
    ],
    "valid": [
      "/**\n * @param opt_a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^arg/i\"}]}]",
      "/**\n * @param a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"allowName\":\"/^[a-z_]+$/i\"}]}]",
      "/**\n * @param someArg\n * @param anotherArg\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"allowName\":\"/^[a-z]+$/i\",\"disallowName\":\"/^arg/i\"}]}]",
      "/**\n * @param elem1\n * @param elem2\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^arg$/i\"},{\"disallowName\":\"/^opt_/i\"}]}]",
      "/**\n * @someTag opt_a\n * @param opt_b\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"someTag\":{\"name\":\"namepath-defining\"}}}}\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^opt_/i\",\"tags\":[\"property\"]}]}]",
      "/**\n * @property opt_a\n * @param opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"disallowName\":\"/^arg/i\",\"tags\":[\"*\"]}]}]",
      "/**\n * @param opt_a\n * @param opt_b\n */\nclass A {\n}\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"context\":\"FunctionDeclaration\",\"disallowName\":\"/^opt_/i\"}]}]",
      "/**\n * @property opt_a\n * @param {Foo|Bar} opt_b\n */\n// \"jsdoc/match-name\": [\"error\"|\"warn\", {\"match\":[{\"comment\":\"JsdocBlock:has(JsdocTag[tag=\\\"param\\\"]:has(JsdocTypeUnion:has(JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))))\",\"disallowName\":\"/^opt_/i\"}]}]"
    ]
  },
  "multilineBlocks": {
    "invalid": [
      "/** Reported up here\n * because the rest is multiline\n */\n// Message: Should have no text on the \"0th\" line (after the `/**`).",
      "/** Reported up here\n * because the rest is multiline\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noZeroLineText\":true}]\n// Message: Should have no text on the \"0th\" line (after the `/**`).",
      "/** @abc {aType} aName Reported up here\n * because the rest is multiline\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noZeroLineText\":true}]\n// Message: Should have no text on the \"0th\" line (after the `/**`).",
      "/** @tag */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true}]\n// Message: Single line blocks are not permitted by your configuration.",
      "/** @tag {someType} */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true}]\n// Message: Single line blocks are not permitted by your configuration.",
      "/** @tag {someType} aName */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true}]\n// Message: Single line blocks are not permitted by your configuration.",
      "/** @tag */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true,\"singleLineTags\":[\"someOtherTag\"]}]\n// Message: Single line blocks are not permitted by your configuration.",
      "/** desc */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true,\"singleLineTags\":[\"*\"]}]\n// Message: Single line blocks are not permitted by your configuration.",
      "/**\n * Desc.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/** desc\n *\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/** desc\n *\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true,\"noSingleLineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration but fixing would result in a single line block which you have prohibited with `noSingleLineBlocks`.",
      "/**\n *\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * This is not long enough to be permitted.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"minimumLengthForMultiline\":100,\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * This is not long enough to be permitted.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":true,\"minimumLengthForMultiline\":100,\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * This has the wrong tags so is not permitted.\n * @notTheRightTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":false,\"multilineTags\":[\"onlyThisIsExempted\"],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration but the block has a description with a tag.",
      "/**\n * This has too many tags so cannot be fixed ot a single line.\n * @oneTag\n * @anotherTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":false,\"multilineTags\":[],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration but the block has multiple tags.",
      "/**\n * This has a tag and description so cannot be fixed ot a single line.\n * @oneTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":false,\"multilineTags\":[],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration but the block has a description with a tag.",
      "/**\n * This has no tags so is not permitted.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[\"*\"],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * This has the wrong tags so is not permitted.\n * @notTheRightTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":false,\"minimumLengthForMultiline\":500,\"multilineTags\":[\"onlyThisIsExempted\"],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration but the block has a description with a tag.",
      "/**\n * @lends This can be safely fixed to a single line.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[],\"noMultilineBlocks\":true,\"noSingleLineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * @type {aType} This can be safely fixed to a single line.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[],\"noMultilineBlocks\":true,\"noSingleLineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * @aTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * This is a problem when single and multiline are blocked.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true,\"noSingleLineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration but fixing would result in a single line block which you have prohibited with `noSingleLineBlocks`.",
      "/** This comment is bad\n * It should not have text on line zero\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"minimumLengthForMultiline\":50,\"noMultilineBlocks\":true,\"noZeroLineText\":true}]\n// Message: Should have no text on the \"0th\" line (after the `/**`).",
      "/**\n * @lends This can be safely fixed\n * to a single\n * line. */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[],\"noMultilineBlocks\":true}]\n// Message: Multiline jsdoc blocks are prohibited by your configuration.",
      "/**\n * @someTag {aType} with Description */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noFinalLineBlocks\":true}]\n// Message: Should have no text on the final line (before the `*/`).",
      "/**\n * Description */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noFinalLineBlocks\":true}]\n// Message: Should have no text on the final line (before the `*/`)."
    ],
    "valid": [
      "/** Not reported */",
      "/**\n *  Not reported\n */",
      "/** Reported up here\n * because the rest is multiline\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noZeroLineText\":false}]",
      "/** @tag */",
      "/** @lends */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true}]",
      "/** @tag */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true,\"singleLineTags\":[\"tag\"]}]",
      "/** @tag */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noSingleLineBlocks\":true,\"singleLineTags\":[\"*\"]}]",
      "/**\n *\n */",
      "/**\n *\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":false}]",
      "/** Test */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true}]",
      "/**\n * This is long enough to be permitted by our config.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"minimumLengthForMultiline\":25,\"noMultilineBlocks\":true}]",
      "/**\n * This is long enough to be permitted by our config.\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"minimumLengthForMultiline\":50,\"noMultilineBlocks\":true}]",
      "/**\n * This has the right tag so is permitted.\n * @theRightTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[\"theRightTag\"],\"noMultilineBlocks\":true}]",
      "/** This has no tags but is single line so is not permitted. */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[\"*\"],\"noMultilineBlocks\":true}]",
      "/**\n * This has the wrong tags so is not permitted.\n * @notTheRightTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"minimumLengthForMultiline\":10,\"multilineTags\":[\"onlyThisIsExempted\"],\"noMultilineBlocks\":true}]",
      "/**\n * This has the wrong tags so is not permitted.\n * @theRightTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"minimumLengthForMultiline\":500,\"multilineTags\":[\"theRightTag\"],\"noMultilineBlocks\":true}]",
      "/** tag */",
      "/**\n * @lends This is ok per multiline\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noMultilineBlocks\":true,\"noSingleLineBlocks\":true}]",
      "/**\n * This has too many tags so cannot be fixed ot a single line.\n * @oneTag\n * @anotherTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"multilineTags\":[],\"noMultilineBlocks\":true}]",
      "/**\n * This has too many tags so cannot be fixed ot a single line.\n * @oneTag\n * @anotherTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":true,\"multilineTags\":[],\"noMultilineBlocks\":true}]",
      "/**\n * This has a tag and description so cannot be fixed ot a single line.\n * @oneTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":true,\"multilineTags\":[],\"noMultilineBlocks\":true}]",
      "/**\n * This has a tag and description so cannot be fixed ot a single line.\n * @oneTag\n */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"allowMultipleTags\":false,\"multilineTags\":[\"oneTag\"],\"noMultilineBlocks\":true}]",
      "/** @someTag with Description */\n// \"jsdoc/multiline-blocks\": [\"error\"|\"warn\", {\"noFinalLineBlocks\":true}]"
    ]
  },
  "newlineAfterDescription": {
    "invalid": [
      "/**\n * Foo.\n *\n * Foo.\n * @foo\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a newline after the description of the JSDoc block.",
      "/**\n * Foo.\n * @foo\n *\n * Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a newline after the description of the JSDoc block.",
      "/**\n * Foo.\n *\n * Foo.\n * @foo\n */\nfunction quux () {\n\n}\n// Message: There must be a newline after the description of the JSDoc block.",
      "/**\n * Bar.\n *\n * Bar.\n *\n * @bar\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no newline after the description of the JSDoc block.",
      "/**\n * Bar.\n *\n * @bar\n *\n * Bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no newline after the description of the JSDoc block.",
      "\n         /**\\r\n          * Bar.\\r\n          *\\r\n          * Bar.\\r\n          *\\r\n          * @bar\\r\n          */\\r\n         function quux () {\\r\n\n         }\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no newline after the description of the JSDoc block.",
      "/**\n * A.\n *\n * @typedef {object} A\n * @prop {boolean} a A.\n */\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no newline after the description of the JSDoc block.",
      "/**\n * A.\n * @typedef {object} A\n * @prop {boolean} a A.\n */\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a newline after the description of the JSDoc block.",
      "\n     /**\\r\n      * Service for fetching symbols.\\r\n      * @param {object} $http - Injected http helper.\\r\n      * @param {object} $q - Injected Promise api helper.\\r\n      * @param {object} $location - Injected window location object.\\r\n      * @param {object} REPORT_DIALOG_CONSTANTS - Injected handle.\\r\n      */\n// Message: There must be a newline after the description of the JSDoc block.",
      "/** An example function.\n *\n * @returns {number} An example number.\n */\nfunction example() {\n  return 42;\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no newline after the description of the JSDoc block.",
      "/** An example function.\n * @returns {number} An example number.\n */\nfunction example() {\n  return 42;\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a newline after the description of the JSDoc block."
    ],
    "valid": [
      "/**\n * Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]",
      "/**\n * Foo.\n *\n * @foo\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Bar.\n * @bar\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]",
      "\n     /**\\r\n      * @foo\\r\n      * Test \\r\n      * abc \\r\n      * @bar \\r\n      */",
      "\n     /**\\r\n      * \\r\n      * @foo\\r\n      * Test \\r\n      * abc \\r\n      * @bar \\r\n      */",
      "/***\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"always\"]",
      "/**\\r\n * Parses query string to object containing URL parameters\\r\n * \\r\n * @param queryString\\r\n * Input string\\r\n * \\r\n * @returns\\r\n * Object containing URL parameters\\r\n */\\r\nexport function parseQueryString(queryString: string): { [key: string]: string } {    // <-- Line 10 that fails\\r\n\n}",
      "/** An example function.\n *\n * @returns {number} An example number.\n */\nfunction example() {\n  return 42;\n}",
      "/** An example function.\n * @returns {number} An example number.\n */\nfunction example() {\n  return 42;\n}\n// \"jsdoc/newline-after-description\": [\"error\"|\"warn\", \"never\"]"
    ]
  },
  "noBadBlocks": {
    "invalid": [
      "/*\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Message: Expected JSDoc-like comment to begin with two asterisks.",
      "/*\n * @property foo\n */\n// Message: Expected JSDoc-like comment to begin with two asterisks.",
      "function quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":false,\"required\":[\"name\"]}}}}\n// Message: Cannot add \"name\" to `require` with the tag's `name` set to `false`",
      "/* @ts-ignore */\n// \"jsdoc/no-bad-blocks\": [\"error\"|\"warn\", {\"ignore\":[]}]\n// Message: Expected JSDoc-like comment to begin with two asterisks.",
      "/*\n * Some description.\n *\n * @returns {string} Some string\n */\nfunction echo() {\n  return 'Something';\n}\n// Message: Expected JSDoc-like comment to begin with two asterisks.",
      "/***\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Message: Expected JSDoc-like comment to begin with two asterisks.",
      "/***\n *\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/no-bad-blocks\": [\"error\"|\"warn\", {\"preventAllMultiAsteriskBlocks\":true}]\n// Message: Expected JSDoc-like comment to begin with two asterisks."
    ],
    "valid": [
      "/**\n * @property foo\n */",
      "/**\n * @param foo\n */\n function quux () {\n\n }",
      "function quux () {\n\n}",
      "/* This could just be intended as a regular multiline comment,\n   so don't report this */\nfunction quux () {\n\n}",
      "/* Just a regular multiline comment with an `@` but not appearing\n    like a tag in a jsdoc-block, so don't report */\nfunction quux () {\n\n}",
      "/* @ts-check */",
      "/* @ts-expect-error */",
      "/* @ts-ignore */",
      "/* @ts-nocheck */",
      "/* */",
      "/** */",
      "/* @custom */\n// \"jsdoc/no-bad-blocks\": [\"error\"|\"warn\", {\"ignore\":[\"custom\"]}]",
      "/***\n * This is not JSDoc because of the 3 asterisks, but\n * is allowed without `preventAllMultiAsteriskBlocks`, as\n * some might wish normal multiline comments.\n */\nfunction quux (foo) {\n\n}",
      "/***/"
    ]
  },
  "noDefaults": {
    "invalid": [
      "/**\n * @param {number} [foo=\"7\"]\n */\nfunction quux (foo) {\n\n}\n// Message: Defaults are not permitted on @param.",
      "class Test {\n    /**\n     * @param {number} [foo=\"7\"]\n     */\n    quux (foo) {\n\n    }\n}\n// Message: Defaults are not permitted on @param.",
      "/**\n * @param {number} [foo=\"7\"]\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"noOptionalParamNames\":true}]\n// Message: Optional param names are not permitted on @param.",
      "/**\n * @arg {number} [foo=\"7\"]\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}\n// Message: Defaults are not permitted on @arg.",
      "/**\n * @param {number} [foo=\"7\"]\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Defaults are not permitted on @param.",
      "/**\n * @function\n * @param {number} [foo=\"7\"]\n */\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Defaults are not permitted on @param.",
      "/**\n * @callback\n * @param {number} [foo=\"7\"]\n */\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Defaults are not permitted on @param.",
      "/**\n * @default {}\n */\nconst a = {};\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Default values are not permitted on @default.",
      "/**\n * @defaultvalue {}\n */\nconst a = {};\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"default\":\"defaultvalue\"}}}\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Default values are not permitted on @defaultvalue."
    ],
    "valid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param {number} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo\n */\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n * @param {number} foo\n */",
      "/**\n * @callback\n * @param {number} foo\n */",
      "/**\n * @param {number} foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"noOptionalParamNames\":true}]",
      "/**\n * @default\n */\nconst a = {};\n// \"jsdoc/no-defaults\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]"
    ]
  },
  "noMissingSyntax": {
    "invalid": [
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"}]}]\n// Message: Syntax is required: FunctionDeclaration with JsdocBlock[postDelimiter=\"\"]:has(JsdocTypeUnion > JsdocTypeName[value=\"Foo\"]:nth-child(1))",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"}]}]\n// Message: Syntax is required: FunctionDeclaration with JsdocBlock[postDelimiter=\"\"]:has(JsdocTypeUnion > JsdocTypeName[value=\"Foo\"]:nth-child(1))",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"any\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\":function\"}]}]\n// Message: Syntax is required: :function with JsdocBlock[postDelimiter=\"\"]:has(JsdocTypeUnion > JsdocTypeName[value=\"Foo\"]:nth-child(1))",
      "/**\n * @private\n * Object holding values of some custom enum\n */\nconst MY_ENUM = Object.freeze({\n  VAL_A: \"myvala\"\n} as const);\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[tag=/private|protected/])\",\"context\":\":declaration\",\"message\":\"Requiring private/protected tags here\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[tag=\\\"enum\\\"])\",\"context\":\"any\",\"message\":\"@enum required on declarations\"}]}]\n// Message: @enum required on declarations",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"message\":\"Problematically missing function syntax: `{{context}}` with `{{comment}}`.\"}]}]\n// Message: Problematically missing function syntax: `FunctionDeclaration` with `JsdocBlock[postDelimiter=\"\"]:has(JsdocTypeUnion > JsdocTypeName[value=\"Foo\"]:nth-child(1))`.",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[\"FunctionDeclaration\"]}]\n// Message: Syntax is required: FunctionDeclaration",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// Message: Rule `no-missing-syntax` is missing a `context` option.",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"minimum\":2}]}]\n// Message: Syntax is required: FunctionDeclaration with JsdocBlock[postDelimiter=\"\"]:has(JsdocTypeUnion > JsdocTypeName[value=\"Bar\"]:nth-child(1))",
      "/**\n * @param ab\n * @param cd\n */\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Require names matching `/^opt_/i`.\"}]}]\n// Message: Require names matching `/^opt_/i`.",
      "/**\n * @param ab\n * @param cd\n */\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"message\":\"Require names matching `/^opt_/i`.\"}]}]\n// Message: Require names matching `/^opt_/i`.",
      "/**\n * @param ab\n * @param cd\n */\nfunction quux () {}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Require names matching `/^opt_/i`.\"}]}]\n// Message: Require names matching `/^opt_/i`."
    ],
    "valid": [
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"}]}]",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n\n/**\n * @implements {Bar|Foo}\n */\nfunction bar () {\n\n}\n\n/**\n * @implements {Bar|Foo}\n */\nfunction baz () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"minimum\":2}]}]",
      "/**\n * @param opt_a\n * @param opt_b\n */\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Require names matching `/^opt_/i`.\"}]}]",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction quux () {}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Require names matching `/^opt_/i`.\"}]}]",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction quux () {}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"message\":\"Require names matching `/^opt_/i`.\"}]}]",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(2))\",\"context\":\"FunctionDeclaration\"}]}]",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-missing-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"any\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(2))\",\"context\":\"FunctionDeclaration\"}]}]"
    ]
  },
  "noMultiAsterisks": {
    "invalid": [
      "/**\n *\n **\n */\n// Message: Should be no multiple asterisks on middle lines.",
      "/**\n *\n **\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtMiddleLines\":true}]\n// Message: Should be no multiple asterisks on middle lines.",
      "/**\n *\n **\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtEnd\":false}]\n// Message: Should be no multiple asterisks on middle lines.",
      "/**\n * With a description\n * @tag {SomeType} and a tag with details\n **\n */\n// Message: Should be no multiple asterisks on middle lines.",
      "/**\n **\n *\n */\n// Message: Should be no multiple asterisks on middle lines.",
      "/**\n * Desc.\n *\n **/\n// Message: Should be no multiple asterisks on end lines.",
      "/**\n * Desc.\n *\n **/\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtEnd\":true}]\n// Message: Should be no multiple asterisks on end lines.",
      "/**\n * Desc.\n *\n abc * **/\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtEnd\":true}]\n// Message: Should be no multiple asterisks on end lines.",
      "/**\n * Desc.\n *\n **/\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtMiddleLines\":false}]\n// Message: Should be no multiple asterisks on end lines.",
      "/** Desc. **/\n// Message: Should be no multiple asterisks on end lines.",
      "/** @someTag name desc. **/\n// Message: Should be no multiple asterisks on end lines.",
      "/** abc * */\n// Message: Should be no multiple asterisks on end lines.",
      "/**\n * Preserve user's whitespace when fixing (though one may also\n *   use an align rule)\n *\n * */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtEnd\":true}]\n// Message: Should be no multiple asterisks on end lines.",
      "/**\n * The method does 2 things:\n * * Thing 1\n * * Thing 2\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"allowWhitespace\":false}]\n// Message: Should be no multiple asterisks on middle lines.",
      "/**\n * This muti-line comment contains some\n * *non-standard bold* syntax\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"allowWhitespace\":false}]\n// Message: Should be no multiple asterisks on middle lines.",
      "/** Desc. **/\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"allowWhitespace\":true}]\n// Message: Should be no multiple asterisks on end lines."
    ],
    "valid": [
      "/**\n *\n * Desc. ***\n */",
      "/**\n * Desc. ***\n *\n */",
      "/**\n * Desc.\n *\n * sth */",
      "/**\n **\n *\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtMiddleLines\":false}]",
      "/**\n *\n *\n **/\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"preventAtEnd\":false}]",
      "/**\n * With a desc.\n * and ***\n */",
      "/**\n * and ***\n * With a desc.\n */",
      "/**\n * With a desc.\n * With a desc.\n * Desc. */",
      "/**\n * With a description\n * @tag {SomeType} and a tag with details\n *\n */",
      "/** abc */\nfunction foo() {\n    //\n}",
      "/** foo */\nfunction foo(): void {\n    //\n}",
      "/** @aTag abc */\nfunction foo() {\n    //\n}",
      "/**\n * **Bold**\n */",
      "/**\n * Preserve user's bold statement when fixing.\n *\n * **Bold example:** Hi there.\n */",
      "/**\n * The method does 2 things:\n * * Thing 1\n * * Thing 2\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"allowWhitespace\":true}]",
      "/**\n * This muti-line comment contains some\n * *non-standard bold* syntax\n */\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"allowWhitespace\":true}]",
      "/** abc */\nfunction foo() {\n    //\n}\n// \"jsdoc/no-multi-asterisks\": [\"error\"|\"warn\", {\"allowWhitespace\":true}]"
    ]
  },
  "noRestrictedSyntax": {
    "invalid": [
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[\"FunctionDeclaration\"]}]\n// Message: Syntax is restricted: FunctionDeclaration",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"FunctionDeclaration\",\"message\":\"Oops: `{{context}}`.\"}]}]\n// Message: Oops: `FunctionDeclaration`.",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"}]}]\n// Message: Syntax is restricted: FunctionDeclaration with JsdocBlock[postDelimiter=\"\"]:has(JsdocTypeUnion > JsdocTypeName[value=\"Bar\"]:nth-child(1))",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"message\":\"The foo one: {{context}}.\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"message\":\"The bar one: {{context}}.\"}]}]\n// Message: The bar one: FunctionDeclaration.",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"message\":\"The bar one: {{context}}.\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\",\"message\":\"The foo one: {{context}}.\"}]}]\n// Message: The bar one: FunctionDeclaration.",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// Message: Rule `no-restricted-syntax` is missing a `context` option.",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction a () {}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"FunctionDeclaration\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]\n// Message: Only allowing names not matching `/^opt_/i`.",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction a () {}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]\n// Message: Only allowing names not matching `/^opt_/i`.",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction a () {}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]\n// Message: Only allowing names not matching `/^opt_/i`.",
      "/**\n * @param opt_a\n * @param opt_b\n */\nfunction a () {}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/not-this/])\",\"context\":\"any\",\"message\":\"Only allowing names not matching `/^not-this/i`.\"},{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]\n// Message: Only allowing names not matching `/^opt_/i`.",
      "/**\n * @param opt_a\n * @param opt_b\n */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]\n// Message: Only allowing names not matching `/^opt_/i`.",
      "/**\n * @enum {String}\n * Object holding values of some custom enum\n */\nconst MY_ENUM = Object.freeze({\n  VAL_A: \"myvala\"\n} as const);\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag ~ JsdocTag[tag=/private|protected/])\",\"context\":\"any\",\"message\":\"Access modifier tags must come first\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[tag=\\\"enum\\\"])\",\"context\":\":declaration\",\"message\":\"@enum not allowed on declarations\"}]}]\n// Message: @enum not allowed on declarations",
      "/** @type {React.FunctionComponent<{ children: React.ReactNode }>}*/\nconst MyComponent = ({ children }) => {\n   return children;\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[tag=\\\"type\\\"]:has([value=/FunctionComponent/]))\",\"context\":\"any\",\"message\":\"The `FunctionComponent` type is not allowed. Please use `FC` instead.\"}]}]\n// Message: The `FunctionComponent` type is not allowed. Please use `FC` instead.",
      "/** Some text and more */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[descriptionStartLine=0][descriptionEndLine=0]\",\"context\":\"any\",\"message\":\"Requiring descriptive text on 0th line only\"}]}]\n// Message: Requiring descriptive text on 0th line only",
      "/** Some text and\n* more\n*/\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[descriptionStartLine=0][hasPreterminalDescription=0]\",\"context\":\"any\",\"message\":\"Requiring descriptive text on 0th line and no preterminal description\"}]}]\n// Message: Requiring descriptive text on 0th line and no preterminal description",
      "/** Some text\n* @param sth Param text followed by no newline */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[descriptionStartLine=0][hasPreterminalTagDescription=1]\",\"context\":\"any\",\"message\":\"Requiring descriptive text on 0th line but no preterminal description\"}]}]\n// Message: Requiring descriptive text on 0th line but no preterminal description",
      "/**\n *\n */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:not(*:has(JsdocTag[tag=see]))\",\"context\":\"any\",\"message\":\"@see required on each block\"}]}]\n// Message: @see required on each block"
    ],
    "valid": [
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[\"FunctionExpression\"]}]",
      "/**\n * @implements {Bar|Foo}\n */\nfunction quux () {\n\n}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Foo\\\"]:nth-child(1))\",\"context\":\"FunctionDeclaration\"}]}]",
      "/**\n * @param ab\n * @param cd\n */\nfunction a () {}\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]",
      "/**\n * @param ab\n * @param cd\n */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"context\":\"any\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]",
      "/**\n * @param ab\n * @param cd\n */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[name=/opt_/])\",\"message\":\"Only allowing names not matching `/^opt_/i`.\"}]}]",
      "/**\n * @enum {String}\n * Object holding values of some custom enum\n */\nconst MY_ENUM = Object.freeze({\n  VAL_A: \"myvala\"\n} as const);\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag ~ JsdocTag[tag=/private|protected/])\",\"context\":\"any\",\"message\":\"Access modifier tags must come first\"},{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[tag=\\\"enum\\\"])\",\"context\":\":declaration:not(TSEnumDeclaration):not(:has(ObjectExpression)), :function\",\"message\":\"@enum is only allowed on potential enum types\"}]}]",
      "/**\n * @param {(...args: any[]) => any} fn\n * @returns {(...args: any[]) => any}\n */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[tag=\\\"type\\\"]:has([value=/FunctionComponent/]))\",\"context\":\"any\",\"message\":\"The `FunctionComponent` type is not allowed. Please use `FC` instead.\"}]}]",
      "/** Does something very important. */\nfunction foo(): string;\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[endLine=0][description!=/^\\\\S[\\\\s\\\\S]*\\\\S\\\\s$/]\"}]}]",
      "/** Some text and more */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[descriptionStartLine=0][descriptionEndLine=1]\",\"context\":\"any\",\"message\":\"Requiring descriptive text on 0th line and no final newline\"}]}]",
      "/** Some text and\n* more */\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[descriptionStartLine=0][hasPreterminalDescription=0]\",\"context\":\"any\",\"message\":\"Requiring descriptive text on 0th line and no preterminal description\"}]}]",
      "/** Some text\n* @param sth Param text followed by newline\n*/\n// \"jsdoc/no-restricted-syntax\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[descriptionStartLine=0][hasPreterminalTagDescription=1]\",\"context\":\"any\",\"message\":\"Requiring descriptive text on 0th line but no preterminal description\"}]}]"
    ]
  },
  "noTypes": {
    "invalid": [
      "/**\n * @param {number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Types are not permitted on @param.",
      "class quux {\n  /**\n   * @param {number} foo\n   */\n  bar (foo) {\n\n  }\n}\n// Message: Types are not permitted on @param.",
      "/**\n * @param {number} foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/no-types\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Types are not permitted on @param.",
      "class quux {\n  /**\n   * @param {number} foo\n   */\n  quux (foo) {\n\n  }\n}\n// \"jsdoc/no-types\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Types are not permitted on @param.",
      "/**\n * @function\n * @param {number} foo\n */\n// \"jsdoc/no-types\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Types are not permitted on @param.",
      "/**\n * @callback\n * @param {number} foo\n */\n// \"jsdoc/no-types\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Types are not permitted on @param.",
      "/**\n * @returns {number}\n */\nfunction quux () {\n\n}\n// Message: Types are not permitted on @returns.",
      "/**\n * Beep\n * Boop\n *\n * @returns {number}\n */\nfunction quux () {\n\n}\n// Message: Types are not permitted on @returns."
    ],
    "valid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo\n */\n// \"jsdoc/no-types\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n * @param {number} foo\n */",
      "/**\n * @callback\n * @param {number} foo\n */",
      "/*** Oops that's too many asterisks by accident **/\nfunction a () {}"
    ]
  },
  "noUndefinedTypes": {
    "invalid": [
      "/**\n * @param {HerType} baz - Foo.\n */\nfunction quux(foo, bar, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"HerType\":1000}}}\n// Message: Invalid `settings.jsdoc.preferredTypes`. Values must be falsy, a string, or an object.",
      "/**\n * @param {HerType} baz - Foo.\n */\nfunction quux(foo, bar, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"HerType\":false}}}\n// Message: The type 'HerType' is undefined.",
      "/**\n * @param {strnig} foo - Bar.\n */\nfunction quux(foo) {\n\n}\n// Message: The type 'strnig' is undefined.",
      "/**\n * @param {MyType} foo - Bar.\n * @param {HisType} bar - Foo.\n */\nfunction quux(foo, bar) {\n\n}\n// \"jsdoc/no-undefined-types\": [\"error\"|\"warn\", {\"definedTypes\":[\"MyType\"]}]\n// Message: The type 'HisType' is undefined.",
      "/**\n * @param {MyType} foo - Bar.\n * @param {HisType} bar - Foo.\n * @param {HerType} baz - Foo.\n */\nfunction quux(foo, bar, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"hertype\":{\"replacement\":\"HerType\"}}}}\n// \"jsdoc/no-undefined-types\": [\"error\"|\"warn\", {\"definedTypes\":[\"MyType\"]}]\n// Message: The type 'HisType' is undefined.",
      " /**\n  * @param {MyType} foo - Bar.\n  * @param {HisType} bar - Foo.\n  * @param {HerType} baz - Foo.\n  */\nfunction quux(foo, bar, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"hertype\":{\"replacement\":false},\"histype\":\"HisType\"}}}\n// \"jsdoc/no-undefined-types\": [\"error\"|\"warn\", {\"definedTypes\":[\"MyType\"]}]\n// Message: The type 'HerType' is undefined.",
      "/**\n * @template TEMPLATE_TYPE\n * @param {WRONG_TEMPLATE_TYPE} bar\n */\nfunction foo (bar) {\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: The type 'WRONG_TEMPLATE_TYPE' is undefined.",
      "class Foo {\n  /**\n   * @return {TEMPLATE_TYPE}\n   */\n  bar () {\n  }\n}\n// Message: The type 'TEMPLATE_TYPE' is undefined.",
      "class Foo {\n  /**\n   * @return {TEMPLATE_TYPE}\n   */\n  invalidTemplateReference () {\n  }\n}\n\n/**\n * @template TEMPLATE_TYPE\n */\nclass Bar {\n  /**\n   * @return {TEMPLATE_TYPE}\n   */\n  validTemplateReference () {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}\n// Message: The type 'TEMPLATE_TYPE' is undefined.",
      "/**\n * @type {strnig}\n */\nvar quux = {\n\n};\n// Message: The type 'strnig' is undefined.",
      "/**\n * @template TEMPLATE_TYPE_A, TEMPLATE_TYPE_B\n */\nclass Foo {\n  /**\n   * @param {TEMPLATE_TYPE_A} baz\n   * @return {TEMPLATE_TYPE_B}\n   */\n  bar (baz) {\n  }\n}\n// Message: The type 'TEMPLATE_TYPE_A' is undefined.",
      "/**\n * @param {...VAR_TYPE} varargs\n */\nfunction quux (varargs) {\n}\n// Message: The type 'VAR_TYPE' is undefined.",
      "/**\n * @this {Navigator}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: The type 'Navigator' is undefined.",
      "/**\n * @export {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: The type 'SomeType' is undefined.",
      "/**\n * @aCustomTag {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":true}}}}\n// Message: The type 'SomeType' is undefined.",
      "/**\n * @aCustomTag {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":[\"aType\",\"anotherType\"]}}}}\n// Message: The type 'SomeType' is undefined.",
      "/**\n * @namepathDefiner SomeType\n */\n/**\n * @type {SomeType}\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"namepathDefiner\":{\"name\":\"namepath-referencing\"}}}}\n// Message: The type 'SomeType' is undefined.",
      "/**\n * @namepathDefiner SomeType\n */\n/**\n * @type {SomeType}\n */\n// Message: The type 'SomeType' is undefined.",
      "/**\n * @template abc TEMPLATE_TYPE\n * @param {TEMPLATE_TYPE} bar\n */\nfunction foo (bar) {\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: The type 'TEMPLATE_TYPE' is undefined.",
      "/**\n * @suppress {visibility}\n */\nfunction foo () {\n}\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: The type 'visibility' is undefined.",
      "/**\n* @typedef Todo\n* @property description\n* @property otherStuff\n*/\n/**\n * @type {Omit<Todo, \"description\">}\n */\nconst a = new Todo();\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: The type 'Omit' is undefined."
    ],
    "valid": [
      "/**\n * @param {string} foo - Bar.\n */\nfunction quux(foo) {\n\n}",
      "/**\n * @param {Promise} foo - Bar.\n */\nfunction quux(foo) {\n\n}",
      "class MyClass {}\n\n/**\n * @param {MyClass} foo - Bar.\n */\nfunction quux(foo) {\n  console.log(foo);\n}\n\nquux(0);",
      "const MyType = require('my-library').MyType;\n\n/**\n * @param {MyType} foo - Bar.\n */\n  function quux(foo) {\n\n}",
      "const MyType = require('my-library').MyType;\n\n/**\n * @param {MyType} foo - Bar.\n */\n  function quux(foo) {\n\n}",
      "const MyType = require('my-library').MyType;\n\n/**\n * @param {MyType} foo - Bar.\n */\n  function quux(foo) {\n\n}",
      "import {MyType} from 'my-library';\n\n/**\n * @param {MyType} foo - Bar.\n * @param {object<string, number>} foo\n * @param {Array<string>} baz\n */\n  function quux(foo, bar, baz) {\n\n}",
      "/*globals MyType*/\n\n/**\n * @param {MyType} foo - Bar.\n * @param {HisType} bar - Foo.\n */\n  function quux(foo, bar) {\n\n}",
      "/**\n * @typedef {object} hello\n * @property {string} a - a.\n */\n\n/**\n * @param {hello} foo\n */\nfunction quux(foo) {\n\n}",
      "/**\n * @param {Array<syntaxError} foo\n */\nfunction quux(foo) {\n\n}",
      "/**\n * Callback test.\n *\n * @callback addStuffCallback\n * @param {String} sum - An test integer.\n */\n/**\n * Test Eslint.\n *\n * @param {addStuffCallback} callback - A callback to run.\n */\nfunction testFunction(callback) {\n  callback();\n}",
      "/**\n *\n *\n */\nfunction foo () {\n\n}",
      "/**\n * @param {MyType} foo - Bar.\n * @param {HisType} bar - Foo.\n */\nfunction quux(foo, bar) {\n\n}\n// \"jsdoc/no-undefined-types\": [\"error\"|\"warn\", {\"definedTypes\":[\"MyType\",\"HisType\"]}]",
      "/**\n * @param {MyType} foo - Bar.\n * @param {HisType} bar - Foo.\n * @param {HerType} baz - Foo.\n */\nfunction quux(foo, bar, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"hertype\":{\"replacement\":\"HerType\"},\"histype\":\"HisType\"}}}\n// \"jsdoc/no-undefined-types\": [\"error\"|\"warn\", {\"definedTypes\":[\"MyType\"]}]",
      "/**\n * @param {MyType} foo - Bar.\n * @param {HisType} bar - Foo.\n * @param {HerType} baz - Foo.\n */\nfunction quux(foo, bar, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"preferredTypes\":{\"hertype\":{\"replacement\":\"HerType<>\"},\"histype\":\"HisType.<>\"}}}\n// \"jsdoc/no-undefined-types\": [\"error\"|\"warn\", {\"definedTypes\":[\"MyType\"]}]",
      "/**\n * @template TEMPLATE_TYPE\n * @param {TEMPLATE_TYPE} bar\n * @return {TEMPLATE_TYPE}\n */\nfunction foo (bar) {\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template TEMPLATE_TYPE\n */\nclass Foo {\n  /**\n   * @return {TEMPLATE_TYPE}\n   */\n  bar () {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template TEMPLATE_TYPE\n */\nclass Foo {\n  /**\n   * @return {TEMPLATE_TYPE}\n   */\n  bar () {}\n\n  /**\n   * @return {TEMPLATE_TYPE}\n   */\n  baz () {}\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template TEMPLATE_TYPE_A, TEMPLATE_TYPE_B\n */\nclass Foo {\n  /**\n   * @param {TEMPLATE_TYPE_A} baz\n   * @return {TEMPLATE_TYPE_B}\n   */\n  bar (baz) {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template TEMPLATE_TYPE_A, TEMPLATE_TYPE_B - Some description\n */\nclass Foo {\n  /**\n   * @param {TEMPLATE_TYPE_A} baz\n   * @return {TEMPLATE_TYPE_B}\n   */\n  bar (baz) {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/****/\n\n/* */\n\n/*** */\n\n/**\n *\n */\nfunction quux () {\n\n}",
      "/**\n * @typedef {object} BaseObject\n */\n/**\n * Run callback when hooked method is called.\n *\n * @template {BaseObject} T\n * @param {T} obj - object whose method should be hooked.\n * @param {string} method - method which should be hooked.\n * @param {(sender: T) => void} callback - callback which should\n * be called when the hooked method was invoked.\n */\nfunction registerEvent(obj, method, callback) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      " /**\n * @param {...} varargs\n */\nfunction quux (varargs) {\n}",
      "/**\n * @param {...number} varargs\n */\nfunction quux (varargs) {\n}",
      "class Navigator {}\n/**\n * @this {Navigator}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "class SomeType {}\n/**\n * @export {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template T\n * @param {T} arg\n */\nfunction example(arg) {\n\n  /** @param {T} */\n  function inner(x) {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "const init = () => {\n  /**\n   * Makes request\n   * @returns {Promise}\n   */\n  function request() {\n    return Promise.resolve('success');\n  }\n};",
      "/** Gets a Promise resolved with a given value.\n *\n * @template ValueType\n * @param {ValueType} value Value to resolve.\n * @returns {Promise<ValueType>} Promise resolved with value.\n */\nexports.resolve1 = function resolve1(value) {\n  return Promise.resolve(value);\n};\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * A function returning the same type as its argument.\n *\n * @template ValueType\n * @typedef {ValueType} ValueFunc\n */\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @aCustomTag {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":false}}}}",
      "/**\n * @aCustomTag {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":[\"aType\",\"SomeType\"]}}}}",
      "/**\n * @namepathDefiner SomeType\n */\n/**\n * @type {SomeType}\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"namepathDefiner\":{\"name\":\"namepath-defining\"}}}}",
      "class Test {\n  /**\n   * Method.\n   *\n   * @returns {this} Return description.\n   */\n  method (): this {\n    return this;\n  }\n}",
      "/**\n * Bad types ignored here and handled instead by `valid-types`.\n * @param {string(} foo - Bar.\n */\nfunction quux(foo) {\n\n}",
      "/**\n * @template T\n * @param {T} arg\n * @returns {[T]}\n */\nfunction genericFunctionExample(arg) {\n  const result = /** @type {[T]} */ (new Array());\n  result[0] = arg;\n  return result;\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/** @typedef QDigestNode */\nclass A {\n  /**\n   * @template {object} T\n   * @param {(node: QDigestNode) => T} callback\n   * @returns {T[]}\n   */\n  map(callback) {\n    /** @type {T[]} */\n    let vals;\n    return vals;\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @template T\n * @param {T} arg\n */\nfunction example(arg) {\n\n  /** @param {T} */\n  function inner(x) {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @suppress {visibility}\n */\nfunction foo () {\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template T\n */\nexport class Foo {\n  // cast to T\n  getType() {\n    const x = \"hello\";\n    const y = /** @type {T} */ (x);\n    return y;\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @type {const}\n */\nconst a = 'string';",
      "/**\n* @typedef Todo\n* @property description\n* @property otherStuff\n*/\n/**\n * @type {Omit<Todo, \"description\">}\n */\nconst a = new Todo();\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @template A, [B=SomeDefault]\n */\nclass Foo {\n  /**\n   * @param {A} baz\n   * @return {B}\n   */\n  bar (baz) {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}"
    ]
  },
  "requireAsteriskPrefix": {
    "invalid": [
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc line to have the prefix.",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"any\",{\"tags\":{\"always\":[\"param\"]}}]\n// Message: Expected JSDoc line to have the prefix.",
      "\n/**\n * Desc\n\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc line to have the prefix.",
      "\n/**\n *\n Desc\n */\nfunction quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc line to have the prefix.",
      "\n/**\n * Desc\n *\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc line to have no prefix.",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"any\":[\"someOtherTag\"]}}]\n// Message: Expected JSDoc line to have the prefix.",
      "\n/**\n * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"always\":[\"someOtherTag\"]}}]\n// Message: Expected JSDoc line to have no prefix.",
      "\n/**\n * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"never\":[\"param\"]}}]\n// Message: Expected JSDoc line to have no prefix.",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"always\":[\"param\"]}}]\n// Message: Expected JSDoc line to have the prefix.",
      "/**\n  @param {Number} foo\n */function quux (foo) {\n  // with spaces\n}\n// Message: Expected JSDoc line to have the prefix.",
      "\n/**\n * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc line to have no prefix.",
      "/**\n  *@param {Number} foo\n */function quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected JSDoc line to have no prefix."
    ],
    "valid": [
      "/**\n * Desc\n *\n * @param {Number} foo\n *   This is more comment.\n */\nfunction quux (foo) {\n\n}",
      "/**\n * Desc\n *\n * @param {{\n * foo: Bar,\n * bar: Baz\n * }} foo\n *\n */\nfunction quux (foo) {\n\n}",
      "/*  <- JSDoc must start with 2 stars.\n So this is unchecked.\n */\nfunction quux (foo) {}",
      "/** @param {Number} foo */\nfunction quux (foo) {\n  // with spaces\n}",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"any\":[\"param\"]}}]",
      "\n/**\n * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"always\":[\"param\"]}}]",
      "\n/**\n * @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"never\":[\"someOtherTag\"]}}]",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"never\":[\"param\"]}}]",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"always\":[\"someOtherTag\"]}}]",
      "\n/**\n * Desc\n *\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"any\":[\"*description\"]}}]",
      "\n/**\n * Desc\n\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"any\":[\"*description\"]}}]",
      "\n/**\n @param {Number} foo\n */\nfunction quux (foo) {\n  // with spaces\n}\n// \"jsdoc/require-asterisk-prefix\": [\"error\"|\"warn\", \"any\",{\"tags\":{\"always\":[\"someOtherTag\"]}}]"
    ]
  },
  "requireDescription": {
    "invalid": [
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"any\"}]\n// Message: Missing JSDoc block description or @description declaration.",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"body\"}]\n// Message: Missing JSDoc block description.",
      "/**\n * @desc Not a blank description\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"body\"}]\n// Message: Remove the @desc tag to leave a plain block description or add additional description text above the @desc line.",
      "/**\n * @description Not a blank description\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"body\"}]\n// Message: Remove the @description tag to leave a plain block description or add additional description text above the @description line.",
      "/**\n *\n */\nclass quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n *\n */\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n *\n */\nclass quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n *\n */\nclass quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n * @description\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description description.",
      "/**\n *\n */\ninterface quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n *\n */\nvar quux = class {\n\n};\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassExpression\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n *\n */\nvar quux = {\n\n};\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"ObjectExpression\"],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n * @someDesc\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":{\"message\":\"Please avoid `{{tagName}}`; use `{{replacement}}` instead\",\"replacement\":\"someDesc\"}}}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @someDesc description.",
      "/**\n * @description\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]\n// Message: Unexpected tag `@description`",
      "/**\n * @description\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"any\"}]\n// Message: Missing JSDoc block description or @description declaration.",
      "/**\n *\n */\nfunction quux () {\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"exemptedBy\":[\"notPresent\"]}]\n// Message: Missing JSDoc block description.",
      "class TestClass {\n  /**\n   *\n   */\n  constructor() { }\n}\n// Message: Missing JSDoc block description.",
      "class TestClass {\n  /**\n   *\n   */\n  constructor() { }\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkConstructors\":true}]\n// Message: Missing JSDoc block description.",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() { }\n}\n// Message: Missing JSDoc block description.",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() { }\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkGetters\":true}]\n// Message: Missing JSDoc block description.",
      "class TestClass {\n  /**\n   *\n   */\n  set Test(value) { }\n}\n// Message: Missing JSDoc block description.",
      "class TestClass {\n  /**\n   *\n   */\n  set Test(value) { }\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkSetters\":true}]\n// Message: Missing JSDoc block description.",
      "/**\n *\n */\nclass Foo {\n    /**\n     *\n     */\n    constructor() {}\n\n    /**\n     *\n     */\n    bar() {}\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkConstructors\":false,\"contexts\":[\"MethodDefinition\"]}]\n// Message: Missing JSDoc block description.",
      "/**\n * @implements {Bar}\n */\nclass quux {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[rawType=\\\"Bar\\\"])\",\"context\":\"ClassDeclaration\"}],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n * Has some\n *   description already.\n * @implements {Bar}\n */\nclass quux {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[rawType=\\\"Bar\\\"])\",\"context\":\"ClassDeclaration\"}],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n * @implements {Bar\n *   | Foo}\n */\nclass quux {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTypeUnion > JsdocTypeName[value=\\\"Bar\\\"]:nth-child(1))\",\"context\":\"ClassDeclaration\"}],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n * @implements {Bar}\n */\nclass quux {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[tag=\\\"implements\\\"])\",\"context\":\"ClassDeclaration\"}],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration.",
      "/**\n * @implements {Bar}\n */\nclass quux {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[tag=\\\"implements\\\"])\",\"context\":\"any\"}],\"descriptionStyle\":\"tag\"}]\n// Message: Missing JSDoc @description declaration."
    ],
    "valid": [
      "/**\n *\n */",
      "/**\n * @description\n * // arbitrary description content\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n * @description\n * quux(); // does something useful\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n * @description <caption>Valid usage</caption>\n * quux(); // does something useful\n *\n * @description <caption>Invalid usage</caption>\n * quux('random unwanted arg'); // results in an error\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n *\n */\nclass quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"]}]",
      "/**\n * @type {MyCallback}\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"exemptedBy\":[\"type\"]}]",
      "/**\n *\n */\ninterface quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "interface quux {\n  /**\n   * If the thing should be checked.\n   */\n  checked?: boolean\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[\"TSPropertySignature\"]}]",
      "/**\n *\n */\nvar quux = class {\n\n};\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n *\n */\nvar quux = {\n\n};\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n * Has an implicit description\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"body\"}]",
      "/**\n * Has an implicit description\n */\nfunction quux () {\n\n}",
      "/**\n * Has an implicit description\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"any\"}]",
      "/**\n * @description Has an explicit description\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"any\"}]",
      "/**\n *\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}",
      "class TestClass {\n  /**\n   * Test.\n   */\n  constructor() { }\n}",
      "class TestClass {\n  /**\n   *\n   */\n  constructor() { }\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkConstructors\":false}]",
      "class TestClass {\n  /**\n   * Test.\n   */\n  get Test() { }\n}",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() { }\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkGetters\":false}]",
      "class TestClass {\n  /**\n   * Test.\n   */\n  set Test(value) { }\n}",
      "class TestClass {\n  /**\n   *\n   */\n  set Test(value) { }\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"checkSetters\":false}]",
      "/**\n * Multi\n * line\n */\nfunction quux () {\n\n}",
      "/** Single line */\nfunction quux () {\n\n}",
      "/** @description something */\nfunction quux () {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"descriptionStyle\":\"tag\"}]",
      "/**\n * @implements {Bar}\n */\nclass quux {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=/\\\\s{4}/]:has(JsdocTag[rawType=\\\"class\\\"])\",\"context\":\"ClassDeclaration\"}],\"descriptionStyle\":\"tag\"}]",
      "/**\n * Has some\n *   description already.\n */\nclass quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[rawType=\\\"{Bar}\\\"])\",\"context\":\"ClassDeclaration\"}],\"descriptionStyle\":\"tag\"}]",
      "/**\n * Has some\n *   description already.\n */\nclass quux {\n\n}\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[rawType=\\\"{Bar}\\\"])\",\"context\":\"any\"}],\"descriptionStyle\":\"tag\"}]",
      "/**\n * Has some\n *   description already.\n */\n// \"jsdoc/require-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock[postDelimiter=\\\"\\\"]:has(JsdocTag[rawType=\\\"{Bar}\\\"])\",\"context\":\"any\"}],\"descriptionStyle\":\"tag\"}]"
    ]
  },
  "requireDescriptionCompleteSentence": {
    "invalid": [
      "/**\n * foo.\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * foo?\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * @description foo.\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Foo)\n */\nfunction quux () {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * `foo` is a variable\n */\nfunction quux () {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * Foo.\n *\n * foo.\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * тест.\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Foo\n */\nfunction quux () {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * Foo\n * Bar.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"newlineBeforeCapsAssumesBadSentenceEnd\":true}]\n// Message: A line of text is started with an uppercase character, but preceding line does not end the sentence.",
      "/**\n * Foo.\n *\n * @param foo foo.\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Foo.\n *\n * @param foo bar\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * {@see Foo.bar} buz\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Foo.\n *\n * @returns {number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Foo.\n *\n * @returns foo.\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * lorem ipsum dolor sit amet, consectetur adipiscing elit. pellentesque elit diam,\n * iaculis eu dignissim sed, ultrices sed nisi. nulla at ligula auctor, consectetur neque sed,\n * tincidunt nibh. vivamus sit amet vulputate ligula. vivamus interdum elementum nisl,\n * vitae rutrum tortor semper ut. morbi porta ante vitae dictum fermentum.\n * proin ut nulla at quam convallis gravida in id elit. sed dolor mauris, blandit quis ante at,\n * consequat auctor magna. duis pharetra purus in porttitor mollis.\n */\nfunction longDescription (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * @arg {number} foo - Foo\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * @argument {number} foo - Foo\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * @return {number} foo\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Returns bar.\n *\n * @return {number} bar\n */\nfunction quux (foo) {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * @throws {object} Hello World\n * hello world\n*/\n// Message: Sentence must end with a period.",
      "/**\n * @summary Foo\n */\nfunction quux () {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * @throws {SomeType} Foo\n */\nfunction quux () {\n\n}\n// Message: Sentence must end with a period.",
      "/**\n * @see Foo\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"tags\":[\"see\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * @param foo Foo bar\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"tags\":[\"param\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * Sorry, but this isn't a complete sentence, Mr.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * Sorry, but this isn't a complete sentence Mr.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr.\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * Sorry, but this isn't a complete sentence Mr. \n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * Sorry, but this isn't a complete sentence Mr. and Mrs.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\",\"Mrs\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * This is a complete sentence. But this isn't, Mr.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * This is a complete Mr. sentence. But this isn't, Mr.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\"]}]\n// Message: Sentence must end with a period.",
      "/**\n * This is a complete Mr. sentence.\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * This is fun, i.e. enjoyable, but not superlatively so, e.g. not\n * super, wonderful, etc..\n */\nfunction quux () {\n\n}\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Do not have dynamic content; e.g. homepage. Here a simple unique id\n * suffices.\n */\n function quux () {\n\n }\n// Message: Sentence should start with an uppercase character.",
      "/**\n * Implements support for the\n * Swahili voice synthesizer.\n */\nfunction speak() {\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"newlineBeforeCapsAssumesBadSentenceEnd\":true}]\n// Message: A line of text is started with an uppercase character, but preceding line does not end the sentence.",
      "/**\n * Foo.\n *\n * @template TempA, TempB foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"tags\":[\"template\"]}]\n// Message: Sentence should start with an uppercase character."
    ],
    "valid": [
      "/**\n * @param foo - Foo.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n * Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n *\n * Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Тест.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo\n * bar.\n */\nfunction quux () {\n\n}",
      "/**\n * @returns Foo bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo. {@see Math.sin}.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo {@see Math.sin} bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo?\n *\n * Bar!\n *\n * Baz:\n *   1. Foo.\n *   2. Bar.\n */\nfunction quux () {\n\n}",
      "/**\n * Hello:\n * World.\n */\nfunction quux () {\n\n}",
      "/**\n * Hello: world.\n */\nfunction quux () {\n\n}",
      "/**\n *\n */\nfunction quux () {\n\n}",
      "/**\n * @description Foo.\n */\nfunction quux () {\n\n}",
      "/**\n * `foo` is a variable.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n *\n * `foo`.\n */\nfunction quux () {\n\n}",
      "/**\n * @param foo - `bar`.\n */\nfunction quux () {\n\n}",
      "/**\n * @returns {number} `foo`.\n */\nfunction quux () {\n\n}",
      "/**\n * Foo\n * `bar`.\n */\nfunction quux () {\n\n}",
      "/**\n * @example Foo\n */\nfunction quux () {\n\n}",
      "/**\n * @see Foo\n */\nfunction quux () {\n\n}",
      "/**\n * Foo.\n *\n * @param foo Foo.\n */\nfunction quux (foo) {\n\n}",
      "/**\n * Foo.\n *\n * @param foo Foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"tags\":[\"param\"]}]",
      "/**\n * @param foo Foo bar.\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"tags\":[\"param\"]}]",
      "/**\n *\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"description\":false}}}",
      "/**\n* We stop loading Items when we have loaded:\n*\n* 1) The main Item;\n* 2) All its variants.\n*/",
      "/**\n * This method is working on 2 steps.\n *\n * | Step | Comment     |\n * |------|-------------|\n * |   1  | do it       |\n * |   2  | do it again |\n */",
      "/**\n * This is something that\n * I want to test.\n */\nfunction quux () {\n\n}",
      "/**\n * When making HTTP requests, the\n * URL is super important.\n */\nfunction quux () {\n\n}",
      "/**\n * Sorry, but this isn't a complete sentence, Mr.\n */\nfunction quux () {\n\n}",
      "/**\n * Sorry, but this isn't a complete sentence Mr..\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr.\"]}]",
      "/**\n * Sorry, but this isn't a complete sentence Mr. \n */\nfunction quux () {\n\n}",
      "/**\n * Sorry, but this isn't a complete sentence Mr. and Mrs..\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\",\"Mrs\"]}]",
      "/**\n * This is a complete sentence aMr.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\"]}]",
      "/**\n * This is a complete sentence. But this isn't, Mr.\n */\nfunction quux () {\n\n}",
      "/**\n * This is a complete Mr. Sentence. But this isn't, Mr.\n */\nfunction quux () {\n\n}",
      "/**\n * This is a complete Mr. sentence.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"Mr\"]}]",
      "/**\n * This is fun, i.e. enjoyable, but not superlatively so, e.g. not\n * super, wonderful, etc..\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"etc\",\"e.g.\",\"i.e.\"]}]",
      "\n**\n* Do not have dynamic content; e.g. homepage. Here a simple unique id\n* suffices.\n*/\nfunction quux () {\n\n}\n// \"jsdoc/require-description-complete-sentence\": [\"error\"|\"warn\", {\"abbreviations\":[\"etc\",\"e.g.\",\"i.e.\"]}]",
      "/**\n * Implements support for the\n * Swahili voice synthesizer.\n */\nfunction speak() {\n}",
      "/**\n * @param foo\n *\n * @returns {void}\n */\nexport default (foo) => {\n  foo()\n}",
      "/** @file To learn more,\n * see: https://github.com/d3/d3-ease. */"
    ]
  },
  "requireExample": {
    "invalid": [
      "/**\n *\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @example declaration.",
      "/**\n *\n */\nfunction quux (someParam) {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"exemptNoArguments\":true}]\n// Message: Missing JSDoc @example declaration.",
      "/**\n *\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @example declaration.",
      "/**\n * @example\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @example description.",
      "/**\n * @constructor\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @example declaration.",
      "/**\n * @constructor\n * @example\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @example description.",
      "/**\n *\n */\nclass quux {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"]}]\n// Message: Missing JSDoc @example declaration.",
      "/**\n *\n */\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @example declaration.",
      "/**\n *\n */\nfunction quux () {\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"exemptedBy\":[\"notPresent\"]}]\n// Message: Missing JSDoc @example declaration.",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkGetters\":true}]\n// Message: Missing JSDoc @example declaration.",
      "class TestClass {\n  /**\n   * @example\n   */\n  get Test() { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkGetters\":true}]\n// Message: Missing JSDoc @example description.",
      "class TestClass {\n  /**\n   *\n   */\n  set Test(value) { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkSetters\":true}]\n// Message: Missing JSDoc @example declaration.",
      "class TestClass {\n  /**\n   * @example\n   */\n  set Test(value) { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkSetters\":true}]\n// Message: Missing JSDoc @example description.",
      "/**\n *\n */\nfunction quux (someParam) {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"enableFixer\":true}]\n// Message: Missing JSDoc @example declaration.",
      "/**\n *\n */\nfunction quux (someParam) {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"enableFixer\":false}]\n// Message: Missing JSDoc @example declaration."
    ],
    "valid": [
      "/**\n *\n */",
      "/**\n * @example\n * // arbitrary example content\n */\nfunction quux () {\n\n}",
      "/**\n * @example\n * quux(); // does something useful\n */\nfunction quux () {\n\n}",
      "/**\n * @example <caption>Valid usage</caption>\n * quux(); // does something useful\n *\n * @example <caption>Invalid usage</caption>\n * quux('random unwanted arg'); // results in an error\n */\nfunction quux () {\n\n}",
      "/**\n * @constructor\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkConstructors\":false}]",
      "/**\n * @constructor\n * @example\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkConstructors\":false}]",
      "class Foo {\n  /**\n   *\n   */\n  constructor () {\n\n  }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkConstructors\":false}]",
      "/**\n * @inheritdoc\n */\nfunction quux () {\n\n}",
      "/**\n * @type {MyCallback}\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"exemptedBy\":[\"type\"]}]",
      "/**\n * @example Some example code\n */\nclass quux {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"]}]",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"contexts\":[\"ClassDeclaration\"]}]",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() { }\n}",
      "class TestClass {\n  /**\n   * @example\n   */\n  get Test() { }\n}",
      "class TestClass {\n  /**\n   * @example Test\n   */\n  get Test() { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkGetters\":true}]",
      "class TestClass {\n  /**\n   *\n   */\n  set Test(value) { }\n}",
      "class TestClass {\n  /**\n   * @example\n   */\n  set Test(value) { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkSetters\":false}]",
      "class TestClass {\n  /**\n   * @example Test\n   */\n  set Test(value) { }\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"checkSetters\":true}]",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-example\": [\"error\"|\"warn\", {\"exemptNoArguments\":true}]"
    ]
  },
  "requireFileOverview": {
    "invalid": [
      "\n// Message: Missing @file",
      "\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"file\":{\"initialCommentsOnly\":true,\"mustExist\":true,\"preventDuplicates\":true}}}]\n// Message: Missing @file",
      "\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"file\":{\"mustExist\":true}}}]\n// Message: Missing @file",
      "\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"author\":{\"initialCommentsOnly\":false,\"mustExist\":true,\"preventDuplicates\":false}}}]\n// Message: Missing @author",
      "/**\n *\n */\n// Message: Missing @file",
      "/**\n *\n */\nfunction quux () {}\n// Message: Missing @file",
      "/**\n *\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":\"fileoverview\"}}}\n// Message: Missing @fileoverview",
      "/**\n *\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":\"overview\"}}}\n// Message: Missing @overview",
      "/**\n *\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":false}}}\n// Message: `settings.jsdoc.tagNamePreference` cannot block @file for the `require-file-overview` rule",
      "/**\n *\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":false}}}\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"file\":{\"initialCommentsOnly\":false,\"mustExist\":true,\"preventDuplicates\":false}}}]\n// Message: `settings.jsdoc.tagNamePreference` cannot block @file for the `require-file-overview` rule",
      "/**\n *\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":{\"message\":\"Don't use file\"}}}}\n// Message: `settings.jsdoc.tagNamePreference` cannot block @file for the `require-file-overview` rule",
      "/**\n * @param a\n */\nfunction quux (a) {}\n// Message: Missing @file",
      "/**\n * @param a\n */\nfunction quux (a) {}\n\n/**\n * @param b\n */\nfunction bar (b) {}\n// Message: Missing @file",
      "/**\n * @file\n */\n\n /**\n  * @file\n  */\n// Message: Duplicate @file",
      "/**\n * @copyright\n */\n\n /**\n  * @copyright\n  */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"copyright\":{\"initialCommentsOnly\":false,\"mustExist\":false,\"preventDuplicates\":true}}}]\n// Message: Duplicate @copyright",
      "function quux () {\n}\n/**\n * @file\n */\n// Message: @file should be at the beginning of the file",
      "function quux () {\n}\n/**\n * @license\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":true,\"mustExist\":false,\"preventDuplicates\":false}}}]\n// Message: @license should be at the beginning of the file",
      "function quux () {\n}\n/**\n * @license\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":true}}}]\n// Message: @license should be at the beginning of the file",
      "/**\n * @file\n */\n\n/**\n * @file\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"file\":{\"initialCommentsOnly\":true,\"preventDuplicates\":true}}}]\n// Message: Duplicate @file"
    ],
    "valid": [
      "/**\n * @file\n */",
      "/**\n * @file\n */\n\n/**\n * @file\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":true,\"preventDuplicates\":true}}}]",
      "// Ok preceded by comment\n/**\n * @file\n */",
      "/**\n * @fileoverview\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":\"fileoverview\"}}}",
      "/**\n * @overview\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"file\":\"overview\"}}}",
      "/**\n * @file Description of file\n */",
      "/**\n * @file Description of file\n */\nfunction quux () {\n}\n\n/**\n *\n */",
      "function quux () {\n}\n/**\n *\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":true,\"mustExist\":false,\"preventDuplicates\":false}}}]",
      "function quux () {\n}\n/**\n *\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":false,\"mustExist\":false,\"preventDuplicates\":false}}}]",
      "function quux () {\n}\n/**\n *\n */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":false,\"mustExist\":false,\"preventDuplicates\":true}}}]",
      "/**\n * @license MIT\n */\n\n var a\n\n /**\n  * @type {Array}\n  */\n// \"jsdoc/require-file-overview\": [\"error\"|\"warn\", {\"tags\":{\"license\":{\"initialCommentsOnly\":true,\"mustExist\":false,\"preventDuplicates\":false}}}]"
    ]
  },
  "requireHyphenBeforeParamDescription": {
    "invalid": [
      "/**\n * @param foo Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a hyphen before @param description.",
      "/**\n * @param foo Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"*\":\"never\"}}]\n// Message: There must be a hyphen before @param description.",
      "/**\n * @param foo Foo.\n * @returns {SomeType} - Hyphen here.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"*\":\"never\",\"returns\":\"always\"}}]\n// Message: There must be a hyphen before @param description.",
      "/**\n * @param foo Foo.\n */\nfunction quux () {\n\n}\n// Message: There must be a hyphen before @param description.",
      "/**\n * @param foo - Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no hyphen before @param description.",
      "/**\n * @param foo    - Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\"]\n// Message: There must be no hyphen before @param description.",
      "/**\n * @param foo - foo\n * @param foo foo\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a hyphen before @param description.",
      "/**\n * @param foo foo\n * bar\n * @param bar - bar\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\"]\n// Message: There must be a hyphen before @param description.",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":false}}}\n// Message: Unexpected tag `@param`",
      "/**\n * @typedef {SomeType} ATypeDefName\n * @property foo Foo.\n */\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"property\":\"always\"}}]\n// Message: There must be a hyphen before @property description.",
      "/**\n * @template TempA, TempB A desc.\n */\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"template\":\"always\"}}]\n// Message: There must be a hyphen before @template description.",
      "/**\n * @typedef {SomeType} ATypeDefName\n * @property foo - Foo.\n */\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"property\":\"never\"}}]\n// Message: There must be no hyphen before @property description.",
      "/**\n * @param foo Foo.\n * @returns {SomeType} - A description.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"returns\":\"never\"}}]\n// Message: There must be a hyphen before @param description."
    ],
    "valid": [
      "/**\n * @param foo - Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * @param foo     - Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * @param foo - Foo.\n * @returns {SomeType} A description.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"returns\":\"never\"}}]",
      "/**\n * @param foo Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\"]",
      "/**\n * @param foo\n */\nfunction quux () {\n\n}",
      "/**\n *\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"*\":\"always\"}}]",
      "/**\n * @typedef {SomeType} ATypeDefName\n * @property foo - Foo.\n */\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"property\":\"always\"}}]",
      "/**\n * @typedef {SomeType} ATypeDefName\n * @property foo Foo.\n */\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"property\":\"never\"}}]",
      "/**\n * @typedef {SomeType} ATypeDefName\n * @property foo - Foo.\n */\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"*\":\"always\"}}]",
      "/** Entry point for module.\n *\n * @param {!Array<string>} argv Command-line arguments.\n */\nfunction main(argv) {\n};\n// \"jsdoc/require-hyphen-before-param-description\": [\"error\"|\"warn\", \"never\"]"
    ]
  },
  "requireJsdoc": {
    "invalid": [
      "/** This is comment */\nexport interface Foo {\n  /** This is comment x2 */\n  tom: string;\n  catchJerry(): boolean;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"ClassDeclaration\":true,\"ClassExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/** This is comment */\nexport interface Foo {\n  /** This is comment x2 */\n  tom: string;\n  jerry: number;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"ClassDeclaration\":true,\"ClassExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/** This is comment */\nexport interface Foo {\n  bar(): string;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]\n// Message: Missing JSDoc comment.",
      "/** This is comment */\nexport interface Foo {\n  bar: string;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true,\"esm\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n * Foo interface documentation.\n */\nexport interface Foo extends Bar {\n  /**\n   * baz method documentation.\n   */\n  baz(): void;\n\n  meow(): void;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSMethodSignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]\n// Message: Missing JSDoc comment.",
      "function quux (foo) {\n\n}\n// Message: Missing JSDoc comment.",
      "/**\n * @func myFunction\n */\nfunction myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"maxLines\":3,\"minLines\":2}}\n// Message: Missing JSDoc comment.",
      "/**\n * @func myFunction\n */\n\n\nfunction myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"maxLines\":2}}\n// Message: Missing JSDoc comment.",
      "/** @func myFunction */ function myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"minLines\":1}}\n// Message: Missing JSDoc comment.",
      "function myFunction() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"enableFixer\":false}]\n// Message: Missing JSDoc comment.",
      "export var test = function () {\n\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "function test () {\n\n}\nexport var test2 = test;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "export const test = () => {\n\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export const test = () => {\n\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"ArrowFunctionExpression\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export const test = () => {\n\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"ArrowFunctionExpression\"}],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export let test = class {\n\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ClassExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export default function () {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"FunctionDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "export default () => {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"ArrowFunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export default (function () {})\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export default class {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "function quux (foo) {\n\n}\n// Message: Missing JSDoc comment.",
      "function quux (foo) {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":true}]\n// Message: Missing JSDoc comment.",
      "function quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"minLines\":2}}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":true}]\n// Message: Missing JSDoc comment.",
      "function myFunction() {}\n// Message: Missing JSDoc comment.",
      "/**\n * Description for A.\n */\nclass A {\n   constructor(xs) {\n        this.a = xs;\n   }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "class A {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "class A extends B {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export class A extends B {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export default class A extends B {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "var myFunction = () => {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "var myFunction = () => () => {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "var foo = function() {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "const foo = {bar() {}}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "var foo = {bar: function() {}}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "function foo (abc) {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":false}]\n// Message: Missing JSDoc comment.",
      "function foo () {\n  return true;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":false}]\n// Message: Missing JSDoc comment.",
      "module.exports = function quux () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "module.exports = function quux () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "module.exports = {\n  method: function() {\n\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "module.exports = {\n  test: {\n    test2: function() {\n\n    }\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "module.exports = {\n  test: {\n    test2: function() {\n\n    }\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "const test = module.exports = function () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n*\n*/\nconst test = module.exports = function () {\n\n}\n\ntest.prototype.method = function() {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "const test = function () {\n\n}\nmodule.exports = {\n  test: test\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "const test = () => {\n\n}\nmodule.exports = {\n  test: test\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "class Test {\n    method() {\n\n    }\n}\nmodule.exports = Test;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export default function quux () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export default function quux () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "function quux () {\n\n}\nexport default quux;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export function test() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export function test() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "var test = function () {\n\n}\nvar test2 = 2;\nexport { test, test2 }\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "var test = function () {\n\n}\nexport { test as test2 }\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export default class A {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "export default class A {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "var test = function () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"window\":true},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "window.test = function () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"window\":true},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "function test () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"window\":true}}]\n// Message: Missing JSDoc comment.",
      "module.exports = function() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":true,\"esm\":false,\"window\":false},\"require\":{\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "export function someMethod() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"FunctionDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "export function someMethod() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"FunctionDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "const myObject = {\n  myProp: true\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"Property\"]}]\n// Message: Missing JSDoc comment.",
      "/**\n * Foo interface documentation.\n */\nexport interface Foo extends Bar {\n  /**\n   * baz method documentation.\n   */\n  baz(): void;\n\n  meow(): void;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSMethodSignature\"]}]\n// Message: Missing JSDoc comment.",
      "class MyClass {\n  someProperty: boolean; // Flow type annotation.\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":true,\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "export default class Test {\n  constructor(a) {\n    this.a = a;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":false,\"ClassExpression\":false,\"FunctionDeclaration\":false,\"FunctionExpression\":false,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export default class Test {\n  constructor(a) {\n    this.a = a;\n  }\n  private abc(a) {\n    this.a = a;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"MethodDefinition:not([accessibility=\\\"private\\\"]) > FunctionExpression\"],\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":false,\"ClassExpression\":false,\"FunctionDeclaration\":false,\"FunctionExpression\":false,\"MethodDefinition\":false}}]\n// Message: Missing JSDoc comment.",
      "e = function () {\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionDeclaration\":false,\"FunctionExpression\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nexport class Class {\n    test = 1;\n\n    foo() {\n        this.test = 2;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionDeclaration\":false,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "class Dog {\n  eat() {\n\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionDeclaration\":false,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "const hello = name => {\n  document.body.textContent = \"Hello, \" + name + \"!\";\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true,\"FunctionDeclaration\":false}}]\n// Message: Missing JSDoc comment.",
      "export const loginSuccessAction = (): BaseActionPayload => ({ type: LOGIN_SUCCESSFUL });\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true,\"FunctionDeclaration\":false}}]\n// Message: Missing JSDoc comment.",
      "export type Container = {\n  constants?: ObjByString;\n  enums?: { [key in string]: TypescriptEnum };\n  helpers?: { [key in string]: AnyFunction };\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSTypeAliasDeclaration\",{\"context\":\"TSPropertySignature\",\"inlineCommentBlock\":true}]}]\n// Message: Missing JSDoc comment.",
      "class Foo {\n    constructor() {}\n\n    bar() {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"MethodDefinition[key.name!=\\\"constructor\\\"]\"],\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "class Example extends React.PureComponent {\n  componentDidMount() {}\n\n  render() {}\n\n  someOtherMethod () {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"MethodDefinition:not([key.name=\\\"componentDidMount\\\"]):not([key.name=\\\"render\\\"])\"],\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "function foo(arg: boolean): boolean {\n  return arg;\n}\n\nfunction bar(arg: true): true;\nfunction bar(arg: false): false;\nfunction bar(arg: boolean): boolean {\n  return arg;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSDeclareFunction:not(TSDeclareFunction + TSDeclareFunction)\",\"FunctionDeclaration:not(TSDeclareFunction + FunctionDeclaration)\"],\"require\":{\"FunctionDeclaration\":false}}]\n// Message: Missing JSDoc comment.",
      "export function foo(arg: boolean): boolean {\n  return arg;\n}\n\nexport function bar(arg: true): true;\nexport function bar(arg: false): false;\nexport function bar(arg: boolean): boolean {\n  return arg;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"ExportNamedDeclaration[declaration.type=\\\"TSDeclareFunction\\\"]:not(ExportNamedDeclaration[declaration.type=\\\"TSDeclareFunction\\\"] + ExportNamedDeclaration[declaration.type=\\\"TSDeclareFunction\\\"])\",\"ExportNamedDeclaration[declaration.type=\\\"FunctionDeclaration\\\"]:not(ExportNamedDeclaration[declaration.type=\\\"TSDeclareFunction\\\"] + ExportNamedDeclaration[declaration.type=\\\"FunctionDeclaration\\\"])\"],\"require\":{\"FunctionDeclaration\":false}}]\n// Message: Missing JSDoc comment.",
      "module.exports.foo = (bar) => {\n  return bar + \"biz\"\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":false,\"require\":{\"ArrowFunctionExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "class Animal {\n\n  #name: string;\n\n  private species: string;\n\n  public color: string;\n\n  @SomeAnnotation('optionalParameter')\n  tail: boolean;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"PropertyDefinition\"]}]\n// Message: Missing JSDoc comment.",
      "@Entity('users')\nexport class User {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nclass Foo {\n    constructor() {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyConstructors\":false,\"require\":{\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nclass Foo {\n    constructor(notEmpty) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyConstructors\":true,\"require\":{\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nclass Foo {\n    constructor() {\n        const notEmpty = true;\n        return notEmpty;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyConstructors\":true,\"require\":{\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":false,\"required\":[\"name\"]}}}}\n// Message: Cannot add \"name\" to `require` with the tag's `name` set to `false`",
      "class Test {\n  aFunc() {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkConstructors\":false,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":false,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "class Test {\n  aFunc = () => {}\n  anotherFunc() {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":false,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export enum testEnum {\n  A, B\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSEnumDeclaration\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export interface Test {\n  aFunc: () => void;\n  aVar: string;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export type testType = string | number;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSTypeAliasDeclaration\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export interface Foo {\n    bar: number;\n    baz: string;\n    quux(): void;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSPropertySignature\",\"TSMethodSignature\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export class MyComponentComponent {\n  @Output()\n  public changed = new EventEmitter();\n\n  public test = 'test';\n\n  @Input()\n  public value = new EventEmitter();\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"PropertyDefinition > Decorator[expression.callee.name=\\\"Input\\\"]\"]}]\n// Message: Missing JSDoc comment.",
      "requestAnimationFrame(draw)\n\nfunction bench() {\n}\n// Message: Missing JSDoc comment.",
      "class Foo {\n  set aName (val) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkSetters\":\"no-getter\",\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]\n// Message: Missing JSDoc comment.",
      "class Foo {\n  get aName () {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":\"no-setter\",\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]\n// Message: Missing JSDoc comment.",
      "const obj = {\n  get aName () {},\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":\"no-setter\",\"contexts\":[\"Property > FunctionExpression\"]}]\n// Message: Missing JSDoc comment.",
      "function comment () {\n  return \"comment\";\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"enableFixer\":true,\"fixerMessage\":\" TODO: add comment\"}]\n// Message: Missing JSDoc comment.",
      "function comment () {\n  return \"comment\";\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"any\",{\"context\":\"FunctionDeclaration\",\"inlineCommentBlock\":true}],\"fixerMessage\":\"TODO: add comment \"}]\n// Message: Missing JSDoc comment.",
      "function comment () {\n  return \"comment\";\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"enableFixer\":false,\"fixerMessage\":\" TODO: add comment\"}]\n// Message: Missing JSDoc comment.",
      "export class InovaAutoCompleteComponent {\n  public disabled = false;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"PropertyDefinition\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "export default (arg) => arg;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export function outer() {\n    function inner() {\n        console.log('foo');\n    }\n\n    inner();\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "export const outer = () => {\n    const inner = () => {\n        console.log('foo');\n    };\n\n    inner();\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nexport class InovaAutoCompleteComponent {\n  public disabled = false;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"PropertyDefinition\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "/**\n* Some comment.\n*/\nexport class Component {\n    public foo?: number;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkConstructors\":false,\"contexts\":[\"PropertyDefinition\"],\"publicOnly\":true}]\n// Message: Missing JSDoc comment.",
      "class Utility {\n    /**\n     *\n     */\n    mthd() {\n        return false;\n    }\n}\n\nmodule.exports = Utility;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"enableFixer\":false,\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "/**\n *\n */\nmodule.exports = class Utility {\n  mthd() {\n    return false;\n  }\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"enableFixer\":false,\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":true,\"MethodDefinition\":true}}]\n// Message: Missing JSDoc comment.",
      "function quux () {\n  return 3;\n}\n\nfunction b () {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"minLineCount\":2}]\n// Message: Missing JSDoc comment.",
      "function quux () {\n  return 3;\n}\n\nvar a = {};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"FunctionDeclaration\",\"minLineCount\":2},{\"context\":\"VariableDeclaration\",\"minLineCount\":2}],\"require\":{\"FunctionDeclaration\":false}}]\n// Message: Missing JSDoc comment.",
      "function quux () {\n  return 3;\n}\n\nvar a = {\n  b: 1,\n  c: 2\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"FunctionDeclaration\",\"minLineCount\":4},{\"context\":\"VariableDeclaration\",\"minLineCount\":2}],\"require\":{\"FunctionDeclaration\":false}}]\n// Message: Missing JSDoc comment.",
      "class A {\n  setId(newId: number): void {\n    this.id = id;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"MethodDefinition\",\"minLineCount\":3}],\"require\":{\"ClassDeclaration\":false,\"FunctionExpression\":false,\"MethodDefinition\":false}}]\n// Message: Missing JSDoc comment."
    ],
    "valid": [
      "interface FooBar {\n  fooBar: string;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]",
      "/** This is comment */\ninterface FooBar {\n  fooBar: string;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]",
      "/** This is comment */\nexport class Foo {\n  someMethod() {\n    interface FooBar {\n      fooBar: string;\n    }\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]",
      "/** This is comment */\nfunction someFunction() {\n  interface FooBar {\n    fooBar: string;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]",
      "/** This is comment */\nexport function foo() {\n  interface bar {\n    fooBar: string;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\",\"TSMethodSignature\",\"TSPropertySignature\"],\"publicOnly\":{\"ancestorsOnly\":true}}]",
      "/**\n *\n */",
      "var array = [1,2,3];\narray.forEach(function() {});\n\n/**\n * @class MyClass\n **/\nfunction MyClass() {}\n\n/**\n Function doing something\n */\nfunction myFunction() {}\n/**\n Function doing something\n */\nvar myFunction = function() {};\n/**\n Function doing something\n */\nObject.myFunction = function () {};\nvar obj = {\n   /**\n    *  Function doing something\n    **/\n    myFunction: function () {} };\n\n/**\n @func myFunction\n */\nfunction myFunction() {}\n/**\n @method myFunction\n */\nfunction myFunction() {}\n/**\n @function myFunction\n */\nfunction myFunction() {}\n\n/**\n @func myFunction\n */\nvar myFunction = function () {}\n/**\n @method myFunction\n */\nvar myFunction = function () {}\n/**\n @function myFunction\n */\nvar myFunction = function () {}\n\n/**\n @func myFunction\n */\nObject.myFunction = function() {}\n/**\n @method myFunction\n */\nObject.myFunction = function() {}\n/**\n @function myFunction\n */\nObject.myFunction = function() {}\n(function(){})();\n\nvar object = {\n  /**\n   *  @func myFunction - Some function\n   */\n  myFunction: function() {} }\nvar object = {\n  /**\n   *  @method myFunction - Some function\n   */\n  myFunction: function() {} }\nvar object = {\n  /**\n   *  @function myFunction - Some function\n   */\n  myFunction: function() {} }\n\nvar array = [1,2,3];\narray.filter(function() {});\nObject.keys(this.options.rules || {}).forEach(function(name) {}.bind(this));\nvar object = { name: 'key'};\nObject.keys(object).forEach(function() {})",
      "/**\n * @func myFunction\n */\n\nfunction myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"maxLines\":2,\"minLines\":0}}",
      "/**\n * @func myFunction\n */\n\n\nfunction myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"maxLines\":3,\"minLines\":0}}",
      "/** @func myFunction */  function myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"maxLines\":0,\"minLines\":0}}",
      "/**\n * @func myFunction\n */\n\nfunction myFunction() {\n\n}\n// Settings: {\"jsdoc\":{\"maxLines\":3,\"minLines\":2}}",
      "function myFunction() {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"FunctionDeclaration\":false,\"MethodDefinition\":true}}]",
      "var myFunction = function() {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"FunctionDeclaration\":false,\"MethodDefinition\":true}}]",
      "/**\n * Description for A.\n */\nclass A {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]",
      "/**\n * Description for A.\n */\nclass App extends Component {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]",
      "/**\n * Description for A.\n */\nexport default class App extends Component {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]",
      "/**\n * Description for A.\n */\nexport class App extends Component {\n    /**\n     * Description for constructor.\n     * @param {object[]} xs - xs\n     */\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true,\"MethodDefinition\":true}}]",
      "class A {\n    constructor(xs) {\n        this.a = xs;\n    }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":false,\"MethodDefinition\":false}}]",
      "/**\n* Function doing something\n*/\nvar myFunction = () => {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true}}]",
      "/**\n* Function doing something\n*/\nvar myFunction = function () {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true}}]",
      "/**\n* Function doing something\n*/\nvar myFunction = () => {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":false}}]",
      "/**\n Function doing something\n*/\nvar myFunction = () => () => {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true}}]",
      "setTimeout(() => {}, 10);\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":true}}]",
      "/**\nJSDoc Block\n*/\nvar foo = function() {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]",
      "const foo = {/**\nJSDoc Block\n*/\nbar() {}}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]",
      "var foo = {/**\nJSDoc Block\n*/\nbar: function() {}}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]",
      "var foo = { [function() {}]: 1 };\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"FunctionExpression\":true}}]",
      "function foo () {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":true}]",
      "function foo () {\n  return;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":true}]",
      "const test = {};\n/**\n * test\n */\n test.method = function () {\n\n}\nmodule.exports = {\n  prop: { prop2: test.method }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nfunction test() {\n\n}\n\nmodule.exports = {\n  prop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\ntest = function() {\n\n}\n\nmodule.exports = {\n  prop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":true,\"esm\":false,\"window\":false},\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\ntest = function() {\n\n}\n\nexports.someMethod = {\n  prop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nconst test = () => {\n\n}\n\nmodule.exports = {\nprop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true}}]",
      "const test = () => {\n\n}\nmodule.exports = {\n  prop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"ArrowFunctionExpression\":true}}]",
      "/**\n *\n */\nwindow.test = function() {\n\n}\n\nmodule.exports = {\nprop: window\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "test = function() {\n\n}\n\n/**\n *\n */\ntest = function() {\n\n}\n\nmodule.exports = {\nprop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "test = function() {\n\n}\n\ntest = 2;\n\nmodule.exports = {\nprop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nfunction test() {\n\n}\n\n/**\n *\n */\ntest.prototype.method = function() {\n\n}\n\nmodule.exports = {\nprop: { prop2: test }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "class Test {\n  /**\n   * Test\n   */\n  method() {\n\n  }\n}\nmodule.exports = Test;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"MethodDefinition\":true}}]",
      "/**\n *\n */\nexport default function quux () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nexport default function quux () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nfunction quux () {\n\n}\nexport default quux;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "function quux () {\n\n}\nexport default quux;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nexport function test() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nexport function test() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nvar test = function () {\n\n}\nvar test2 = 2;\nexport { test, test2 }\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nvar test = function () {\n\n}\nexport { test as test2 }\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n *\n */\nexport default class A {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"ancestorsOnly\":true},\"require\":{\"ClassDeclaration\":true}}]",
      "/**\n *\n */\nvar test = function () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"window\":true},\"require\":{\"FunctionExpression\":true}}]",
      "let test = function () {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"window\":true},\"require\":{\"FunctionExpression\":true}}]",
      "let test = class {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ClassExpression\":false}}]",
      "/**\n *\n */\nlet test = class {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"ClassExpression\":true}}]",
      "export function someMethod() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":true,\"esm\":false,\"window\":false},\"require\":{\"FunctionDeclaration\":true}}]",
      "export function someMethod() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":true,\"esm\":false,\"window\":false},\"require\":{\"FunctionDeclaration\":true}}]",
      "exports.someMethod = function() {\n\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":{\"cjs\":false,\"esm\":true,\"window\":false},\"require\":{\"FunctionExpression\":true}}]",
      "const myObject = {\n  myProp: true\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[]}]",
      "function bear() {}\n/**\n *\n */\nfunction quux () {\n}\nexport default quux;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true,\"require\":{\"FunctionExpression\":true}}]",
      "/**\n * This example interface is great!\n */\nexport interface Example {\n  /**\n   * My super test string!\n   */\n  test: string\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\"]}]",
      "/**\n * This example interface is great!\n */\ninterface Example {\n  /**\n   * My super test string!\n   */\n  test: string\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSInterfaceDeclaration\"]}]",
      "/**\n * This example type is great!\n */\nexport type Example = {\n  /**\n   * My super test string!\n   */\n  test: string\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSTypeAliasDeclaration\"]}]",
      "/**\n * This example type is great!\n */\ntype Example = {\n  /**\n   * My super test string!\n   */\n  test: string\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSTypeAliasDeclaration\"]}]",
      "/**\n * This example enum is great!\n */\nexport enum Example {\n  /**\n   * My super test enum!\n   */\n  test = 123\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSEnumDeclaration\"]}]",
      "/**\n * This example enum is great!\n */\nenum Example {\n  /**\n   * My super test enum!\n   */\n  test = 123\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSEnumDeclaration\"]}]",
      "const foo = {...{}};\nfunction bar() {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":false,\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":true,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":false,\"MethodDefinition\":true}}]",
      "/**\n * Class documentation\n */\n @logged\nexport default class Foo {\n // ....\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyFunctions\":false,\"require\":{\"ClassDeclaration\":true}}]",
      "const a = {};\nconst b = {\n  ...a\n};\n\nexport default b;\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"ObjectExpression\"],\"exemptEmptyFunctions\":false,\"publicOnly\":true}]",
      "/**\n * Foo interface documentation.\n */\nexport interface Foo extends Bar {\n  /**\n   * baz method documentation.\n   */\n  baz(): void;\n\n  /**\n   * meow method documentation.\n   */\n  meow(): void;\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSMethodSignature\"]}]",
      "export default class Test {\n  private abc(a) {\n    this.a = a;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"MethodDefinition:not([accessibility=\\\"private\\\"]) > FunctionExpression\"],\"publicOnly\":true,\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":false,\"ClassExpression\":false,\"FunctionDeclaration\":false,\"FunctionExpression\":false,\"MethodDefinition\":false}}]",
      "/**\n * Basic application controller.\n */\n@Controller()\nexport class AppController {\n  /**\n   * Returns the application information.\n   *\n   * @returns ...\n   */\n  @Get('/info')\n  public getInfo(): string {\n    return 'OK';\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":false,\"MethodDefinition\":true}}]",
      "/**\n * Entity to represent a user in the system.\n */\n@Entity('users')\nexport class User {\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":false,\"MethodDefinition\":true}}]",
      "/**\n * Entity to represent a user in the system.\n */\n@Entity('users', getVal())\nexport class User {\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":true,\"ClassExpression\":true,\"FunctionDeclaration\":true,\"FunctionExpression\":false,\"MethodDefinition\":true}}]",
      "/**\n *\n */\nclass Foo {\n    constructor() {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"exemptEmptyConstructors\":true,\"require\":{\"MethodDefinition\":true}}]",
      "/**\n *\n */\nclass Foo {\n    constructor() {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkConstructors\":false,\"require\":{\"MethodDefinition\":true}}]",
      "class Foo {\n  get aName () {}\n  set aName (val) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":\"no-setter\",\"checkSetters\":false,\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]",
      "const obj = {\n  get aName () {},\n  set aName (val) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":\"no-setter\",\"checkSetters\":false,\"contexts\":[\"Property > FunctionExpression\"]}]",
      "class Foo {\n  set aName (val) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkSetters\":false,\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]",
      "class Foo {\n  get aName () {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":false,\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]",
      "class Foo {\n  /**\n   *\n   */\n  set aName (val) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkSetters\":\"no-getter\",\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]",
      "class Foo {\n  /**\n   *\n   */\n  get aName () {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":\"no-setter\",\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]",
      "class Foo {\n  get aName () {}\n  set aName (val) {}\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"checkGetters\":false,\"checkSetters\":\"no-getter\",\"contexts\":[\"MethodDefinition > FunctionExpression\"]}]",
      "class Base {\n  constructor() {\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"MethodDefinition\"],\"exemptEmptyConstructors\":true}]",
      "/**\n * This is a text.\n */\nexport function a(); // Reports an error\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"TSDeclareFunction\"],\"require\":{\"FunctionDeclaration\":true}}]",
      "/**\n * Foo\n */\nexport function foo(): void {\n  function bar(): void {\n    console.log('bar');\n  }\n\n  console.log('foo');\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"publicOnly\":true}]",
      "const foo = {\n  bar: () => {\n    // ...\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\":not(Property) > ArrowFunctionExpression\"],\"require\":{\"ArrowFunctionExpression\":false,\"ClassDeclaration\":true,\"ClassExpression\":true}}]",
      "/** Defines the current user's settings. */\n@Injectable({\n  providedIn: 'root',\n})\n@State<Partial<UserSettingsStateModel>>\n({\n  name: 'userSettings',\n  defaults: {\n    isDev: !environment.production,\n  },\n})\nexport class UserSettingsState { }\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"require\":{\"ClassDeclaration\":true}}]",
      "/**\n * Entity to represent a user in the system.\n */\n@Entity('users')\nexport class User {\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[\"Decorator\"],\"require\":{\"FunctionDeclaration\":false}}]",
      "  function quux () {\n  return 3;\n}\n\nfunction b () {}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"minLineCount\":4}]",
      "function quux () {\n  return 3;\n}\n\nvar a = {\n  b: 1,\n  c: 2\n};\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"FunctionDeclaration\",\"minLineCount\":4},{\"context\":\"VariableDeclaration\",\"minLineCount\":5}],\"require\":{\"FunctionDeclaration\":false}}]",
      "class A {\n  setId(newId: number): void {\n    this.id = id;\n  }\n}\n// \"jsdoc/require-jsdoc\": [\"error\"|\"warn\", {\"contexts\":[{\"context\":\"MethodDefinition\",\"minLineCount\":4}],\"require\":{\"ClassDeclaration\":false,\"FunctionExpression\":false,\"MethodDefinition\":false}}]"
    ]
  },
  "requireParam": {
    "invalid": [
      "/**\n *\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"FunctionDeclaration\"]}]\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n *\n */\nfunction quux ({foo}) {\n\n}\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n * @param foo\n */\nfunction quux (foo, bar, {baz}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkDestructured\":false}]\n// Message: Missing JSDoc @param \"bar\" declaration.",
      "/**\n * @param foo\n */\nfunction quux (foo, bar, {baz}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkDestructuredRoots\":false}]\n// Message: Missing JSDoc @param \"bar\" declaration.",
      "/**\n *\n */\nfunction quux ({foo}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"enableFixer\":false}]\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n *\n */\nfunction quux ({foo: bar = 5} = {}) {\n\n}\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n * @param\n */\nfunction quux ({foo}) {\n\n}\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n * @param\n */\nfunction quux ({foo}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"autoIncrementBase\":1}]\n// Message: Missing JSDoc @param \"root1\" declaration.",
      "/**\n * @param options\n */\nfunction quux ({foo}) {\n\n}\n// Message: Missing JSDoc @param \"options.foo\" declaration.",
      "/**\n * @param\n */\nfunction quux ({ foo, bar: { baz }}) {\n\n}\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n *\n */\nfunction quux ({foo}, {bar}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"unnamedRootBase\":[\"arg\"]}]\n// Message: Missing JSDoc @param \"arg0\" declaration.",
      "/**\n *\n */\nfunction quux ({foo}, {bar}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"unnamedRootBase\":[\"arg\",\"config\"]}]\n// Message: Missing JSDoc @param \"arg\" declaration.",
      "/**\n *\n */\nfunction quux ({foo}, {bar}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"enableRootFixer\":false,\"unnamedRootBase\":[\"arg\",\"config\"]}]\n// Message: Missing JSDoc @param \"arg\" declaration.",
      "/**\n *\n */\nfunction quux (foo, bar) {\n\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @param foo\n */\nfunction quux (foo, bar) {\n\n}\n// Message: Missing JSDoc @param \"bar\" declaration.",
      "/**\n * @param bar\n */\nfunction quux (foo, bar, baz) {\n\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo, bar, baz) {\n\n}\n// Message: Missing JSDoc @param \"baz\" declaration.",
      "/**\n * @param baz\n */\nfunction quux (foo, bar, baz) {\n\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @param\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}\n// Message: Missing JSDoc @arg \"foo\" declaration.",
      "/**\n * @param foo\n */\nfunction quux (foo, bar) {\n\n}\n// Message: Missing JSDoc @param \"bar\" declaration.",
      "/**\n * @override\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"overrideReplacesDocs\":false}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @ignore\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignoreReplacesDocs\":false}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @implements\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @augments\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @extends\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @override\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"overrideReplacesDocs\":false}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @ignore\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"ignoreReplacesDocs\":false}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @implements\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":false}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @augments\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @extends\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "export class SomeClass {\n  /**\n   * @param property\n   */\n  constructor(private property: string, private foo: number) {}\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @param\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":false}}}\n// Message: Unexpected tag `@param`",
      "/**\n *\n */\nfunction quux ({bar, baz}, foo) {\n}\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n *\n */\nfunction quux (foo, {bar, baz}) {\n}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n *\n */\nfunction quux ([bar, baz], foo) {\n}\n// Message: Missing JSDoc @param \"root0\" declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"exemptedBy\":[\"notPresent\"]}]\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @inheritdoc\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"exemptedBy\":[]}]\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * @inheritdoc\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "/**\n * Assign the project to a list of employees.\n * @param {object[]} employees - The employees who are responsible for the project.\n * @param {string} employees[].name - The name of an employee.\n * @param {string} employees[].department - The employee's department.\n */\nfunction assign (employees, name) {\n\n};\n// Message: Missing JSDoc @param \"name\" declaration.",
      "interface ITest {\n/**\n * Test description.\n */\nTestMethod(id: number): void;\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSMethodSignature\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A test class.\n */\nabstract class TestClass\n{\n/**\n * A test method.\n */\nabstract TestFunction(id);\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSEmptyBodyFunctionExpression\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A test class.\n */\ndeclare class TestClass\n{\n/**\n *\n */\nTestMethod(id);\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSEmptyBodyFunctionExpression\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A test function.\n */\ndeclare let TestFunction: (id) => void;\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A test function.\n */\nlet TestFunction: (id) => void;\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A test function.\n */\nfunction test(\n  processor: (id: number) => string\n) {\n  return processor(10);\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A test function.\n */\nlet test = (processor: (id: number) => string) =>\n{\n  return processor(10);\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "class TestClass {\n  /**\n  * A class property.\n  */\n  public Test: (id: number) => string;\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "class TestClass {\n  /**\n   * A class method.\n   */\n  public TestMethod(): (id: number) => string\n  {\n  }\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "interface TestInterface {\n/**\n * An interface property.\n */\npublic Test: (id: number) => string;\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "interface TestInterface {\n  /**\n   * An interface method.\n   */\n  public TestMethod(): (id: number) => string;\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A function with return type\n */\nfunction test(): (id: number) => string;\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * A function with return type\n */\nlet test = (): (id: number) => string =>\n{\n  return (id) => `${id}`;\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]\n// Message: Missing JSDoc @param \"id\" declaration.",
      "/**\n * @param baz\n * @param options\n */\nfunction quux (baz, {foo: bar}) {\n\n}\n// Message: Missing JSDoc @param \"options.foo\" declaration.",
      "class Client {\n  /**\n   * Set collection data.\n   * @param  {Object}   data                    The collection data object.\n   * @param  {number}   data.last_modified\n   * @param  {Object}   options            The options object.\n   * @param  {Object}   [options.headers]       The headers object option.\n   * @param  {Number}   [options.retry=0]       Number of retries to make\n   *     when faced with transient errors.\n   * @param  {Boolean}  [options.safe]          The safe option.\n   * @param  {Boolean}  [options.patch]         The patch option.\n   * @param  {Number}   [options.last_modified] The last_modified option.\n   * @return {Promise<Object, Error>}\n   */\n  async setData(\n    data: { last_modified?: number },\n    options: {\n      headers?: Record<string, string>;\n      safe?: boolean;\n      retry?: number;\n      patch?: boolean;\n      last_modified?: number;\n      permissions?: [];\n    } = {}\n  ) {}\n}\n// Message: Missing JSDoc @param \"options.permissions\" declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"enableFixer\":false}]\n// Message: Missing JSDoc @param \"foo\" declaration.",
      "class Client {\n  /**\n   * Set collection data.\n   * @return {Promise<Object, Error>}\n   */\n  async setData(\n    data: { last_modified?: number }\n  ) {}\n}\n// Message: Missing JSDoc @param \"data\" declaration.",
      "/**\n * @param cfg\n * @param cfg.num\n */\nfunction quux ({num, ...extra}) {\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkRestProperty\":true}]\n// Message: Missing JSDoc @param \"cfg.extra\" declaration.",
      "/**\n * @param cfg\n * @param cfg.opts\n * @param cfg.opts.num\n */\nfunction quux ({opts: {num, ...extra}}) {\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkRestProperty\":true}]\n// Message: Missing JSDoc @param \"cfg.opts.extra\" declaration.",
      "/**\n * @param {GenericArray} cfg\n * @param {number} cfg.\"0\"\n */\nfunction baar ([a, ...extra]) {\n  //\n}\n// Message: Missing JSDoc @param \"cfg.\"1\"\" declaration.",
      "/**\n * @param a\n */\nfunction baar (a, ...extra) {\n  //\n}\n// Message: Missing JSDoc @param \"extra\" declaration.",
      "/**\n * Converts an SVGRect into an object.\n * @param {SVGRect} bbox - a SVGRect\n */\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"SVGRect\"}]\n// Message: Missing JSDoc @param \"bbox.x\" declaration.",
      "/**\n * Converts an SVGRect into an object.\n * @param {object} bbox - a SVGRect\n */\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};\n// Message: Missing JSDoc @param \"bbox.x\" declaration.",
      "module.exports = class GraphQL {\n  /**\n   * @param fetchOptions\n   * @param cacheKey\n   */\n  fetch = ({ url, ...options }, cacheKey) => {\n  }\n};\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkRestProperty\":true}]\n// Message: Missing JSDoc @param \"fetchOptions.url\" declaration.",
      "(function() {\n\t/**\n\t * A function.\n\t */\n\tfunction f(param) {\n\t\treturn !param;\n\t}\n})();\n// Message: Missing JSDoc @param \"param\" declaration.",
      "/**\n * Description.\n * @param {Object} options\n * @param {Object} options.foo\n */\nfunction quux ({ foo: { bar } }) {}\n// Message: Missing JSDoc @param \"options.foo.bar\" declaration.",
      "/**\n * Description.\n * @param {FooBar} options\n * @param {FooBar} options.foo\n */\nfunction quux ({ foo: { bar } }) {}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"FooBar\"}]\n// Message: Missing JSDoc @param \"options.foo.bar\" declaration.",
      "/**\n * Description.\n * @param {Object} options\n * @param {FooBar} foo\n */\nfunction quux ({ foo: { bar } }) {}\n// Message: Missing JSDoc @param \"options.foo\" declaration.",
      "/**\n * Description.\n * @param {Object} options\n * @param options.foo\n */\nfunction quux ({ foo: { bar } }) {}\n// Message: Missing JSDoc @param \"options.foo.bar\" declaration.",
      "/**\n * Description.\n * @param {object} options Options.\n * @param {object} options.foo A description.\n * @param {object} options.foo.bar\n */\nfunction foo({ foo: { bar: { baz } }}) {}\n// Message: Missing JSDoc @param \"options.foo.bar.baz\" declaration.",
      "/**\n* Returns a number.\n* @param {Object} props Props.\n* @param {Object} props.prop Prop.\n* @return {number} A number.\n*/\nexport function testFn1 ({ prop = { a: 1, b: 2 } }) {\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"useDefaultObjectProperties\":true}]\n// Message: Missing JSDoc @param \"props.prop.a\" declaration.",
      "/** Foo. */\nfunction foo(a, b, c) {}\n// Message: Missing JSDoc @param \"a\" declaration.",
      "/**\n * @param foo Some number.\n * @param bar Some number.\n */\nexport function myPublicFunction(foo: number, bar: number, baz: number) {}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag[tag=\\\"param\\\"])\",\"context\":\"FunctionDeclaration\"}]}]\n// Message: Missing JSDoc @param \"baz\" declaration."
    ],
    "valid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param root0\n * @param root0.foo\n */\nfunction quux ({foo}) {\n\n}",
      "/**\n * @param root0\n * @param root0.foo\n * @param root1\n * @param root1.bar\n */\nfunction quux ({foo}, {bar}) {\n\n}",
      "/**\n * @param arg0\n * @param arg0.foo\n * @param arg1\n * @param arg1.bar\n */\nfunction quux ({foo}, {bar}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"unnamedRootBase\":[\"arg\"]}]",
      "/**\n * @param arg\n * @param arg.foo\n * @param config0\n * @param config0.bar\n * @param config1\n * @param config1.baz\n */\nfunction quux ({foo}, {bar}, {baz}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"unnamedRootBase\":[\"arg\",\"config\"]}]",
      "/**\n * @inheritdoc\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @inheritDoc\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @arg foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}",
      "/**\n * @override\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @override\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @override\n */\nclass A {\n  /**\n    *\n    */\n  quux (foo) {\n\n  }\n}",
      "/**\n * @override\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"overrideReplacesDocs\":true}}",
      "/**\n * @ignore\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignoreReplacesDocs\":true}}",
      "/**\n * @implements\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}",
      "/**\n * @implements\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @implements\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":true}}",
      "/**\n * @implements\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @augments\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @augments\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @extends\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @extends\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @augments\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @extends\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @override\n */\nclass A {\n  /**\n  * @param foo\n  */\n  quux (foo) {\n\n  }\n}",
      "/**\n * @override\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"overrideReplacesDocs\":true}}",
      "/**\n * @ignore\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"ignoreReplacesDocs\":true}}",
      "/**\n * @implements\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"implementsReplacesDocs\":true}}",
      "/**\n * @implements\n */\nclass A {\n  /**\n   * @param foo\n   */\n  quux (foo) {\n\n  }\n}",
      "/**\n * @augments\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @augments\n */\nclass A {\n  /**\n   * @param foo\n   */\n  quux (foo) {\n\n  }\n}",
      "/**\n * @extends\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @extends\n */\nclass A {\n  /**\n   * @param foo\n   */\n  quux (foo) {\n\n  }\n}",
      "/**\n * @augments\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @extends\n */\nclass A {\n  /**\n   *\n   */\n  quux (foo) {\n\n  }\n}\n// Settings: {\"jsdoc\":{\"augmentsExtendsReplacesDocs\":true}}",
      "/**\n * @internal\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignoreInternal\":true}}",
      "/**\n * @private\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}",
      "/**\n * @access private\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"ignorePrivate\":true}}",
      "// issue 182: optional chaining\n/** @const {boolean} test */\nconst test = something?.find(_ => _)",
      "/** @type {RequestHandler} */\nfunction foo(req, res, next) {}",
      "/**\n * @type {MyCallback}\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"exemptedBy\":[\"type\"]}]",
      "/**\n * @override\n */\nvar A = class {\n  /**\n    *\n    */\n  quux (foo) {\n\n  }\n}",
      "export class SomeClass {\n  /**\n   * @param property\n   */\n  constructor(private property: string) {}\n}",
      "/**\n * Assign the project to an employee.\n *\n * @param {object} employee - The employee who is responsible for the project.\n * @param {string} employee.name - The name of the employee.\n * @param {string} employee.department - The employee's department.\n */\nfunction assign({name, department}) {\n  // ...\n}",
      "export abstract class StephanPlugin<O, D> {\n\n    /**\n     * Called right after Stephan loads the plugin file.\n     *\n     * @example\n     *```typescript\n     * type Options = {\n     *      verbose?: boolean;\n     *      token?: string;\n     * }\n     * ```\n     *\n     * Note that your Options type should only have optional properties...\n     *\n     * @param args Arguments compiled and provided by StephanClient.\n     * @param args.options The options as provided by the user, or an empty object if not provided.\n     * @param args.client The options as provided by the user, or an empty object if not provided.\n     * @param defaultOptions The default options as provided by the plugin, or an empty object.\n     */\n    public constructor({options, client}: {\n        options: O;\n        client: unknown;\n    }, defaultOptions: D) {\n\n    }\n}",
      "/**\n *\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"ArrowFunctionExpression\"]}]",
      "/**\n* A function with return type\n*\n* @param id\n*/\nlet test = (): (id: number) => string =>\n{\n  return (id) => `${id}`;\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"contexts\":[\"TSFunctionType\"]}]",
      "/** @abstract */\nclass base {\n/** @param {boolean} arg0 */\nconstructor(arg0) {}\n}\n\nclass foo extends base {\n/** @inheritDoc */\nconstructor(arg0) {\nsuper(arg0);\nthis.arg0 = arg0;\n}\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "    export abstract class StephanPlugin<O, D> {\n\n    /**\n     * Called right after Stephan loads the plugin file.\n     *\n     * @example\n     *```typescript\n     * type Options = {\n     *      verbose?: boolean;\n     *      token?: string;\n     * }\n     * ```\n     *\n     * Note that your Options type should only have optional properties...\n     *\n     * @param args Arguments compiled and provided by StephanClient.\n     * @param args.options The options as provided by the user, or an empty object if not provided.\n     * @param args.client The options as provided by the user, or an empty object if not provided.\n     * @param args.client.name The name of the client.\n     * @param defaultOptions The default options as provided by the plugin, or an empty object.\n     */\n    public constructor({ options, client: { name } }: {\n        options: O;\n        client: { name: string };\n    }, defaultOptions: D) {\n\n    }\n}",
      "/**\n* @param {string} cb\n*/\nfunction createGetter (cb) {\n  return function (...args) {\n    cb();\n  };\n}",
      "/**\n * @param cfg\n * @param cfg.num\n */\nfunction quux ({num, ...extra}) {\n}",
      "/**\n  * @param {GenericArray} cfg\n  * @param {number} cfg.\"0\"\n */\nfunction baar ([a, ...extra]) {\n  //\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"enableRestElementFixer\":false}]",
      "/**\n  * @param a\n */\nfunction baar (a, ...extra) {\n  //\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"enableRestElementFixer\":false}]",
      "/**\n* Converts an SVGRect into an object.\n* @param {SVGRect} bbox - a SVGRect\n*/\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};",
      "/**\n* Converts an SVGRect into an object.\n* @param {object} bbox - a SVGRect\n*/\nconst bboxToObj = function ({x, y, width, height}) {\n  return {x, y, width, height};\n};\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"SVGRect\"}]",
      "class CSS {\n  /**\n   * Set one or more CSS properties for the set of matched elements.\n   *\n   * @param {Object} propertyObject - An object of property-value pairs to set.\n   */\n  setCssObject(propertyObject: {[key: string]: string | number}): void {\n  }\n}",
      "/**\n * @param foo\n * @param bar\n * @param cfg\n */\nfunction quux (foo, bar, {baz}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkDestructured\":false}]",
      "/**\n * @param foo\n * @param bar\n */\nfunction quux (foo, bar, {baz}) {\n\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkDestructuredRoots\":false}]",
      "/**\n * @param root\n * @param root.foo\n */\nfunction quux ({\"foo\": bar}) {\n\n}",
      "/**\n * @param root\n * @param root.\"foo\"\n */\nfunction quux ({foo: bar}) {\n\n}",
      "/**\n * Description.\n * @param {string} b Description `/**`.\n */\nmodule.exports = function a(b) {\n  console.info(b);\n};",
      "/**\n * Description.\n * @param {Object} options Options.\n * @param {FooBar} options.foo foo description.\n */\nfunction quux ({ foo: { bar } }) {}",
      "/**\n * Description.\n * @param {FooBar} options\n * @param {Object} options.foo\n */\nfunction quux ({ foo: { bar } }) {}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"checkTypesPattern\":\"FooBar\"}]",
      "/**\n * @param obj\n * @param obj.data\n * @param obj.data.\"0\"\n * @param obj.data.\"1\"\n * @param obj.data.\"2\"\n * @param obj.defaulting\n * @param obj.defaulting.\"0\"\n * @param obj.defaulting.\"1\"\n */\nfunction Item({\n  data: [foo, bar, ...baz],\n  defaulting: [quux, xyz] = []\n}) {\n}",
      "/**\n* Returns a number.\n* @param {Object} props Props.\n* @param {Object} props.prop Prop.\n* @return {number} A number.\n*/\nexport function testFn1 ({ prop = { a: 1, b: 2 } }) {\n}\n// \"jsdoc/require-param\": [\"error\"|\"warn\", {\"useDefaultObjectProperties\":false}]",
      "/**\n * @param this The this object\n * @param bar number to return\n * @returns number returned back to caller\n */\nfunction foo(this: T, bar: number): number {\n  console.log(this.name);\n  return bar;\n}",
      "/**\n * @param bar number to return\n * @returns number returned back to caller\n */\nfunction foo(this: T, bar: number): number {\n  console.log(this.name);\n  return bar;\n}"
    ]
  },
  "requireParamDescription": {
    "invalid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @param \"foo\" description.",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @param \"foo\" description.",
      "/**\n * @function\n * @param foo\n */\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @param \"foo\" description.",
      "/**\n * @callback\n * @param foo\n */\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @param \"foo\" description.",
      "/**\n * @arg foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}\n// Message: Missing JSDoc @arg \"foo\" description.",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":false}}}\n// Message: Unexpected tag `@param`",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag:not([name=props]))\",\"context\":\"FunctionDeclaration\"}]}]\n// Message: Missing JSDoc @param \"foo\" description.",
      "/**\n * @param {number} foo Foo description\n * @param {object} root\n * @param {boolean} baz Baz description\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"setDefaultDestructuredRootDescription\":true}]\n// Message: Missing root description for @param.",
      "/**\n * @param {number} foo Foo description\n * @param {object} root\n * @param {boolean} baz Baz description\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"defaultDestructuredRootDescription\":\"Root description\",\"setDefaultDestructuredRootDescription\":true}]\n// Message: Missing root description for @param.",
      "/**\n * @param {number} foo Foo description\n * @param {object} root\n * @param {boolean} baz Baz description\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"setDefaultDestructuredRootDescription\":false}]\n// Message: Missing JSDoc @param \"root\" description."
    ],
    "valid": [
      "/**\n *\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo Foo.\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo Foo.\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n * @param foo\n */",
      "/**\n * @callback\n * @param foo\n */",
      "/**\n * @param props\n */\nfunction quux (props) {\n\n}\n// \"jsdoc/require-param-description\": [\"error\"|\"warn\", {\"contexts\":[{\"comment\":\"JsdocBlock:has(JsdocTag:not([name=props]))\",\"context\":\"FunctionDeclaration\"}]}]",
      "/**\n * @param {number} foo Foo description\n * @param {object} root\n * @param {boolean} baz Baz description\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"exemptDestructuredRootsFromChecks\":true}}",
      "/**\n * @param {number} foo Foo description\n * @param {object} root\n * @param {object} root.bar\n */\nfunction quux (foo, {bar: {baz}}) {\n\n}\n// Settings: {\"jsdoc\":{\"exemptDestructuredRootsFromChecks\":true}}"
    ]
  },
  "requireParamName": {
    "invalid": [
      "/**\n * @param\n */\nfunction quux (foo) {\n\n}\n// Message: There must be an identifier after @param type.",
      "/**\n * @param {string}\n */\nfunction quux (foo) {\n\n}\n// Message: There must be an identifier after @param tag.",
      "/**\n * @param {string}\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-name\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: There must be an identifier after @param tag.",
      "/**\n * @function\n * @param {string}\n */\n// \"jsdoc/require-param-name\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: There must be an identifier after @param tag.",
      "/**\n * @callback\n * @param {string}\n */\n// \"jsdoc/require-param-name\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: There must be an identifier after @param tag.",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":false}}}\n// Message: Unexpected tag `@param`"
    ],
    "valid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-name\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @param {string} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @function\n * @param\n */",
      "/**\n * @callback\n * @param\n */",
      "/**\n * @param {Function} [processor=data => data] A function to run\n */\nfunction processData(processor) {\n  return processor(data)\n}",
      "/** Example with multi-line param type.\n*\n* @param {function(\n*   number\n* )} cb Callback.\n*/\nfunction example(cb) {\n  cb(42);\n}"
    ]
  },
  "requireParamType": {
    "invalid": [
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @param \"foo\" type.",
      "/**\n * @param {a xxx\n */\nfunction quux () {\n}\n// Message: Missing JSDoc @param \"\" type.",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @param \"foo\" type.",
      "/**\n * @function\n * @param foo\n */\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @param \"foo\" type.",
      "/**\n * @callback\n * @param foo\n */\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @param \"foo\" type.",
      "/**\n * @arg foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":\"arg\"}}}\n// Message: Missing JSDoc @arg \"foo\" type.",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"param\":false}}}\n// Message: Unexpected tag `@param`",
      "/**\n * @param {number} foo\n * @param root\n * @param {boolean} baz\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"setDefaultDestructuredRootType\":true}]\n// Message: Missing root type for @param.",
      "/**\n * @param {number} foo\n * @param root\n * @param {boolean} baz\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"defaultDestructuredRootType\":\"Object\",\"setDefaultDestructuredRootType\":true}]\n// Message: Missing root type for @param.",
      "/**\n * @param {number} foo\n * @param root\n * @param {boolean} baz\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"setDefaultDestructuredRootType\":false}]\n// Message: Missing JSDoc @param \"root\" type."
    ],
    "valid": [
      "/**\n *\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param {number} foo\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @param {number} foo\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-param-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n * @param foo\n */",
      "/**\n * @callback\n * @param foo\n */",
      "/**\n * @param {number} foo\n * @param root\n * @param {boolean} baz\n */\nfunction quux (foo, {bar}, baz) {\n\n}\n// Settings: {\"jsdoc\":{\"exemptDestructuredRootsFromChecks\":true}}",
      "/**\n * @param {number} foo\n * @param root\n * @param root.bar\n */\nfunction quux (foo, {bar: {baz}}) {\n\n}\n// Settings: {\"jsdoc\":{\"exemptDestructuredRootsFromChecks\":true}}"
    ]
  },
  "requireProperty": {
    "invalid": [
      "/**\n * @typedef {object} SomeTypedef\n */\n// Message: Missing JSDoc @property.",
      "class Test {\n    /**\n     * @typedef {object} SomeTypedef\n     */\n    quux () {}\n}\n// Message: Missing JSDoc @property.",
      "/**\n * @typedef {PlainObject} SomeTypedef\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":\"prop\"}}}\n// Message: Missing JSDoc @prop.",
      "/**\n * @namespace {Object} SomeName\n */\n// Message: Missing JSDoc @property."
    ],
    "valid": [
      "/**\n *\n */",
      "/**\n * @property\n */",
      "/**\n * @typedef {Object} SomeTypedef\n * @property {SomeType} propName Prop description\n */",
      "/**\n * @typedef {object} SomeTypedef\n * @prop {SomeType} propName Prop description\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":\"prop\"}}}",
      "/**\n * @typedef {object} SomeTypedef\n * @property\n * // arbitrary property content\n */",
      "/**\n * @typedef {object<string, string>} SomeTypedef\n */",
      "/**\n * @typedef {string} SomeTypedef\n */",
      "/**\n * @namespace {object} SomeName\n * @property {SomeType} propName Prop description\n */",
      "/**\n * @namespace {object} SomeName\n * @property\n * // arbitrary property content\n */",
      "/**\n * @typedef {object} SomeTypedef\n * @property someProp\n * @property anotherProp This with a description\n * @property {anotherType} yetAnotherProp This with a type and desc.\n */\nfunction quux () {\n\n}"
    ]
  },
  "requirePropertyDescription": {
    "invalid": [
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo\n */\n// Message: Missing JSDoc @property \"foo\" description.",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @prop foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":\"prop\"}}}\n// Message: Missing JSDoc @prop \"foo\" description.",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":false}}}\n// Message: Unexpected tag `@property`"
    ],
    "valid": [
      "/**\n * @typedef {SomeType} SomeTypedef\n */",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo Foo.\n */",
      "/**\n * @namespace {SomeType} SomeName\n * @property foo Foo.\n */",
      "/**\n * @class\n * @property foo Foo.\n */",
      "/**\n * Typedef with multi-line property type.\n *\n * @typedef {object} MyType\n * @property {function(\n *   number\n * )} numberEater Method which takes a number.\n */"
    ]
  },
  "requirePropertyName": {
    "invalid": [
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property\n */\n// Message: There must be an identifier after @property type.",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property {string}\n */\n// Message: There must be an identifier after @property tag.",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":false}}}\n// Message: Unexpected tag `@property`"
    ],
    "valid": [
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo\n */",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property {string} foo\n */",
      "/**\n * @namespace {SomeType} SomeName\n * @property {string} foo\n */",
      "/**\n * @class\n * @property {string} foo\n */"
    ]
  },
  "requirePropertyType": {
    "invalid": [
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo\n */\n// Message: Missing JSDoc @property \"foo\" type.",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @prop foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":\"prop\"}}}\n// Message: Missing JSDoc @prop \"foo\" type.",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property foo\n */\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"property\":false}}}\n// Message: Unexpected tag `@property`"
    ],
    "valid": [
      "/**\n * @typedef {SomeType} SomeTypedef\n */",
      "/**\n * @typedef {SomeType} SomeTypedef\n * @property {number} foo\n */",
      "/**\n * @namespace {SomeType} SomeName\n * @property {number} foo\n */",
      "/**\n * @class\n * @property {number} foo\n */"
    ]
  },
  "requireReturns": {
    "invalid": [
      "/**\n *\n */\nfunction quux (foo) {\n\n  return foo;\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nconst foo = () => ({\n  bar: 'baz'\n})\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nconst foo = bar=>({ bar })\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nconst foo = bar => bar.baz()\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return foo;\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":\"return\"}}}\n// Message: Missing JSDoc @return declaration.",
      "/**\n *\n */\nasync function quux() {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nconst quux = async function () {}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nconst quux = async () => {}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nasync function quux () {}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @function\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @callback\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "const language = {\n  /**\n   * @param {string} name\n   */\n  get name() {\n    return this._name;\n  }\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nasync function quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @function\n * @async\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @callback\n * @async\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @returns {undefined}\n * @returns {void}\n */\nfunction quux (foo) {\n\n  return foo;\n}\n// Message: Found more than one @returns declaration.",
      "/**\n * @returns\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":false}}}\n// Message: Unexpected tag `@returns`",
      "/**\n * @param foo\n */\nfunction quux (foo) {\n  return 'bar';\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"exemptedBy\":[\"notPresent\"]}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @param {array} a\n */\nasync function foo(a) {\n  return;\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @param {array} a\n */\nasync function foo(a) {\n  return Promise.all(a);\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "class foo {\n  /** gets bar */\n  get bar() {\n    return 0;\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkGetters\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "class TestClass {\n  /**\n   *\n   */\n  constructor() {\n    return new Map();\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkConstructors\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() {\n    return 0;\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkGetters\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "class quux {\n  /**\n   *\n   */\n  quux () {\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    resolve(foo);\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    setTimeout(() => {\n      resolve(true);\n    });\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    foo(resolve);\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    while(true) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    do {\n      resolve(true);\n    }\n    while(true)\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    if (true) {\n      resolve(true);\n    }\n    return;\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    if (true) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  var a = {};\n  return new Promise((resolve, reject) => {\n    with (a) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  var a = {};\n  return new Promise((resolve, reject) => {\n    try {\n      resolve(true);\n    } catch (err) {}\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  var a = {};\n  return new Promise((resolve, reject) => {\n    try {\n    } catch (err) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  var a = {};\n  return new Promise((resolve, reject) => {\n    try {\n    } catch (err) {\n    } finally {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  var a = {};\n  return new Promise((resolve, reject) => {\n    switch (a) {\n    case 'abc':\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    if (true) {\n      resolve();\n    } else {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    for (let i = 0; i < 5 ; i++) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    for (const i of obj) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    for (const i in obj) {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    if (true) {\n      return;\n    } else {\n      resolve(true);\n    }\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    function a () {\n      resolve(true);\n    }\n    a();\n  });\n}\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nfunction quux () {\n  return new Promise();\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nasync function quux () {\n  return new Promise();\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n *\n */\nasync function quux () {\n  return new Promise((resolve, reject) => {});\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "export class A {\n  /**\n   * Description.\n   */\n  public f(): string {\n    return \"\";\n  }\n}\n\nexport interface B {\n  /**\n   * Description.\n   */\n  f(): string;\n\n  /**\n   * Description.\n   */\n  g: () => string;\n\n  /**\n   * Description.\n   */\n  h(): void;\n\n  /**\n   * Description.\n   */\n  i: () => void;\n}\n\n/**\n * Description.\n */\nexport function f(): string {\n  return \"\";\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\":not(BlockStatement) > FunctionDeclaration\",\"MethodDefinition\",\"TSMethodSignature\",\"TSPropertySignature > TSTypeAnnotation > TSFunctionType\"]}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @param ms time in millis\n */\nexport const sleep = (ms: number) =>\n  new Promise<string>((res) => setTimeout(res, ms));\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * @param ms time in millis\n */\nexport const sleep = (ms: number) => {\n  return new Promise<string>((res) => setTimeout(res, ms));\n};\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * Reads a test fixture.\n */\nexport function readFixture(path: string): Promise<Buffer>;\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * Reads a test fixture.\n */\nexport function readFixture(path: string): void;\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration.",
      "/**\n * Reads a test fixture.\n */\nexport function readFixture(path: string);\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]\n// Message: Missing JSDoc @returns declaration."
    ],
    "valid": [
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n  return foo;\n}",
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n  return foo;\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n *\n */\nfunction quux () {\n}",
      "/**\n *\n */\nfunction quux (bar) {\n  bar.filter(baz => {\n    return baz.corge();\n  })\n}",
      "/**\n * @returns Array\n */\nfunction quux (bar) {\n  return bar.filter(baz => {\n    return baz.corge();\n  })\n}",
      "/**\n * @returns Array\n */\nconst quux = (bar) => bar.filter(({ corge }) => corge())",
      "/**\n * @inheritdoc\n */\nfunction quux (foo) {\n}",
      "/**\n * @override\n */\nfunction quux (foo) {\n}",
      "/**\n * @constructor\n */\nfunction quux (foo) {\n  return true;\n}",
      "/**\n * @implements\n */\nfunction quux (foo) {\n  return true;\n}",
      "/**\n * @override\n */\nfunction quux (foo) {\n\n  return foo;\n}",
      "/**\n * @class\n */\nfunction quux (foo) {\n  return true;\n}",
      "/**\n * @constructor\n */\nfunction quux (foo) {\n\n}",
      "/**\n * @returns {object}\n */\nfunction quux () {\n\n  return {a: foo};\n}",
      "/**\n * @returns {object}\n */\nconst quux = () => ({a: foo});",
      "/**\n * @returns {object}\n */\nconst quux = () => {\n  return {a: foo}\n};",
      "/**\n * @returns {void}\n */\nfunction quux () {\n}",
      "/**\n * @returns {void}\n */\nconst quux = () => {\n\n}",
      "/**\n * @returns {undefined}\n */\nfunction quux () {\n}",
      "/**\n * @returns {undefined}\n */\nconst quux = () => {\n\n}",
      "/**\n *\n */\nfunction quux () {\n}",
      "/**\n *\n */\nconst quux = () => {\n\n}",
      "class Foo {\n  /**\n   *\n   */\n  constructor () {\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "const language = {\n  /**\n   * @param {string} name\n   */\n  set name(name) {\n    this._name = name;\n  }\n}",
      "/**\n * @returns {void}\n */\nfunction quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/**\n * @returns {void}\n */\nfunction quux () {\n  return undefined;\n}",
      "/**\n * @returns {void}\n */\nfunction quux () {\n  return undefined;\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/**\n * @returns {void}\n */\nfunction quux () {\n  return;\n}",
      "/**\n * @returns {void}\n */\nfunction quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/**\n * @returns {void}\n */\nfunction quux () {\n  return;\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/** @type {RequestHandler} */\nfunction quux (req, res , next) {\n  return;\n}",
      "/**\n * @returns {Promise}\n */\nasync function quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/**\n * @returns {Promise}\n */\nasync function quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]",
      "/**\n *\n */\nasync function quux () {}",
      "/**\n *\n */\nconst quux = async function () {}",
      "/**\n *\n */\nconst quux = async () => {}",
      "/** foo class */\nclass foo {\n  /** foo constructor */\n  constructor () {\n    // =>\n    this.bar = true;\n  }\n}\n\nexport default foo;",
      "/**\n *\n */\nfunction quux () {\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]",
      "/**\n * @type {MyCallback}\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"exemptedBy\":[\"type\"]}]",
      "/**\n * @param {array} a\n */\nasync function foo(a) {\n  return;\n}",
      "/**\n *\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @async\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/**\n * @callback\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceRequireReturn\":true}]",
      "/**\n * @function\n * @async\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]",
      "/**\n * @callback\n * @async\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"forceReturnsWithAsync\":true}]",
      "/**\n * @function\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceReturnsWithAsync\":true}]",
      "/**\n * @callback\n */\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceReturnsWithAsync\":true}]",
      "class foo {\n  get bar() {\n    return 0;\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkGetters\":false}]",
      "class foo {\n  /** @returns zero */\n  get bar() {\n    return 0;\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkGetters\":true}]",
      "class foo {\n  /** @returns zero */\n  get bar() {\n    return 0;\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkGetters\":false}]",
      "class TestClass {\n  /**\n   *\n   */\n  constructor() { }\n}",
      "class TestClass {\n  /**\n   * @returns A map.\n   */\n  constructor() {\n    return new Map();\n  }\n}",
      "class TestClass {\n  /**\n   *\n   */\n  constructor() { }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkConstructors\":false}]",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() { }\n}",
      "class TestClass {\n  /**\n   * @returns A number.\n   */\n  get Test() {\n    return 0;\n  }\n}",
      "class TestClass {\n  /**\n   *\n   */\n  get Test() {\n    return 0;\n  }\n}\n// \"jsdoc/require-returns\": [\"error\"|\"warn\", {\"checkGetters\":false}]",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    resolve();\n  });\n}",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    setTimeout(() => {\n      resolve();\n    });\n  });\n}",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    foo();\n  });\n}",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    abc((resolve) => {\n      resolve(true);\n    });\n  });\n}",
      "/**\n *\n */\nfunction quux (foo) {\n\n  return new Promise(function (resolve, reject) {\n    abc(function (resolve) {\n      resolve(true);\n    });\n  });\n}",
      "/**\n *\n */\nfunction quux () {\n  return new Promise((resolve, reject) => {\n    if (true) {\n      resolve();\n    }\n  });\n  return;\n}",
      "/**\n *\n */\nfunction quux () {\n  return new Promise();\n}",
      "/**\n * Description.\n */\nasync function foo() {\n  return new Promise(resolve => resolve());\n}",
      "/**\n * @param {array} a\n */\nasync function foo(a) {\n  return Promise.all(a);\n}",
      "/**\n * @param ms time in millis\n */\nexport const sleep = (ms: number) =>\n  new Promise<void>((res) => setTimeout(res, ms));",
      "/**\n * @param ms time in millis\n */\nexport const sleep = (ms: number) => {\n  return new Promise<void>((res) => setTimeout(res, ms));\n};",
      "/**\n * Reads a test fixture.\n *\n * @returns The file contents as buffer.\n */\nexport function readFixture(path: string): Promise<Buffer>;",
      "/**\n * Reads a test fixture.\n *\n * @returns {void}.\n */\nexport function readFixture(path: string): void;",
      "/**\n * Reads a test fixture.\n */\nexport function readFixture(path: string): void;",
      "/**\n * Reads a test fixture.\n */\nexport function readFixture(path: string);"
    ]
  },
  "requireReturnsCheck": {
    "invalid": [
      "/**\n * @returns\n */\nfunction quux (foo) {\n\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @return\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":\"return\"}}}\n// Message: JSDoc @return declaration present but return expression not available in function.",
      "/**\n * @returns\n */\nconst quux = () => {}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {undefined} Foo.\n * @returns {String} Foo.\n */\nfunction quux () {\n\n  return foo;\n}\n// Message: Found more than one @returns declaration.",
      "const language = {\n  /**\n   * @param {string} name\n   * @returns {string}\n   */\n  get name() {\n    this._name = name;\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "class Foo {\n  /**\n   * @returns {string}\n   */\n  bar () {\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":false}}}\n// Message: Unexpected tag `@returns`",
      "/**\n * @returns {string}\n */\nfunction f () {\n  function g() {\n    return 'foo'\n  }\n\n  () => {\n    return 5\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {Promise<void>}\n */\nasync function quux() {}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {IterableIterator<any>}\n */\nfunction * quux() {}\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {IterableIterator<any>}\n */\nfunction * quux() {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptGenerators\":false}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {Promise<void>}\n */\nfunction quux() {\n  return new Promise((resolve, reject) => {})\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {Promise<void>}\n */\nfunction quux() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    });\n  })\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * Description.\n * @returns {string}\n */\nasync function foo() {\n  return new Promise(resolve => resolve());\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * Description.\n * @returns {void}\n */\nasync function foo() {\n  return new Promise(resolve => resolve());\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false,\"reportMissingReturnForUndefinedTypes\":true}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns { void } Foo.\n */\nfunction quux () {}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"reportMissingReturnForUndefinedTypes\":true}]\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {never} Foo.\n */\nfunction quux () {\n  return undefined;\n}\n// Message: JSDoc @returns declaration set with \"never\" but return expression is present in function.",
      "/**\n * @returns {never}\n */\nfunction quux (foo) {\n  return foo;\n}\n// Message: JSDoc @returns declaration set with \"never\" but return expression is present in function.",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns The file contents as buffer.\n */\nexport function readFixture(path: string): void;\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns The file contents as buffer.\n */\nexport function readFixture(path: string);\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {SomeType}\n */\nfunction quux (path) {\n  if (true) {\n    return;\n  }\n  return 15;\n};\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns The file contents as buffer.\n */\nexport function readFixture(path: string): void {\n  return;\n};\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  if (true) {\n    return true;\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  if (true) {\n  } else {\n    return;\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {true}\n */\nfunction quux (someVar) {\n  switch (someVar) {\n  case 1:\n    return true;\n  case 2:\n    return;\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {boolean}\n */\nconst quux = (someVar) => {\n  if (someVar) {\n    return true;\n  }\n};\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n    return true;\n  } catch (error) {\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n    return true;\n  } catch (error) {\n    return true;\n  } finally {\n    return;\n  }\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  if (true) {\n    throw new Error('abc');\n  }\n\n  throw new Error('def');\n}\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {SomeType} Baz.\n */\nfunction foo() {\n    switch (true) {\n        default:\n            switch (false) {\n                default: return;\n            }\n            return \"baz\";\n    }\n};\n// Message: JSDoc @returns declaration present but return expression not available in function.",
      "/**\n * @returns {SomeType} Baz.\n */\nfunction foo() {\n    switch (true) {\n        default:\n            switch (false) {\n                default: return;\n            }\n            return \"baz\";\n    }\n};\n// Message: JSDoc @returns declaration present but return expression not available in function."
    ],
    "valid": [
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n  return foo;\n}",
      "/**\n * @returns {string} Foo.\n */\nfunction quux () {\n\n  return foo;\n}",
      "/**\n * @returns {string} Foo.\n */\nfunction quux () {\n\n  return foo;\n}",
      "/**\n *\n */\nfunction quux () {\n}",
      "/**\n * @returns {SomeType} Foo.\n */\nconst quux = () => foo;",
      "/**\n * @returns {undefined} Foo.\n */\nfunction quux () {}",
      "/**\n * @returns { void } Foo.\n */\nfunction quux () {}",
      "/**\n * @returns {Promise<void>}\n */\nasync function quux() {}",
      "/**\n * @returns {Promise<void>}\n */\nconst quux = async function () {}",
      "/**\n * @returns {Promise<void>}\n */\nconst quux = async () => {}",
      "/**\n * @returns Foo.\n * @abstract\n */\nfunction quux () {\n  throw new Error('must be implemented by subclass!');\n}",
      "/**\n * @returns Foo.\n * @virtual\n */\nfunction quux () {\n  throw new Error('must be implemented by subclass!');\n}",
      "/**\n * @returns Foo.\n * @constructor\n */\nfunction quux () {\n}",
      "/**\n * @interface\n */\nclass Foo {\n  /**\n   * @returns {string}\n   */\n  bar () {\n  }\n}",
      "/**\n * @record\n */\nclass Foo {\n  /**\n   * @returns {string}\n   */\n  bar () {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @returns {undefined} Foo.\n */\nfunction quux () {\n}",
      "/**\n * @returns {void} Foo.\n */\nfunction quux () {\n}",
      "/**\n * @returns {void} Foo.\n */\nfunction quux () {\n  return undefined;\n}",
      "/**\n * @returns {never} Foo.\n */\nfunction quux () {\n}",
      "/**\n * @returns {void} Foo.\n */\nfunction quux () {\n  return;\n}",
      "/**\n *\n */\nfunction quux () {\n  return undefined;\n}",
      "/**\n *\n */\nfunction quux () {\n  return;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n    return true;\n  } catch (err) {\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n  } finally {\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n    return true;\n  } catch (err) {\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n    something();\n  } catch (err) {\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  switch (true) {\n  case 'abc':\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  switch (true) {\n  case 'abc':\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  for (const i of abc) {\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  for (const a in b) {\n    return true;\n  }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  for (const a of b) {\n    return true;\n  }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  loop: for (const a of b) {\n    return true;\n  }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  for (let i=0; i<n; i+=1) {\n    return true;\n  }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  while(true) {\n    return true\n  }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  do {\n    return true\n  }\n  while(true)\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  if (true) {\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  var a = {};\n  with (a) {\n    return true;\n  }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  if (true) {\n    return true;\n  } else {\n    return true;\n  }\n  return true;\n}",
      "/**\n * @returns {Promise<number>}\n */\nasync function quux() {\n  return 5;\n}",
      "/**\n * @returns {Promise<number>}\n */\nasync function quux() {\n  return 5;\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false}]",
      "/**\n * @returns {Promise<void>}\n */\nfunction quux() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    });\n  })\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptAsync\":false}]",
      "/**\n * Description.\n * @returns {void}\n */\nasync function foo() {\n  return new Promise(resolve => resolve());\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"reportMissingReturnForUndefinedTypes\":true}]",
      "/**\n * @returns { void } Foo.\n */\nfunction quux () {\n  return undefined;\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"reportMissingReturnForUndefinedTypes\":true}]",
      "/**\n * @returns { string } Foo.\n */\nfunction quux () {\n  return 'abc';\n}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"reportMissingReturnForUndefinedTypes\":true}]",
      "/**\n * @returns {IterableIterator<any>}\n */\nfunction * quux() {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @returns {IterableIterator<any>}\n */\nfunction * quux() {}\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// \"jsdoc/require-returns-check\": [\"error\"|\"warn\", {\"exemptGenerators\":true}]",
      "/**\n * @param {unknown} val\n * @returns { asserts val is number }\n */\nfunction assertNumber(val) {\n  assert(typeof val === 'number');\n}",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns The file contents as buffer.\n */\nexport function readFixture(path: string): Promise<Buffer>;",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns {SomeType} The file contents as buffer.\n */\nexport function readFixture(path: string): Promise<Buffer>;",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns The file contents as buffer.\n */\nexport function readFixture(path: string): Promise<Buffer> {\n  return new Promise(() => {});\n}",
      "/**\n * Reads a test fixture.\n *\n * @param path The path to resolve relative to the fixture base. It will be normalized for the\n * operating system.\n *\n * @returns {void} The file contents as buffer.\n */\nexport function readFixture(path: string);",
      "/**\n * @returns {SomeType}\n */\nfunction quux (path) {\n  if (true) {\n    return 5;\n  }\n  return 15;\n};",
      "/**\n * @returns {SomeType} Foo.\n */\nconst quux = () => new Promise((resolve) => {\n  resolve(3);\n});",
      "/**\n * @returns {SomeType} Foo.\n */\nconst quux = function () {\n  return new Promise((resolve) => {\n    resolve(3);\n  });\n};",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  if (true) {\n    return true;\n  }\n\n  throw new Error('Fail');\n}",
      "/**\n * @returns Baz.\n */\nfunction foo() {\n    switch (true) {\n        default:\n            switch (false) {\n                default: break;\n            }\n            return \"baz\";\n    }\n};",
      "/**\n * Return a V1 style query identifier.\n *\n * @param {string} id - The query identifier.\n * @returns {string} V1 style query identifier.\n */\nfunction v1QueryId(id) {\n    switch (id) {\n        case 'addq':\n        case 'aliq':\n        case 'locq':\n            return id.substring(3);\n        case 'lost':\n            return id.substring(4);\n        default:\n            return id;\n    }\n}",
      "/**\n * Parses the required header fields for the given SIP message.\n *\n * @param {string} logPrefix - The log prefix.\n * @param {string} sipMessage - The SIP message.\n * @param {string[]} headers - The header fields to be parsed.\n * @returns {object} Object with parsed header fields.\n */\nfunction parseSipHeaders(logPrefix, sipMessage, headers) {\n    try {\n        return esappSip.parseHeaders(sipMessage, headers);\n    } catch (err) {\n        logger.error(logPrefix, 'Failed to parse');\n        return {};\n    }\n}",
      "/**\n * @returns {true}\n */\nfunction quux () {\n  try {\n  } catch (error) {\n  } finally {\n    return true;\n  }\n}",
      "/** Returns true.\n *\n * @returns {boolean} true\n */\nfunction getTrue() {\n  try {\n    return true;\n  } finally {\n    console.log('returning...');\n  }\n}",
      "/**\n * Maybe return a boolean.\n * @returns {boolean|void} true, or undefined.\n */\nfunction maybeTrue() {\n  if (Math.random() > 0.5) {\n    return true;\n  }\n}",
      "/**\n * @param {AST} astNode\n * @returns {AST}\n */\nconst getTSFunctionComment = function (astNode) {\n  switch (greatGrandparent.type) {\n  case 'VariableDeclarator':\n    if (greatGreatGrandparent.type === 'VariableDeclaration') {\n      return greatGreatGrandparent;\n    }\n\n  default:\n    return astNode;\n  }\n};",
      "const f =\n  /**\n   * Description.\n   *\n   * @returns Result.\n   */\n  () => {\n    return function () {};\n  };",
      "/**\n * Description.\n *\n * @returns Result.\n */\nexport function f(): string {\n  return \"\";\n\n  interface I {}\n}",
      "/**\n * @param {boolean} bar A fun variable.\n * @returns {*} Anything at all!\n */\nfunction foo( bar ) {\n  if ( bar ) {\n    return functionWithUnknownReturnType();\n  }\n}",
      "/**\n * @returns Baz.\n */\nfunction foo() {\n    switch (true) {\n        default:\n            switch (false) {\n                default: return;\n            }\n            return \"baz\";\n    }\n};",
      "/**\n * @returns Baz.\n */\nfunction foo() {\n    switch (true) {\n        default:\n            switch (false) {\n                default: return;\n            }\n            return \"baz\";\n    }\n};",
      "/**\n * @returns\n */\nconst quux = (someVar) => {\n  if (someVar) {\n    return true;\n  }\n};"
    ]
  },
  "requireReturnsDescription": {
    "invalid": [
      "/**\n * @returns\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @returns description.",
      "/**\n * @returns {string}\n */\nfunction quux (foo) {\n\n}\n// Message: Missing JSDoc @returns description.",
      "/**\n * @returns {string}\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-returns-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @returns description.",
      "/**\n * @function\n * @returns {string}\n */\n// \"jsdoc/require-returns-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @returns description.",
      "/**\n * @callback\n * @returns {string}\n */\n// \"jsdoc/require-returns-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @returns description.",
      "/**\n * @return\n */\nfunction quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":\"return\"}}}\n// Message: Missing JSDoc @return description.",
      "/**\n * @returns\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":false}}}\n// Message: Unexpected tag `@returns`"
    ],
    "valid": [
      "/**\n *\n */\nfunction quux () {\n\n}",
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n}",
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-returns-description\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @returns {undefined}\n */\nfunction quux () {\n\n}",
      "/**\n * @returns {void}\n */\nfunction quux () {\n\n}",
      "/**\n * @returns {Promise<void>}\n */\nfunction quux () {\n\n}",
      "/**\n * @returns {Promise<undefined>}\n */\nfunction quux () {\n\n}",
      "/**\n * @function\n * @returns\n */",
      "/**\n * @callback\n * @returns\n */"
    ]
  },
  "requireReturnsType": {
    "invalid": [
      "/**\n * @returns\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @returns type.",
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n}\n// Message: Missing JSDoc @returns type.",
      "/**\n * @returns Foo.\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-returns-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @returns type.",
      "/**\n * @function\n * @returns Foo.\n */\n// \"jsdoc/require-returns-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @returns type.",
      "/**\n * @callback\n * @returns Foo.\n */\n// \"jsdoc/require-returns-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]\n// Message: Missing JSDoc @returns type.",
      "/**\n * @return Foo.\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":\"return\"}}}\n// Message: Missing JSDoc @return type.",
      "/**\n * @returns\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"returns\":false}}}\n// Message: Unexpected tag `@returns`"
    ],
    "valid": [
      "/**\n * @returns {number}\n */\nfunction quux () {\n\n}",
      "/**\n * @returns {number}\n */\nfunction quux () {\n\n}\n// \"jsdoc/require-returns-type\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n * @returns Foo.\n */",
      "/**\n * @callback\n * @returns Foo.\n */"
    ]
  },
  "requireThrows": {
    "invalid": [
      "/**\n *\n */\nfunction quux (foo) {\n  throw new Error('err')\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nconst quux = function (foo) {\n  throw new Error('err')\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nconst quux = (foo) => {\n  throw new Error('err')\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  while(true) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  do {\n    throw new Error('err')\n  } while(true)\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  for(var i = 0; i <= 10; i++) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  for(num in [1,2,3]) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  for(const num of [1,2,3]) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  for(const index in [1,2,3]) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  with(foo) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  if (true) {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  if (false) {\n    // do nothing\n  } else {\n    throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  try {\n    throw new Error('err')\n  } catch(e) {\n    throw new Error(e.message)\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  try {\n    // do nothing\n  } finally {\n    throw new Error(e.message)\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n *\n */\nfunction quux (foo) {\n  const a = 'b'\n  switch(a) {\n    case 'b':\n      throw new Error('err')\n  }\n}\n// Message: Missing JSDoc @throws declaration.",
      "/**\n * @throws\n */\nfunction quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"throws\":false}}}\n// Message: Unexpected tag `@throws`",
      "/**\n *\n */\nconst directThrowAfterArrow = (b) => {\n  const a = () => {};\n  if (b) {\n    throw new Error('oops')\n  }\n  return a;\n};\n// Message: Missing JSDoc @throws declaration.",
      "/**\n * @throws {never}\n */\nfunction quux (foo) {\n  throw new Error('err')\n}\n// Message: JSDoc @throws declaration set to \"never\" but throw value found."
    ],
    "valid": [
      "/**\n * @throws An error.\n */\nfunction quux () {\n  throw new Error('err')\n}",
      "/**\n *\n */\nfunction quux (foo) {\n  try {\n    throw new Error('err')\n  } catch(e) {}\n}",
      "/**\n * @throws {object}\n */\nfunction quux (foo) {\n  throw new Error('err')\n}",
      "/**\n * @inheritdoc\n */\nfunction quux (foo) {\n  throw new Error('err')\n}",
      "/**\n * @abstract\n */\nfunction quux (foo) {\n  throw new Error('err')\n}",
      "/**\n *\n */\nfunction quux (foo) {\n}",
      "/**\n * @type {MyCallback}\n */\nfunction quux () {\n  throw new Error('err')\n}\n// \"jsdoc/require-throws\": [\"error\"|\"warn\", {\"exemptedBy\":[\"type\"]}]",
      "/**\n *\n */\nconst itself = (n) => n;",
      "/**\n * Not tracking on nested function\n */\nconst nested = () => () => {throw new Error('oops');};",
      "/**\n */\nasync function foo() {\n  throw Error(\"bar\");\n}",
      "/**\n * @throws {never}\n */\nfunction quux (foo) {\n}"
    ]
  },
  "requireYields": {
    "invalid": [
      "/**\n *\n */\nfunction * quux (foo) {\n\n  yield foo;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @yields\n */\nfunction * quux (foo) {\n\n  const retVal = yield foo;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: Missing JSDoc @next declaration.",
      "/**\n * @yields\n */\nfunction * quux (foo) {\n\n  const retVal = yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: Missing JSDoc @next declaration.",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireNext\":true}]\n// Message: Missing JSDoc @next declaration.",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireNext\":true}]\n// Message: Missing JSDoc @next declaration.",
      "/**\n *\n */\nfunction * quux (foo) {\n\n  const a = yield foo;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux (foo) {\n  yield foo;\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"yields\":\"yield\"}}}\n// Message: Missing JSDoc @yield declaration.",
      "/**\n * @yields\n */\nfunction * quux (foo) {\n  const val = yield foo;\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"next\":\"yield-returns\"}}}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: Missing JSDoc @yield-returns declaration.",
      "/**\n * @yields\n * @next\n */\nfunction * quux () {\n  const ret = yield 5;\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"next\":false}}}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: Unexpected tag `@next`",
      "/**\n *\n */\nfunction * quux() {\n  yield 5;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux() {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nconst quux = async function * () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nasync function * quux () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @function\n * @generator\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @callback\n * @generator\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @yields {undefined}\n * @yields {void}\n */\nfunction * quux (foo) {\n\n  return foo;\n}\n// Message: Found more than one @yields declaration.",
      "/**\n * @yields\n */\nfunction * quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"yields\":false}}}\n// Message: Unexpected tag `@yields`",
      "/**\n * @param foo\n */\nfunction * quux (foo) {\n  yield 'bar';\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"exemptedBy\":[\"notPresent\"]}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @param {array} a\n */\nasync function * foo(a) {\n  return;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @param {array} a\n */\nasync function * foo(a) {\n  yield Promise.all(a);\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "class quux {\n  /**\n   *\n   */\n  * quux () {\n    yield;\n  }\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"forceRequireYields\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @param {array} a\n */\nasync function * foo(a) {\n  yield Promise.all(a);\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @generator\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"withGeneratorTag\":true}]\n// Message: Missing JSDoc @yields declaration.",
      "/**\n * @generator\n * @yields\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"nextWithGeneratorTag\":true}]\n// Message: Missing JSDoc @next declaration.",
      "/**\n *\n */\nfunction * quux () {\n  if (true) {\n    yield;\n  }\n  yield true;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  try {\n    yield true;\n  } catch (err) {\n  }\n  yield;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  try {\n  } finally {\n    yield true;\n  }\n  yield;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  try {\n    yield;\n  } catch (err) {\n  }\n  yield true;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  try {\n    something();\n  } catch (err) {\n    yield true;\n  }\n  yield;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  switch (true) {\n  case 'abc':\n    yield true;\n  }\n  yield;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  switch (true) {\n  case 'abc':\n    yield;\n  }\n  yield true;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  for (const i of abc) {\n    yield true;\n  }\n  yield;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  for (const a in b) {\n    yield true;\n  }\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  for (let i=0; i<n; i+=1) {\n    yield true;\n  }\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  while(true) {\n    yield true\n  }\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  do {\n    yield true\n  }\n  while(true)\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  if (true) {\n    yield;\n  }\n  yield true;\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  if (true) {\n    yield true;\n  }\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  var a = {};\n  with (a) {\n    yield true;\n  }\n}\n// Message: Missing JSDoc @yields declaration.",
      "/**\n *\n */\nfunction * quux () {\n  if (true) {\n    yield;\n  } else {\n    yield true;\n  }\n  yield;\n}\n// Message: Missing JSDoc @yields declaration."
    ],
    "valid": [
      "/**\n * @yields Foo.\n */\nfunction * quux () {\n\n  yield foo;\n}",
      "/**\n * @yields Foo.\n */\nfunction * quux () {\n\n  yield foo;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n *\n */\nfunction * quux () {\n}",
      "/**\n *\n */\nfunction * quux () {\n  yield;\n}",
      "/**\n *\n */\nfunction quux (bar) {\n  bar.doSomething(function * (baz) {\n    yield baz.corge();\n  })\n}",
      "/**\n * @yields {Array}\n */\nfunction * quux (bar) {\n  yield bar.doSomething(function * (baz) {\n    yield baz.corge();\n  })\n}",
      "/**\n * @inheritdoc\n */\nfunction * quux (foo) {\n}",
      "/**\n * @override\n */\nfunction * quux (foo) {\n}",
      "/**\n * @constructor\n */\nfunction * quux (foo) {\n}",
      "/**\n * @implements\n */\nfunction * quux (foo) {\n  yield;\n}",
      "/**\n * @override\n */\nfunction * quux (foo) {\n\n  yield foo;\n}",
      "/**\n * @class\n */\nfunction * quux (foo) {\n  yield foo;\n}",
      "/**\n * @constructor\n */\nfunction * quux (foo) {\n}",
      "/**\n * @yields {object}\n */\nfunction * quux () {\n\n  yield {a: foo};\n}",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n}",
      "/**\n * @yields {undefined}\n */\nfunction * quux () {\n}",
      "/**\n *\n */\nfunction * quux () {\n}",
      "/**\n * @yields {void}\n */\nfunction quux () {\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/**\n * @yields {void}\n * @next {void}\n */\nfunction * quux () {\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireNext\":true}]",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n  yield undefined;\n}",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n  yield undefined;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n  yield;\n}",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/** @type {SpecialIterator} */\nfunction * quux () {\n  yield 5;\n}",
      "/**\n * @yields {Something}\n */\nasync function * quux () {\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/**\n *\n */\nasync function * quux () {}",
      "/**\n *\n */\nconst quux = async function * () {}",
      "/**\n * @type {MyCallback}\n */\nfunction * quux () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"exemptedBy\":[\"type\"]}]",
      "/**\n * @param {array} a\n */\nasync function * foo (a) {\n  yield;\n}",
      "/**\n *\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"]}]",
      "/**\n * @function\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/**\n * @callback\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"forceRequireYields\":true}]",
      "/**\n * @generator\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"withGeneratorTag\":true}]",
      "/**\n * @generator\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"nextWithGeneratorTag\":true}]",
      "/**\n * @generator\n * @yields\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"withGeneratorTag\":true}]",
      "/**\n * @generator\n * @yields\n * @next\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"nextWithGeneratorTag\":true}]",
      "/**\n * @generator\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"withGeneratorTag\":false}]",
      "/**\n * @generator\n * @yields\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"nextWithGeneratorTag\":false}]",
      "/**\n * @yields\n */\nfunction * quux (foo) {\n\n  const a = yield foo;\n}",
      "/**\n * @yields\n * @next\n */\nfunction * quux (foo) {\n  let a = yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]",
      "/**\n * @yields\n * @next\n */\nfunction * quux (foo) {\n  const a = yield foo;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]",
      "/**\n *\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"nextWithGeneratorTag\":true}]",
      "/**\n *\n */\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"next\":true}]",
      "/**\n *\n */\nfunction quux () {}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"contexts\":[\"any\"],\"next\":true}]",
      "/**\n * @yields {void}\n */\nfunction * quux () {\n  yield;\n}\n// \"jsdoc/require-yields\": [\"error\"|\"warn\", {\"next\":true}]",
      "/**\n *\n */\nfunction * quux (foo) {\n  const a = function * bar () {\n    yield foo;\n  }\n}"
    ]
  },
  "requireYieldsCheck": {
    "invalid": [
      "/**\n * @yields\n */\nfunction * quux (foo) {\n\n}\n// Message: JSDoc @yields declaration present but yield expression not available in function.",
      "/**\n * @yields\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"checkGeneratorsOnly\":true}]\n// Message: JSDoc @yields declaration present but yield expression not available in function.",
      "/**\n * @next\n */\nfunction quux (foo) {\n\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"checkGeneratorsOnly\":true,\"next\":true}]\n// Message: JSDoc @next declaration present but yield expression with return value not available in function.",
      "/**\n * @next {SomeType}\n */\nfunction * quux (foo) {\n\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: JSDoc @next declaration present but yield expression with return value not available in function.",
      "/**\n * @next {SomeType}\n */\nfunction * quux (foo) {\n  yield;\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: JSDoc @next declaration present but yield expression with return value not available in function.",
      "/**\n * @next {SomeType}\n */\nfunction * quux (foo) {\n  yield 5;\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: JSDoc @next declaration present but yield expression with return value not available in function.",
      "/**\n * @yield\n */\nfunction * quux (foo) {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"yields\":\"yield\"}}}\n// Message: JSDoc @yield declaration present but yield expression not available in function.",
      "/**\n * @yield-returns {Something}\n */\nfunction * quux (foo) {\n  yield;\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"next\":\"yield-returns\"}}}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: JSDoc @yield-returns declaration present but yield expression with return value not available in function.",
      "/**\n * @yields {undefined} Foo.\n * @yields {String} Foo.\n */\nfunction * quux () {\n\n  yield foo;\n}\n// Message: Found more than one @yields declaration.",
      "class Foo {\n  /**\n   * @yields {string}\n   */\n  * bar () {\n  }\n}\n// Message: JSDoc @yields declaration present but yield expression not available in function.",
      "/**\n * @yields\n */\nfunction * quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"yields\":false}}}\n// Message: Unexpected tag `@yields`",
      "/**\n * @next\n */\nfunction * quux () {\n\n}\n// Settings: {\"jsdoc\":{\"tagNamePreference\":{\"next\":false}}}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: Unexpected tag `@next`",
      "/**\n * @yields {string}\n */\nfunction * f () {\n  function * g() {\n    yield 'foo'\n  }\n}\n// Message: JSDoc @yields declaration present but yield expression not available in function.",
      "/**\n * @yields {Promise<void>}\n */\nasync function * quux() {}\n// Message: JSDoc @yields declaration present but yield expression not available in function.",
      "/**\n * @yields {Promise<void>}\n */\nconst quux = async function * () {}\n// Message: JSDoc @yields declaration present but yield expression not available in function.",
      "/**\n * @yields {never} Foo.\n */\nfunction * quux () {\n  yield 5;\n}\n// Message: JSDoc @yields declaration set with \"never\" but yield expression is present in function.",
      "/**\n * @next {never}\n */\nfunction * quux (foo) {\n  const a = yield;\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]\n// Message: JSDoc @next declaration set with \"never\" but yield expression with return value is present in function."
    ],
    "valid": [
      "/**\n * @yields Foo.\n */\nfunction * quux () {\n\n  yield foo;\n}",
      "/**\n * @yields {string} Foo.\n */\nfunction * quux () {\n\n  yield foo;\n}",
      "/**\n * @yields {string} Foo.\n */\nfunction * quux () {\n\n  yield foo;\n}",
      "/**\n *\n */\nfunction * quux () {\n}",
      "/**\n * @yields {undefined} Foo.\n */\nfunction * quux () {}",
      "/**\n * @yields { void } Foo.\n */\nfunction quux () {}",
      "/**\n * @yields Foo.\n * @abstract\n */\nfunction * quux () {\n  throw new Error('must be implemented by subclass!');\n}",
      "/**\n * @yields Foo.\n * @virtual\n */\nfunction * quux () {\n  throw new Error('must be implemented by subclass!');\n}",
      "/**\n * @yields Foo.\n * @constructor\n */\nfunction * quux () {\n}",
      "/**\n * @interface\n */\nclass Foo {\n  /**\n   * @yields {string}\n   */\n  * bar () {\n  }\n}",
      "/**\n * @record\n */\nclass Foo {\n  /**\n   * @yields {string}\n   */\n  * bar () {\n  }\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @yields {undefined} Foo.\n */\nfunction * quux () {\n}",
      "/**\n * @yields {void} Foo.\n */\nfunction * quux () {\n}",
      "/**\n * @yields {never} Foo.\n */\nfunction * quux () {\n}",
      "/**\n * @yields {void} Foo.\n */\nfunction * quux () {\n  yield undefined;\n}",
      "/**\n * @yields {void} Foo.\n */\nfunction * quux () {\n  yield;\n}",
      "/**\n *\n */\nfunction * quux () {\n  yield undefined;\n}",
      "/**\n *\n */\nfunction * quux () {\n  yield;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  try {\n    yield true;\n  } catch (err) {\n  }\n  yield;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  try {\n  } finally {\n    yield true;\n  }\n  yield;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  try {\n    yield;\n  } catch (err) {\n  }\n  yield true;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  try {\n    something();\n  } catch (err) {\n    yield true;\n  }\n  yield;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  switch (true) {\n  case 'abc':\n    yield true;\n  }\n  yield;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  switch (true) {\n  case 'abc':\n    yield;\n  }\n  yield true;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  for (const i of abc) {\n    yield true;\n  }\n  yield;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  for (const a in b) {\n    yield true;\n  }\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  for (let i=0; i<n; i+=1) {\n    yield true;\n  }\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  while(true) {\n    yield true\n  }\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  do {\n    yield true\n  }\n  while(true)\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  if (true) {\n    yield;\n  }\n  yield true;\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  if (true) {\n    yield true;\n  }\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  var a = {};\n  with (a) {\n    yield true;\n  }\n}",
      "/**\n * @yields {true}\n */\nfunction * quux () {\n  if (true) {\n    yield;\n  } else {\n    yield true;\n  }\n  yield;\n}",
      "/**\n * @next {void}\n */\nfunction * quux (foo) {\n\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]",
      "/**\n * @next {SomeType}\n */\nfunction * quux (foo) {\n  const a = yield;\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]",
      "/**\n * @next {SomeType}\n */\nfunction * quux (foo) {\n  const a = yield 5;\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]",
      "/**\n * @next {never}\n */\nfunction * quux (foo) {\n\n}\n// \"jsdoc/require-yields-check\": [\"error\"|\"warn\", {\"next\":true}]"
    ]
  },
  "sortTags": {
    "invalid": [
      "/**\n * @returns {string}\n * @param b\n * @param a\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * Some description\n * @returns {string}\n * @param b\n * @param a\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * @returns {string}\n * @param b A long\n *   description\n * @param a\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * Some description\n * @returns {string}\n * @param b A long\n *   description\n * @param a\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * @param b A long\n *   description\n * @returns {string}\n * @param a\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * @def\n * @xyz\n * @abc\n */\nfunction quux () {}\n// \"jsdoc/sort-tags\": [\"error\"|\"warn\", {\"alphabetizeExtras\":true}]\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * @xyz\n * @def\n * @abc\n */\nfunction quux () {}\n// \"jsdoc/sort-tags\": [\"error\"|\"warn\", {\"tagSequence\":[\"def\",\"xyz\",\"abc\"]}]\n// Message: Tags are not in the prescribed order: def, xyz, abc",
      "/**\n * @returns {string}\n * @ignore\n * @param b A long\n *   description\n * @param a\n * @module\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * @xyz\n * @abc\n * @abc\n * @def\n * @xyz\n */\nfunction quux () {}\n// \"jsdoc/sort-tags\": [\"error\"|\"warn\", {\"alphabetizeExtras\":true}]\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo",
      "/**\n * @param b A long\n *   description\n * @module\n */\nfunction quux () {}\n// Message: Tags are not in the prescribed order: summary, typeSummary, module, exports, file, fileoverview, overview, typedef, interface, record, template, name, kind, type, alias, external, host, callback, func, function, method, class, constructor, modifies, mixes, mixin, mixinClass, mixinFunction, namespace, borrows, constructs, lends, implements, requires, desc, description, classdesc, tutorial, copyright, license, internal, const, constant, final, global, readonly, abstract, virtual, var, member, memberof, memberof!, inner, instance, inheritdoc, inheritDoc, override, hideconstructor, param, arg, argument, prop, property, return, returns, async, generator, default, defaultvalue, enum, augments, extends, throws, exception, yield, yields, event, fires, emits, listens, this, static, private, protected, public, access, package, -other, see, example, closurePrimitive, customElement, expose, hidden, idGenerator, meaning, ngInject, owner, wizaction, define, dict, export, externs, implicitCast, noalias, nocollapse, nocompile, noinline, nosideeffects, polymer, polymerBehavior, preserve, struct, suppress, unrestricted, category, ignore, author, version, variation, since, deprecated, todo"
    ],
    "valid": [
      "/**\n * @param b\n * @param a\n * @returns {string}\n */\nfunction quux () {}",
      "/**\n * @abc\n * @def\n * @xyz\n */\nfunction quux () {}\n// \"jsdoc/sort-tags\": [\"error\"|\"warn\", {\"alphabetizeExtras\":true}]",
      "/**\n * @def\n * @xyz\n * @abc\n */\nfunction quux () {}\n// \"jsdoc/sort-tags\": [\"error\"|\"warn\", {\"alphabetizeExtras\":false}]",
      "/**\n * @def\n * @xyz\n * @abc\n */\nfunction quux () {}\n// \"jsdoc/sort-tags\": [\"error\"|\"warn\", {\"tagSequence\":[\"def\",\"xyz\",\"abc\"]}]",
      "/** @def */\nfunction quux () {}"
    ]
  },
  "tagLines": {
    "invalid": [
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"count\":2}]\n// Message: Expected 2 lines between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"count\":2}]\n// Message: Expected 2 lines between tags but found 1",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"noEndLines\":true}]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\"]\n// Message: Expected no lines between tags",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n *\n */\n// Message: Expected no lines between tags",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n * @param {number} c\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"param\":{\"lines\":\"always\"}}}]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"param\":{\"lines\":\"always\"}}}]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"param\":{\"lines\":\"never\"}}}]\n// Message: Expected no lines between tags",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"count\":2,\"tags\":{\"param\":{\"lines\":\"always\"}}}]\n// Message: Expected 2 lines between tags but found 1",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"count\":5,\"tags\":{\"param\":{\"count\":2,\"lines\":\"always\"}}}]\n// Message: Expected 2 lines between tags but found 1",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"anotherTag\":{\"lines\":\"never\"}}}]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} A broken up\n *\n * tag description.\n * @param {number} b\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {number} b\n *\n * @returns {string} A broken up\n *\n * tag description.\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]\n// Message: Expected 1 line between tags but found 0",
      "/**\n * Some description\n * @param {string} a\n * @param {string} b\n *\n * @returns {SomeType} An extended\n * description.\n *\n * This is still part of `@returns`.\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"any\",{\"dropEndLines\":true}]\n// Message: Expected no trailing lines"
    ],
    "valid": [
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\"]",
      "/**\n * @param {string} a\n *\n * @param {string} a\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"noEndLines\":true}]",
      "/**\n * @param {string} a\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"noEndLines\":true}]",
      "/** @param {number} b */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"noEndLines\":true}]",
      "/**\n * Some description\n * @param {string} a\n *\n * @param {number} b\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Some description\n * @param {string} a\n *\n *\n * @param {number} b\n *\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"count\":2}]",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"param\":{\"lines\":\"any\"}}}]",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"param\":{\"lines\":\"any\"}}}]",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\",{\"tags\":{\"param\":{\"lines\":\"never\"}}}]",
      "/**\n * Some description\n * @param {number} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"param\":{\"lines\":\"any\"}}}]",
      "/**\n * Some description\n * @param {number} a\n *\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"param\":{\"lines\":\"any\"}}}]",
      "/**\n * Some description\n * @param {number} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"param\":{\"lines\":\"never\"}}}]",
      "/**\n * Some description\n * @param {string} a\n *\n *\n * @param {number} b\n *\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"count\":5,\"tags\":{\"param\":{\"count\":2,\"lines\":\"always\"}}}]",
      "/**\n * Some description\n * @param {string} a\n * @param {number} b\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\",{\"tags\":{\"anotherTag\":{\"lines\":\"always\"}}}]",
      "/**\n * Some description\n * @param {string} a\n *\n * This is still part of `@param`.\n * @returns {SomeType} An extended\n * description.\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\"]",
      "/**\n * Some description\n * @param {string} a\n * @returns {SomeType} An extended\n * description.\n *\n * This is still part of `@returns`.\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"never\"]",
      "/**\n * Some description\n * @param {string} a\n *\n * This is still part of `@param`.\n *\n * @returns {SomeType} An extended\n * description.\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Some description\n * @param {string} a\n *\n * @returns {SomeType} An extended\n * description.\n *\n * This is still part of `@returns`.\n *\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"always\"]",
      "/**\n * Some description\n * @param {string} a\n * @param {string} b\n *\n * @returns {SomeType} An extended\n * description.\n *\n * This is still part of `@returns`.\n */\n// \"jsdoc/tag-lines\": [\"error\"|\"warn\", \"any\",{\"dropEndLines\":true}]"
    ]
  },
  "textEscaping": {
    "invalid": [
      "/**\n * Some things to escape: <a> and &gt; and `test`\n */\n// Message: You must include either `escapeHTML` or `escapeMarkdown`",
      "/**\n * Some things to escape: <a> and &gt; and &#xabc; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]\n// Message: You have unescaped HTML characters < or &",
      "/**\n * Some things to escape: <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]\n// Message: You have unescaped Markdown backtick sequences",
      "/**\n * Some things to escape:\n * <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]\n// Message: You have unescaped HTML characters < or &",
      "/**\n * Some things to escape:\n * <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]\n// Message: You have unescaped Markdown backtick sequences",
      "/**\n * @param {SomeType} aName Some things to escape: <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]\n// Message: You have unescaped HTML characters < or & in a tag",
      "/**\n * @param {SomeType} aName Some things to escape: <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]\n// Message: You have unescaped Markdown backtick sequences in a tag",
      "/**\n * @param {SomeType} aName Some things to escape:\n * <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]\n// Message: You have unescaped HTML characters < or & in a tag",
      "/**\n * @param {SomeType} aName Some things to escape:\n * <a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]\n// Message: You have unescaped Markdown backtick sequences in a tag"
    ],
    "valid": [
      "/**\n * Some things to escape: &lt;a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]",
      "/**\n * Some things to escape: <a> and &gt; and \\`test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]",
      "/**\n * Some things to escape: < and &\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]",
      "/**\n * Some things to escape: `\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]",
      "/**\n * @param {SomeType} aName Some things to escape: &lt;a> and &gt; and `test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]",
      "/**\n * @param {SomeType} aName Some things to escape: <a> and &gt; and \\`test`\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]",
      "/**\n * @param {SomeType} aName Some things to escape: < and &\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]",
      "/**\n * @param {SomeType} aName Some things to escape: `\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeMarkdown\":true}]",
      "/**\n * Nothing\n * to escape\n */\n// \"jsdoc/text-escaping\": [\"error\"|\"warn\", {\"escapeHTML\":true}]"
    ]
  },
  "validTypes": {
    "invalid": [
      "/**\n * @param {Array<string} foo\n */\nfunction quux() {\n\n}\n// Message: Syntax error in type: Array<string",
      "/**\n * @memberof module:namespace.SomeClass<~\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: module:namespace.SomeClass<~",
      "/**\n * @param someParam<~\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: someParam<~",
      "/**\n * @memberof module:namespace.SomeClass~<\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: module:namespace.SomeClass~<",
      "/**\n * @borrows foo% as bar\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: foo%",
      "/**\n * @borrows #foo as bar\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: #foo",
      "/**\n * @borrows foo as bar%\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: bar%",
      "/**\n * @borrows foo\n */\nfunction quux() {\n\n}\n// Message: @borrows must have an \"as\" expression. Found \"\"",
      "/**\n * @see foo%\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":\"namepath-referencing\",\"required\":[\"name\"]}}}}\n// Message: Syntax error in namepath: foo%",
      "/**\n * @mixes module:namespace.SomeClass~\n */\nfunction quux() {\n\n}\n// Message: Syntax error in namepath: module:namespace.SomeClass~",
      "/**\n * @callback\n */\nfunction quux() {\n\n}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":false}]\n// Message: Tag @callback must have a name/namepath.",
      "/**\n * @constant {str%ng}\n */\n const FOO = 'foo';\n// Message: Syntax error in type: str%ng",
      "/**\n * @typedef {str%ng} UserString\n */\n// Message: Syntax error in type: str%ng",
      "/**\n * @typedef {string} UserStr%ng\n */\n// Message: Syntax error in namepath: UserStr%ng",
      "/**\n * @this\n */\n class Bar {};\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":false}]\n// Message: Tag @this must have either a type or namepath in \"jsdoc\" mode.",
      "/**\n * @aCustomTag\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"required\":[\"typeOrNameRequired\"]}}}}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":false}]\n// Message: Tag @aCustomTag must have either a type or namepath.",
      "/**\n * @type\n */\n let foo;\n// Message: Tag @type must have a type.",
      "/**\n * @modifies {bar | foo<}\n */\nfunction quux (foo, bar, baz) {}\n// Message: Syntax error in type: bar | foo<",
      "/**\n * @private {BadTypeChecked<}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Syntax error in type: BadTypeChecked<",
      "/**\n * @this {BadTypeChecked<}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Syntax error in type: BadTypeChecked<",
      "/**\n * @define\n */\n function quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Tag @define must have a type in \"closure\" mode.",
      "/**\n * @this\n */\n let foo;\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Tag @this must have a type in \"closure\" mode.",
      "/**\n * Foo function.\n *\n * @param {[number, string]} bar - The bar array.\n */\nfunction foo(bar) {}\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: Syntax error in type: [number, string]",
      "/**\n * @interface name<\n */\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: Syntax error in namepath: name<",
      "/**\n * @module name<\n */\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: Syntax error in namepath: name<",
      "/**\n * @module module:name<\n */\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: Syntax error in namepath: module:name<",
      "/**\n * @interface name\n */\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: @interface should not have a name in \"closure\" mode.",
      "/**\n * @aCustomTag name\n */\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"name\":false}}}}\n// Message: @aCustomTag should not have a name.",
      "/**\n * @typedef {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":false}]\n// Message: Tag @typedef must have a name/namepath in \"jsdoc\" mode.",
      "/**\n * @private {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}\n// Message: @private should not have a bracketed type in \"jsdoc\" mode.",
      "/**\n * @aCustomTag {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"aCustomTag\":{\"type\":false}}}}\n// Message: @aCustomTag should not have a bracketed type.",
      "/**\n * @see foo%\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":false,\"required\":[\"name\"]}}}}\n// Message: Cannot add \"name\" to `require` with the tag's `name` set to `false`",
      "/**\n * @see foo%\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"required\":[\"type\"],\"type\":false}}}}\n// Message: Cannot add \"type\" to `require` with the tag's `type` set to `false`",
      "/**\n * @see foo%\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":false,\"required\":[\"typeOrNameRequired\"]}}}}\n// Message: Cannot add \"typeOrNameRequired\" to `require` with the tag's `name` set to `false`",
      "/**\n * @see foo%\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"required\":[\"typeOrNameRequired\"],\"type\":false}}}}\n// Message: Cannot add \"typeOrNameRequired\" to `require` with the tag's `type` set to `false`",
      "/**\n * @template T<~, R\n * @param {function(!T): !R} parser\n * @return {function(!Array<!T>): !Array<!R>}\n */\nparseArray = function(parser) {\n    return function(array) {\n        return array.map(parser);\n    };\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Syntax error in namepath: T<~",
      "/**\n * @template T, R<~\n * @param {function(!T): !R} parser\n * @return {function(!Array<!T>): !Array<!R>}\n */\nparseArray = function(parser) {\n    return function(array) {\n        return array.map(parser);\n    };\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Syntax error in namepath: R<~",
      "/**\n * @template    T, R<~\n * @param {function(!T): !R} parser\n * @return {function(!Array<!T>): !Array<!R>}\n */\nparseArray = function(parser) {\n    return function(array) {\n        return array.map(parser);\n    };\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Syntax error in namepath: R<~",
      "/**\n * @suppress\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Tag @suppress must have a type in \"closure\" mode.",
      "/**\n * @suppress {visibility} sth\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: @suppress should not have a name in \"closure\" mode.",
      "/**\n * @suppress {visibility|blah}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// Message: Syntax error in supresss type: blah",
      "/**\n * @param {Object[]} employees\n * @param {string} employees[.name - The name of an employee.\n */\nfunction quux () {}\n// Message: Invalid name: unpaired brackets",
      "/**\n * @param {Object[]} employees\n * @param {string} [] - The name of an employee.\n */\nfunction quux () {}\n// Message: Invalid name: empty name",
      "/**\n * @param {Object[]} employees\n * @param {string} [] - The name of an employee.\n */\nfunction quux () {}\n// Message: Invalid name: empty name",
      "/**\n * @param {string} [name=] - The name of an employee.\n */\nfunction quux () {}\n// Message: Invalid name: empty default value",
      "/**\n * @param {string} [name==] - The name of an employee.\n */\nfunction quux () {}\n// Message: Invalid name: invalid default value syntax"
    ],
    "valid": [
      "/**\n * @param {Array<string>} foo\n */\nfunction quux() {\n\n}",
      "/**\n * @param {string} foo\n */\nfunction quux() {\n\n}",
      "/**\n * @param foo\n */\nfunction quux() {\n\n}",
      "/**\n * @borrows foo as bar\n */\nfunction quux() {\n\n}",
      "/**\n * @borrows foo as #bar\n */\nfunction quux() {\n\n}",
      "/**\n * @see foo%\n */\nfunction quux() {\n\n}",
      "/**\n * @alias module:namespace.SomeClass#event:ext_anevent\n */\nfunction quux() {\n\n}",
      "/**\n * @callback foo\n */\nfunction quux() {\n\n}",
      "/**\n * @callback\n */\nfunction quux() {\n\n}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":true}]",
      "/**\n * @class\n */\nfunction quux() {\n\n}",
      "/**\n * @see {@link foo}\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":\"namepath-referencing\",\"required\":[\"name\"]}}}}",
      "/**\n *\n * @fires module:namespace.SomeClass#event:ext_anevent\n */\nfunction quux() {\n\n}",
      "/**\n * @memberof module:namespace.SomeClass~\n */\nfunction quux() {\n\n}",
      "/**\n * @memberof! module:namespace.SomeClass.\n */\nfunction quux() {\n\n}",
      "/**\n *\n */\nfunction quux() {\n\n}",
      "/**\n * @aCustomTag\n */\nfunction quux() {\n\n}",
      "/**\n * @constant {string}\n */\n const FOO = 'foo';",
      "/**\n * @constant {string} FOO\n */\n const FOO = 'foo';",
      "/**\n * @extends Foo\n */\n class Bar {};",
      "/**\n * @extends Foo<String>\n */\n class Bar {};",
      "/**\n * @extends {Foo<String>}\n */\n class Bar {};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @typedef {number | string} UserDefinedType\n */",
      "/**\n * @typedef {number | string}\n */\nlet UserDefinedGCCType;\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @modifies {foo | bar}\n */\nfunction quux (foo, bar, baz) {}",
      "/**\n * @this {Navigator}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @export {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @define {boolean}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @define\n */\n function quux () {}",
      "/**\n * Foo function.\n *\n * @interface foo\n */\nfunction foo(bar) {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * Foo function.\n *\n * @param {[number, string]} bar - The bar array.\n */\nfunction foo(bar) {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * Foo function.\n *\n * @param {[number, string]} bar - The bar array.\n */\nfunction foo(bar) {}",
      "/**\n * Foo function.\n *\n * @param {[number, string]} bar - The bar array.\n */\nfunction foo(bar) {}\n// Settings: {\"jsdoc\":{\"mode\":\"permissive\"}}",
      "/**\n * @typedef {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":false}]",
      "/**\n * @private {SomeType}\n */\nfunction quux () {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @param\n */\nfunction quux() {\n\n}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":false}]",
      "/**\n * @see\n */\nfunction quux() {\n\n}\n// Settings: {\"jsdoc\":{\"structuredTags\":{\"see\":{\"name\":\"namepath-referencing\"}}}}",
      "/**\n * @template T, R\n * @param {function(!T): !R} parser\n * @return {function(!Array<!T>): !Array<!R>}\n */\nparseArray = function(parser) {\n    return function(array) {\n        return array.map(parser);\n    };\n};\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @template T, R<~\n * @param {function(!T): !R} parser\n * @return {function(!Array<!T>): !Array<!R>}\n */\nparseArray = function(parser) {\n    return function(array) {\n        return array.map(parser);\n    };\n};\n// Settings: {\"jsdoc\":{\"mode\":\"jsdoc\"}}",
      "/**\n * @template {string} K - K must be a string or string literal\n * @template {{ serious: string }} Seriousalizable - must have a serious property\n * @param {K} key\n * @param {Seriousalizable} object\n */\nfunction seriousalize(key, object) {\n  // ????\n}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @module foo/bar\n */",
      "/**\n * @module module:foo/bar\n */",
      "/**\n * @template invalid namepath,T Description\n */\nfunction f() {}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * Description of complicated type.\n *\n * @template T Description of the T type parameter.\n * @template U - Like other tags, this can have an optional hyphen before the description.\n * @template V,W More parameters\n * @template W,X - Also with a hyphen\n */\ntype ComplicatedType<T, U, V, W, X> = never",
      "/** Multi-line typedef for an options object type.\n *\n * @typedef {{\n *   prop: number\n * }} MyOptions\n */",
      "/**\n * @extends {SomeType}\n */\nclass quux {}\n// Settings: {\"jsdoc\":{\"mode\":\"typescript\"}}",
      "/**\n * @suppress {visibility|underscore}\n */\nfunction quux() {\n}\n// Settings: {\"jsdoc\":{\"mode\":\"closure\"}}",
      "/**\n * @param {string} id\n * @param {Object} options\n * @param {boolean} options.isSet\n * @param {string} options.module\n */\nfunction quux ( id, options ) {\n}",
      "\n/**\n * Assign the project to a list of employees.\n * @param {Object[]} employees - The employees who are responsible for the project.\n * @param {string} employees[].name - The name of an employee.\n * @param {string} employees[].department - The employee's department.\n */\nfunction assign(employees) {\n  // ...\n}\n// \"jsdoc/valid-types\": [\"error\"|\"warn\", {\"allowEmptyNamepaths\":true,\"checkSeesForNamepaths\":false}]"
    ]
  }
}